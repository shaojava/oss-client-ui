"use strict";!function(window){function isOSSClient(){var sync=navigator.userAgent.split(";")[0]||"";return"oss"==sync.toLowerCase()}function getCanonicalizedOssHeaders(headers){var tmp_headers={},canonicalized_oss_headers="";for(var k in headers)0===k.toLowerCase().indexOf("x-oss-",0)&&(tmp_headers[k.toLowerCase()]=headers[k]);if(tmp_headers!={}){var x_header_list=[];for(var k in tmp_headers)x_header_list.push(k);x_header_list.sort();for(var k in x_header_list)canonicalized_oss_headers+=x_header_list[k]+":"+tmp_headers[x_header_list[k]]+"\n"}return canonicalized_oss_headers}var accessId="",accessSecret="",OSSClient={getAccessID:function(){return JSON.stringify(accessId)},getSignature:function(param){var parseParam=JSON.parse(param),arr=[parseParam.verb,parseParam.content_md5,parseParam.content_type,parseParam.expires],canonicalizedOSSheaders="";parseParam.canonicalized_oss_headers&&(canonicalizedOSSheaders=getCanonicalizedOssHeaders(parseParam.canonicalized_oss_headers));var canonicalizedResource=parseParam.canonicalized_resource;return JSON.stringify(CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA1(arr.join("\n")+"\n"+canonicalizedOSSheaders+canonicalizedResource,accessSecret)))},changeHost:function(region){region=JSON.parse(region);var host=[region,region?".":"","aliyuncs.com"].join("");return JSON.stringify(host)},changeUpload:function(){},changeDownload:function(){},getUpload:function(){return JSON.stringify({download:0,upload:0,count:1,list:[{bucket:"121212121212",object:"PhpStorm-8.0.dmg",fullpath:"C:\\Users\\george\\Desktop\\PhpStorm-8.0.dmg",offset:1e8,filesize:137181104,status:5,speed:1e4,errormsg:""},{bucket:"121212121212",object:"PhpStorm-8.0.dmg",fullpath:"C:\\Users\\george\\Desktop\\PhpStorm-8.0.dmg",offset:0,filesize:137181104,status:5,speed:0,errormsg:""}]})},getDownload:function(){},configInfo:function(){JSON.stringify({source:"",disable_location_select:0,host:"aliyuncs.com",showrefer:!1,showchannel:!1,custom_server_host:"",locations:[{location:"oss-cn-guizhou-a",name:"互联网",enable:0,network:"internet"},{location:"oss-cn-guizhou-a-internal",name:"政务外网",enable:0,network:"internet"},{location:"oss-cn-gzzwy-a-internal",name:"政务外网",enable:0,network:"intranet"},{location:"oss-cn-hangzhou-a",name:"杭州",enable:1},{location:"oss-cn-qingdao-a",name:"青岛",enable:1},{location:"oss-cn-beijing-a",name:"北京",enable:1},{location:"oss-cn-hongkong-a",name:"香港",enable:1},{location:"oss-cn-shenzhen-a",name:"深圳",enable:1},{location:"oss-cn-shanghai",name:"上海",enable:1},{location:"oss-ap-southeast-1",name:"新加坡",enable:1},{location:"oss-us-west-1",name:"美国",enable:1}]});return JSON.stringify({source:"guizhou",disable_location_select:1,host:"aliyuncs.com",showrefer:!0,showchannel:!0,custom_server_host:"http://yunsanyun.api.com",locations:[{location:"oss-cn-guizhou",name:"互联网",enable:1,network:"internet"},{location:"oss-cn-guizhou-internal",name:"政务外网",enable:1,network:"internet"},{location:"oss-cn-gzzwy-a-internal",name:"政务外网",enable:1,network:"intranet"},{location:"oss-cn-hangzhou-a",name:"杭州",enable:0},{location:"oss-cn-qingdao-a",name:"青岛",enable:0},{location:"oss-cn-beijing-a",name:"北京",enable:0},{location:"oss-cn-hongkong-a",name:"香港",enable:0},{location:"oss-cn-shenzhen-a",name:"深圳",enable:0},{location:"oss-cn-shanghai",name:"上海",enable:0},{location:"oss-ap-southeast-1",name:"新加坡",enable:1},{location:"oss-us-west-1",name:"美国",enable:0}]})},getCurrentLocation:function(){return JSON.stringify("oss-cn-guizhou-a")}};isOSSClient()||(window.OSSClient=OSSClient)}(window),window.debug=!1;var debugInterfaces=[],OSS={invoke:function(name,param,callback,log){var _self=this;if("undefined"==typeof OSSClient)throw new Error("Can not find OSSClient");if("function"!=typeof OSSClient[name]&&debugInterfaces.indexOf(name)<0)throw new Error("Can not find interface "+name);var args=[];param&&args.push(JSON.stringify(param)),"function"==typeof callback&&args.push(function(re){log!==!1&&_self.log(name+":callback",re),re=re?"object"==typeof re?re:JSON.parse(re):"",callback(re)});var re="";return log!==!1&&this.log(name,args),args.length?1==args.length?re=OSSClient[name](args[0]):2==args.length&&(re=OSSClient[name](args[0],args[1])):re=debugInterfaces.indexOf(name)>=0?this[name]():OSSClient[name](),log!==!1&&this.log(name+":return",re),re=re?JSON.parse(re):""},log:function(name,info){window.debug&&console.log("%c"+name,"color:blue",info)},getUserAgent:function(){return navigator.userAgent.split(";")},getClientOS:function(){var os=this.getUserAgent()[2]||"";return os.toLowerCase()},isWindowsClient:function(){return"windows"==this.getClientOS()},isMacClient:function(){return"mac"==this.getClientOS()},isClientOS:function(){return this.isWindowsClient()||this.isMacClient()},isOSSClient:function(){var sync=this.getUserAgent()[0]||"";return"gk_sync"==sync.toLowerCase()}};angular.module("OSSCommon",["ui.select"]).config(["uiSelectConfig",function(uiSelectConfig){uiSelectConfig.theme="bootstrap"}]).factory("OSSI18N",["OSSConfig",function(OSSConfig){var _lanArrs=[{name:"简体中文",lan:"zh_CN",key:1},{name:"繁體中文",lan:"zh_TW",key:3},{name:"English",lan:"en_US",key:2}];return{setDefaultLan:function(){},getLanLists:function(){return _lanArrs},getLanByKey:function(_key){return _.find(_lanArrs,function(item){return+item.key===+_key})},getCurrLan:function(){var _defaultLanKey=OSSConfig.getConfig().defaultLan;_defaultLanKey||(_defaultLanKey="zh_CN");var _defaultLan=_.find(_lanArrs,function(item){return item.lan===_defaultLanKey}),_lan={type:_defaultLan.key};if(OSSClient.gGetLanguage){var _l=OSS.invoke("gGetLanguage"),_cl=_.find(_lanArrs,function(item){return+item.key===+_l.type});_cl&&_cl.lan&&(_lan=_l)}var currLan=_.find(_lanArrs,function(item){return+item.key===+_lan.type});return currLan},setCurrLan:function(_lan){return OSSClient.gChangeLanguage?void OSS.invoke("gChangeLanguage",{type:_lan}):!1}}}]).factory("OSSDialog",[function(){var defaultParam={type:"normal",resize:0,width:490,height:420};return{exportNewsWindow:function(data){var winParams={type:"normal",resize:0,width:490,height:300},UIPath=OSS.invoke("getUIPath");OSS.invoke("showWnd",angular.extend(data||{},winParams,{url:UIPath+"/window-news.html"}))},exportAuthorization:function(){var UIPath=OSS.invoke("getUIPath");OSS.invoke("showWnd",angular.extend({},defaultParam,{url:UIPath+"/export-authorization.html"}))},customServerHost:function(){var UIPath=OSS.invoke("getUIPath");OSS.invoke("showWnd",angular.extend({},defaultParam,{url:UIPath+"/custom-domain.html"}))},setting:function(){var UIPath=OSS.invoke("getUIPath");OSS.invoke("showWnd",angular.extend({},defaultParam,{url:UIPath+"/setting.html"}))}}}]).factory("OSSNews",["OSSI18N","OSSConfig","$http","$q",function(OSSI18N,OSSConfig,$http,$q){var tabNews=null,winNews=null,isTabNewsNew=!1,isWinNewsNew=!1,times=0,getCurrentLan=function(){var lans={zh_CN:"chs",zh_TW:"cht",en_US:"eng"},_currentLan=OSSI18N.getCurrLan();return lans[_currentLan.lan]},getNewsSign=function(params){for(var paramsStr="",i=0;i<params.length;i++)paramsStr+=params[i],i<params.length-1&&(paramsStr+="\n");var signStr=CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA1(paramsStr,OSSConfig.getConfig().news.key));return signStr.replace(/\//g,"-")};return{getNews:function(clientType,newsLocation){for(var params={res:clientType,loc:newsLocation,lan:getCurrentLan(),sta:OSSConfig.getConfig().news.isPreview?"preview":"standard"},_keyArr=["res","loc","lan","sta"].sort(),paramsVal=[],i=0;i<_keyArr.length;i++)paramsVal.push(params[_keyArr[i]]);var sign=encodeURIComponent(getNewsSign(paramsVal)),url=OSSConfig.getConfig().news.baseUri+OSSConfig.getConfig().news.getUri+"/sta/"+(OSSConfig.getConfig().news.isPreview?"preview":"standard")+"/res/"+clientType+"/loc/"+newsLocation+"/lan/"+getCurrentLan()+"/sign/"+sign;return $http.get(url,{timeout:5e3})},getTabsNews:function(){var clientType="aliyun";return OSSConfig.getConfig().news&&OSSConfig.getConfig().news.clientType&&(clientType=OSSConfig.getConfig().news.clientType),this.getNews(clientType,"AD0122")},getWinNews:function(){var clientType="aliyun";return OSSConfig.getConfig().news&&OSSConfig.getConfig().news.clientType&&(clientType=OSSConfig.getConfig().news.clientType),this.getNews(clientType,"AD0121")},isTabNews:function(loc){return"AD0122"===loc.toUpperCase()},isWinNews:function(loc){return"AD0121"===loc.toUpperCase()},getIsTabNewsNew:function(){return isTabNewsNew},setIsTabNewsNew:function(){isTabNewsNew=!1},getIsWinNewsNew:function(){return isWinNewsNew},setIsWinNewsNew:function(){isWinNewsNew=!1},getNewsData:function(_news){if(_news&&!_news.err){if(this.isTabNews(_news.loc)&&(!tabNews||tabNews.aid!=_news.aid))return tabNews=_news,isTabNewsNew=!0,tabNews;if(this.isTabNews(_news.loc)&&tabNews&&tabNews.aid==_news.aid)return tabNews;if(this.isWinNews(_news.loc)&&(!winNews||winNews.aid!=_news.aid))return winNews=_news,isWinNewsNew=!0,winNews;if(this.isWinNews(_news.loc)&&winNews&&winNews.aid==_news.aid)return winNews}return{loc:_news.loc,err:1}},getWinNewsData:function(){var _this=this,winDefer=$q.defer();return _this.getWinNews().then(function(res){var _image="",_color="",_title="",_desc="";res.data.image&&(_image=decodeURIComponent(res.data.image)),_color=res.data.bgcolor||"",res.data.title&&(_title=decodeURIComponent(res.data.title)),res.data.description&&(_desc=decodeURIComponent(res.data.description)),res.data=angular.extend(res.data,{loc:"AD0121",image:_image,title:_title,description:_desc,imgs:_image.split(","),bgColors:_color.split(","),titles:_title.split(","),descs:_desc.split(",")}),winDefer.resolve(_this.getNewsData(res.data))},function(msg){winDefer.resolve(_this.getNewsData({err:1,loc:"AD0121"}))}),winDefer.promise},getAllNews:function(){times+=1;var _this=this,promises=[],tabDefer=$q.defer();_this.getTabsNews().then(function(res){var _image="",_color="",_titleColor="",_title="",_desc="";res.data.image&&(_image=decodeURIComponent(res.data.image)),_color=res.data.bgcolor||"",_titleColor=res.data.titlecolor||"",res.data.title&&(_title=decodeURIComponent(res.data.title)),res.data.description&&(_desc=decodeURIComponent(res.data.description)),res.data=angular.extend(res.data,{loc:"AD0122",image:_image,title:_title,description:_desc,imgs:_image.split(","),bgColors:_color.split(","),titleColors:_titleColor.split(","),titles:_title.split(","),descs:_desc.split(",")}),tabDefer.resolve(_this.getNewsData(res.data))},function(msg){tabDefer.resolve(_this.getNewsData({err:1,loc:"AD0122"}))});var winDefer=$q.defer();return _this.getWinNews().then(function(res){var _image="",_color="",_titleColor="",_title="",_desc="";res.data.image&&(_image=decodeURIComponent(res.data.image)),_color=res.data.bgcolor||"",_titleColor=res.data.titlecolor||"",res.data.title&&(_title=decodeURIComponent(res.data.title)),res.data.description&&(_desc=decodeURIComponent(res.data.description)),res.data=angular.extend(res.data,{loc:"AD0121",image:_image,title:_title,description:_desc,imgs:_image.split(","),bgColors:_color.split(","),titleColors:_titleColor.split(","),titles:_title.split(","),descs:_desc.split(",")}),winDefer.resolve(_this.getNewsData(res.data))},function(msg){winDefer.resolve(_this.getNewsData({err:1,loc:"AD0121"}))}),promises.push(tabDefer.promise),promises.push(winDefer.promise),$q.all(promises)},clickNews:function(aid,ord){for(var params={aid:aid,ord:ord},_keyArr=["aid","ord"].sort(),paramsVal=[],i=0;i<_keyArr.length;i++)paramsVal.push(params[_keyArr[i]]);var sign=encodeURIComponent(getNewsSign(paramsVal)),url=OSSConfig.getConfig().news.baseUri+OSSConfig.getConfig().news.clickUri+"/aid/"+aid+"/ord/"+ord+"/sign/"+sign;return url}}}]).factory("OSSVersionLogs",["OSSI18N","$http","$q",function(OSSI18N,$http,$q){var versionLogs=null;return{getVersionLogs:function(){var defer=$q.defer();return $http.get("version-change-log.txt").then(function(res){versionLogs={version:res.data.version,updateTime:res.data.updateTime,currentLogs:res.data.logs.current[OSSI18N.getCurrLan().lan],nextLogs:res.data.logs.next[OSSI18N.getCurrLan().lan]},defer.resolve(versionLogs)},function(res){defer.resolve({err:1})}),defer.promise}}}]).factory("OSSConfig",["gettext",function(gettext){var config=OSS.invoke("configInfo");return config||(config={source:"",disable_location_select:0,hideLogo:!1,showchannel:!1,showrefer:!1,showLanSetting:!0,showRam:!0,defaultLan:"zh_CN",host:"aliyuncs.com",news:{isPreview:!1,clientType:"aliyun",key:"staycloud",baseUri:"http://ossupdate.jiagouyun.com",getUri:"/Interface/getNewAd",clickUri:"/Interface/onAdClick"},locations:[{location:"oss-cn-guizhou-a",name:gettext("互联网"),enable:0,network:"internet"},{location:"oss-cn-guizhou-a-internal",name:gettext("政务外网"),enable:0,network:"internet"},{location:"oss-cn-gzzwy-a-internal",name:gettext("政务外网"),enable:0,network:"intranet"},{location:"oss-cn-hangzhou",name:gettext("杭州"),enable:1},{location:"oss-cn-qingdao",name:gettext("青岛"),enable:1},{location:"oss-cn-beijing",name:gettext("北京"),enable:1},{location:"oss-cn-hongkong",name:gettext("香港"),enable:1},{location:"oss-cn-shenzhen",name:gettext("深圳"),enable:1},{location:"oss-cn-shanghai",name:gettext("上海"),enable:1},{location:"oss-ap-southeast-1",name:gettext("新加坡"),enable:1},{location:"oss-us-west-1",name:gettext("美国"),enable:1},{location:"oss-tw-kaohsiung",name:gettext("台湾高雄"),enable:0},{location:"oss-cn-qdjbp-a",name:"青岛-金融云",enable:1},{location:"oss-cn-shenzhen-finance-1",name:"深圳-金融云",enable:1},{location:"oss-cn-hzjbp-b",name:"杭州-金融云",enable:1}]}),{isHideLogo:function(){return config.hideLogo},isCustomClient:function(){return config.source&&""!=config.source&&"taiwan"!=config.source&&"jinrongyun"!=config.source},isGuiZhouClient:function(){return"guizhou"==config.source},isHeNanClient:function(){return"henan"==config.source},isGanSuClient:function(){return"gansu"==config.source},isAnHuiClient:function(){return"anhui"==config.source},isGuiYangClient:function(){return"guiyang"==config.source},getConfig:function(){return config},showLanSetting:function(){return!!config.showLanSetting},showRefer:function(){return!!config.showrefer},showRam:function(){return!!config.showRam},showChannel:function(){return!!config.showchannel},isDisableLocationSelect:function(){return 1==config.disable_location_select},getLocations:function(){return config.locations||[]},hasMoreZwLocations:function(){return"guizhou"==config.source||"gansu"==config.source||"henan"==config.source},getHost:function(){return config.host}}}]).factory("OSSRegion",["OSSConfig","localStorageService",function(OSSConfig,localStorageService){var locations=OSSConfig.getLocations(),currentLocation=OSS.invoke("getCurrentLocation");return{getRegionPerfix:function(){return"CLIENT_LOGIN_REGION"},list:function(_netType){var params={enable:1};return _netType&&(params.network=_netType),_.where(locations,params)},getEnableRegionByLocation:function(location){var enableLocations=this.list();return _.find(enableLocations,function(item){return 0===location.indexOf(item.location)||0===location.indexOf(item.location.replace("-a-internal",""))||0===location.indexOf(item.location.replace("-a",""))||0===location.indexOf(item.location.replace("-internal",""))||0===location.indexOf(item.location.replace("-b-internal",""))||0===location.indexOf(item.location.replace("-b",""))||0===location.indexOf(item.location.replace("-finance",""))||location.indexOf(item.location.replace("-finance-1",""))})},getRegionByLocation:function(location){var _region=_.find(locations,function(item){return item.enable&&(location==item.location||location==item.location.replace("-internal","")||location+"-a"==item.location.replace("-internal","")||location+"-b"==item.location.replace("-internal","")||location+"-finance-1"==item.location.replace("-internal",""))});return currentLocation&&!_region&&(_region=_.find(locations,function(item){return currentLocation.replace("-internal","")==item.location})),_region},changeLocation:function(location){var isIntranetNet=localStorageService.get(this.getRegionPerfix()),isIntranet=this.isIntranet(currentLocation);if(isIntranetNet){var intranetLocations=[];intranetLocations=isIntranet&&"1"===isIntranetNet?this.getIntranetLocationItem():[this.getInternetLocationItem()].concat([this.getIntranetInner(OSSConfig.hasMoreZwLocations())]);var _location=location;return angular.forEach(intranetLocations,function(item){(item.location===location||item.location===location+"-internal"||item.location===location+"-a-internal")&&(_location=item.location)}),_location}if(location.indexOf("-internal")>0)return location;if(currentLocation){if(currentLocation&&location+"-a"==currentLocation)return location+"-a";if(currentLocation&&location+"-internal"==currentLocation)return location+"-internal";if(currentLocation&&location+"-a-internal"==currentLocation)return location+"-a-internal";if(currentLocation&&location+"-b"==currentLocation)return location+"-b";if(currentLocation&&location+"-b-internal"==currentLocation)return location+"-b-internal";if(currentLocation&&location+"-finance"==currentLocation)return location+"-finance";if(currentLocation&&location+"-finance-1"==currentLocation)return location+"-finance-1"}else{var _region=_.find(locations,function(item){return item.enable&&(location==item.location.replace("-internal","")||location+"-a"==item.location.replace("-internal","")||location+"-b"==item.location.replace("-internal","")||location+"-finance-1"==item.location.replace("-internal",""))});if(_region)return _region.location}return location},isIntranet:function(location,network,customHost){if(customHost){var region=_.find(locations,function(item){return 1===item.enable&&item.customhost===customHost});if(region&&"intranet"===region.network)return!0}else if(location){var region=_.find(locations,function(item){return 1===item.enable&&item.location===location});if(region&&"intranet"===region.network)return!0}else if(network&&"intranet"===network)return!0;return!1},getIntranetLocationItem:function(){return _.filter(locations,function(item){return 1===item.enable&&"intranet"===item.network})},getInternetLocationItem:function(){return _.find(locations,function(item){return 1===item.enable&&"internet"===item.network})},getIntranetLocation:function(location){return location.replace("-internal","")},getIntranetInner:function(loadInner){return loadInner?this.getIntranetLocationItem()[1]:this.getIntranetLocationItem()[0]}}}]).factory("OSSException",["OSSConfig","gettext","gettextCatalog",function(OSSConfig,gettext,gettextCatalog){var erroList={getClientMessage:function(resError){if("AccessDenied"==resError.Code&&"Request has expired."==resError.Message){var serverTime=new Date(resError.ServerTime).getTime(),clientTime=new Date(resError.Expires).getTime(),expiresTime=parseInt(Math.abs(clientTime-serverTime)/1e3),d=parseInt(parseInt(expiresTime)/3600/24),h=parseInt(parseInt(expiresTime)/3600%24),m=parseInt(parseInt(expiresTime)/60%60),s=parseInt(parseInt(expiresTime)%60),str_fast_day=gettextCatalog.getString(gettext("数据加载失败，当前您电脑的时间比服务器时间快{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。"),{d:d,h:h,m:m,s:s}),str_flow_day=gettextCatalog.getString(gettext("数据加载失败，当前您电脑的时间比服务器时间慢{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。"),{d:d,h:h,m:m,s:s});return clientTime-serverTime>0?str_fast_day:0>clientTime-serverTime?str_flow_day:void 0}return erroList[resError.Code]?erroList[resError.Code]:resError.Message},AccessDenied:gettextCatalog.getString(gettext("拒绝访问")),BucketAlreadyExists:gettextCatalog.getString(gettext("Bucket已经存在")),BucketNotEmpty:gettextCatalog.getString(gettext("Bucket不为空")),EntityTooLarge:gettextCatalog.getString(gettext("实体过大")),EntityTooSmall:gettextCatalog.getString(gettext("实体过小")),FileGroupTooLarge:gettextCatalog.getString(gettext("文件组过大")),FilePartNotExist:gettextCatalog.getString(gettext("文件Part不存在")),FilePartStale:gettextCatalog.getString(gettext("文件Part过时")),InvalidArgument:gettextCatalog.getString(gettext("参数格式错误")),InvalidAccessKeyId:gettextCatalog.getString(gettext("Access Key ID不存在")),InvalidBucketName:gettextCatalog.getString(gettext("无效的Bucket名字")),InvalidDigest:gettextCatalog.getString(gettext("无效的摘要")),InvalidObjectName:gettextCatalog.getString(gettext("无效的Object名字")),InvalidPart:gettextCatalog.getString(gettext("无效的Part")),InvalidPartOrder:gettextCatalog.getString(gettext("无效的part顺序")),InvalidTargetBucketForLogging:gettextCatalog.getString(gettext("Logging操作中有无效的目标bucket")),InternalError:gettextCatalog.getString(gettext("OSS内部发生错误")),MalformedXML:gettextCatalog.getString(gettext("XML格式非法")),MethodNotAllowed:gettextCatalog.getString(gettext("不支持的方法")),MissingArgument:gettextCatalog.getString(gettext("缺少参数")),MissingContentLength:gettextCatalog.getString(gettext("缺少内容长度")),NoSuchBucket:gettextCatalog.getString(gettext("Bucket不存在")),NoSuchKey:gettextCatalog.getString(gettext("文件不存在")),NoSuchUpload:gettextCatalog.getString(gettext("Multipart Upload ID不存在")),NotImplemented:gettextCatalog.getString(gettext("无法处理的方法")),PreconditionFailed:gettextCatalog.getString(gettext("预处理错误")),RequestTimeTooSkewed:gettextCatalog.getString(gettext("发起请求的时间和服务器时间超出15分钟")),RequestTimeout:gettextCatalog.getString(gettext("请求超时")),SignatureDoesNotMatch:gettextCatalog.getString(gettext("签名错误")),TooManyBuckets:gettextCatalog.getString(gettext("Bucket数目超过限制")),"DeleteConflict.User.Group":gettextCatalog.getString(gettext("用户还有加入的组")),"DeleteConflict.User.Policy":gettextCatalog.getString(gettext("用户还有加入的授权")),"DeleteConflict.Group.Policy":gettextCatalog.getString(gettext("用户组还有加入的授权")),"DeleteConflict.Group.User":gettextCatalog.getString(gettext("用户组下面还有用户")),"InvalidParameter.Role.InvalidChars":gettextCatalog.getString(gettext("角色名称含有不支持的字符")),"InvalidParameter.AssumeRolePolicyDocument.Length":gettextCatalog.getString(gettext("策略规则长度超过限制")),"EntityAlreadyExists.Role":gettextCatalog.getString(gettext("角色已存在")),"LimitExceeded.Role":gettextCatalog.getString(gettext("角色数已达最大限制")),"EntityNotExist.Role":gettextCatalog.getString(gettext("角色不存在")),"DeleteConflict.Role.Policy":gettextCatalog.getString(gettext("角色还存在策略规则")),"InvalidParameter.UserName.InvalidChars":gettextCatalog.getString(gettext("用户名称含有不支持的字符")),"InvalidParameter.DisplayName.InvalidChars":gettextCatalog.getString(gettext("用户显示名称含有不支持的字符")),"EntityAlreadyExists.User":gettextCatalog.getString(gettext("用户已存在")),"LimitExceeded.User":gettextCatalog.getString(gettext("用户数量已达最大限制")),"EntityNotExist.User":gettextCatalog.getString(gettext("用户不存在")),"InvalidParameter.NewMobilePhone.Format":gettextCatalog.getString(gettext("手机号码格式错误")),"InvalidParameter.NewEmail.Format":gettextCatalog.getString(gettext("邮箱格式错误")),"DeleteConflict.User.AccessKey":gettextCatalog.getString(gettext("当前用户还有创建的AK")),"LimitExceeded.User.AccessKey":gettextCatalog.getString(gettext("用户AK已达最大限制")),"EntityNotExist.User.AccessKey":gettextCatalog.getString(gettext("用户AK不存在")),"EntityAlreadyExists.Group":gettextCatalog.getString(gettext("用户组已存在")),"LimitExceeded.Group":gettextCatalog.getString(gettext("用户组已达最大限制")),"EntityNotExist.Group":gettextCatalog.getString(gettext("用户组不存在")),"EntityAlreadyExists.Policy":gettextCatalog.getString(gettext("授权策略已存在")),"LimitExceeded.Policy":gettextCatalog.getString(gettext("授权策略已达最大限制")),"EntityNotExist.Policy":gettextCatalog.getString(gettext("授权策略不存在")),"DeleteConflict.Policy.User":gettextCatalog.getString(gettext("授权策略下还有用户")),"DeleteConflict.Policy.Group":gettextCatalog.getString(gettext("授权策略下还有用户组")),"DeleteConflict.Policy.Version":gettextCatalog.getString(gettext("授权策略下还有其他版本")),"LimitExceeded.Policy.Version":gettextCatalog.getString(gettext("版本数已达最大限制")),"EntityNotExist.Policy.Version":gettextCatalog.getString(gettext("版本号不存在")),"DeleteConflict.Policy.Version.Default":gettextCatalog.getString(gettext("默认版本号不能删除")),"EntityAlreadyExists.User.Policy":gettextCatalog.getString(gettext("用户已经授权了该策略")),"LimitExceeded.User.Policy":gettextCatalog.getString(gettext("用户添加的授权策略已达最大限制")),"EntityNotExist.User.Policy":gettextCatalog.getString(gettext("用户未授权该策略")),"EntityAlreadyExists.Group.Policy":gettextCatalog.getString(gettext("用户组已经授权了该策略")),"LimitExceeded.Group.Policy":gettextCatalog.getString(gettext("用户组添加的授权策略已达最大限制")),"EntityNotExist.Group.Policy":gettextCatalog.getString(gettext("用户组未授权该策略")),"EntityAlreadyExists.Role.Policy":gettextCatalog.getString(gettext("角色已经授权了该策略")),"LimitExceeded.Role.Policy":gettextCatalog.getString(gettext("角色添加的授权策略已达最大限制")),"EntityNotExist.Role.Policy":gettextCatalog.getString(gettext("角色未授权该策略")),MalformedPolicyDocument:gettextCatalog.getString(gettext("策略规则不正确"))};return{getError:function(res,status){var error={status:status,code:"",msg:""};if(res){var resError=res.Error;angular.extend(error,{code:resError.Code||"",msg:resError.Message||""});var message=erroList.getClientMessage(resError);angular.extend(error,{msg:message})}else{var msg="";403==status?msg=erroList.AccessDenied:(msg=gettextCatalog.getString(gettext("网络请求错误")),OSSConfig.isCustomClient()&&(msg+='<p class="text-muted">'+gettextCatalog.getString(gettext("（可能是你登录时选择的区域与当前的网络环境不匹配，请退出客户端后重新选择）"))+"</p>")),angular.extend(error,{msg:msg})}return error},getClientErrorMsg:function(res){return OSSConfig.isGuiYangClient()&&10==res.error?gettextCatalog.getString(gettext("登录失败，网络请求错误")):res.message}}}]).factory("Clipboard",function(){var maxLen=1,container=[];return{clear:function(){container=[]},len:function(){return container.length},get:function(){var item=container.shift();return OSS.log("Clipboard.get",item),item},add:function(data){container.push(data),container.length>maxLen&&container.shift(),OSS.log("Clipboard.add",data)}}}).filter("baseName",function(){return Util.String.baseName}).filter("isDir",function(){return function(path){var lastStr=Util.String.lastChar(path);return"/"===lastStr||"\\"===lastStr?1:0}}).filter("getLocationName",["OSSRegion",function(OSSRegion){return function(location){if(!location)return"";var region=OSSRegion.getRegionByLocation(location);return region?region.name:""}}]).directive("ngRightClick",["$parse",function($parse){return function($scope,$element,$attrs){var fn=$parse($attrs.ngRightClick);$element.bind("contextmenu",function(event){$scope.$apply(function(){event.preventDefault(),fn($scope,{$event:event})})})}}]).directive("scrollLoad",["$rootScope","$parse",function($rootScope,$parse){return{restrict:"A",link:function($scope,$element,attrs){var triggerDistance=0,disableScroll=!1;null!=attrs.triggerDistance&&$scope.$watch(attrs.triggerDistance,function(value){return triggerDistance=parseInt(value||0,10)}),null!=attrs.disableScroll&&$scope.$watch(attrs.disableScroll,function(value){return disableScroll=!!value});var direction="down";attrs.triggerDirection&&(direction=attrs.triggerDirection);var startScrollTop=0,fn=$parse(attrs.scrollLoad);$element.on("scroll.scrollLoad",function(event){var _self=jQuery(this),realDistance=0,scrollH=0,scrollT=0,isScrollDown=!1;scrollH=jQuery.isWindow(this)?document.body.scrollHeight:$element[0].scrollHeight,scrollT=_self.scrollTop(),isScrollDown=scrollT>startScrollTop;var clientHeight=jQuery.isWindow(this)?document.documentElement.clientHeight||document.body.clientHeight:this.clientHeight;realDistance="down"==direction?scrollH-scrollT-clientHeight:scrollT,triggerDistance>=realDistance&&!disableScroll&&(!isScrollDown&&"up"==direction||isScrollDown&&"down"==direction)&&$scope.$apply(function(){fn($scope,{$event:event})}),startScrollTop=scrollT}),$scope.$on("$destroy",function(){$element.off("scroll.scrollLoad")})}}}]).directive("scrollToItem",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){attrs.$observe("scrollToItem",function(newVal){"undefiend"!=typeof newVal&&$timeout(function(){var index=newVal;if(!(0>index)){var $fileItem=element.find(attrs.itemSelector+":eq("+index+")");if($fileItem.size()){var top=$fileItem.position().top,grep=top+$fileItem.height()-element.height();0>top?element.scrollTop(element.scrollTop()+top):grep>0&&element.scrollTop(element.scrollTop()+grep)}}})})}}}]).directive("onDrop",["$parse",function($parse){return function(scope,element,attrs){var fn=$parse(attrs.onDrop);element.on("drop",function(event){scope.$apply(function(){fn(scope,{$event:event})})})}}]).directive("preventDragDrop",[function(){return{restrict:"A",link:function($scope,$element){$element.on("dragstart",function(event){var jTarget=jQuery(event.target);jTarget.attr("draggable")||jTarget.parents("[draggable]").size()||event.preventDefault()}),$element.on("dragover",function(event){event.preventDefault()}),$element.on("dragenter",function(event){event.preventDefault()}),$element.on("drop",function(event){event.preventDefault()})}}}]).directive("autoSelect",[function(){return{restrict:"A",link:function(scope,element,attrs){var isAutoSelect=!1;attrs.$observe("autoSelect",function(isAuto){isAutoSelect=isAuto}),element.on("click.autoSelect",function(){isAutoSelect&&element.select()})}}}]).directive("locationSelect",["$rootScope","OSSRegion","OSSConfig","$http","localStorageService",function($rootScope,OSSRegion,OSSConfig,$http,localStorageService){return{restrict:"E",replace:!0,scope:{selectLocation:"=",loginNetworktype:"=",disableSelect:"=",name:"@",placeHolder:"@",searchDisabled:"=",defaultLocation:"@"},templateUrl:"views/location-select.html",link:function(scope){OSSConfig.isCustomClient()?scope.$watch("loginNetworktype",function(newVal){if(newVal)if(OSSRegion.isIntranet(null,newVal))if(OSSConfig.hasMoreZwLocations()){var region=OSSRegion.getIntranetInner(!1),host=OSSConfig.getHost(),requestUrl="http://"+region.location+"."+host;region.customhost&&region.customhost.length&&(requestUrl="http://"+region.customhost),$http.get(requestUrl,{timeout:3e3}).error(function(req,status){req||status?(localStorageService.set(OSSRegion.getRegionPerfix(),"1"),scope.locations=OSSRegion.getIntranetLocationItem()):(localStorageService.set(OSSRegion.getRegionPerfix(),"2"),scope.locations=[OSSRegion.getInternetLocationItem()].concat([OSSRegion.getIntranetInner(!0)])),$rootScope.$broadcast("unDisabledLocationSelect"),scope.locations.selected=_.find(scope.locations,function(region){return 0==region.location.indexOf(scope.defaultLocation)})})}else localStorageService.set(OSSRegion.getRegionPerfix(),"1"),scope.locations=OSSRegion.list(newVal),$rootScope.$broadcast("unDisabledLocationSelect"),scope.locations.selected=_.find(scope.locations,function(region){return 0==region.location.indexOf(scope.defaultLocation)});else localStorageService.remove(OSSRegion.getRegionPerfix()),scope.locations=OSSRegion.list(newVal),$rootScope.$broadcast("unDisabledLocationSelect"),scope.locations.selected=_.find(scope.locations,function(region){return 0==region.location.indexOf(scope.defaultLocation)})}):(localStorageService.remove(OSSRegion.getRegionPerfix()),scope.locations=OSSRegion.list(),scope.placeHolder||(scope.locations.selected=scope.locations[0]),scope.$watch("defaultLocation",function(newVal){newVal&&(scope.locations.selected=_.find(scope.locations,function(region){return 0==region.location.indexOf(newVal)}))})),scope.$watch("locations.selected",function(val){scope.selectLocation=val})}}}]);var ossClientCallback=function(name,param){console.log("客户端的回调[ossClientCallback]",arguments),"string"!=typeof name&&(name=String(name));var JSONparam,rootScope=jQuery(document).scope();param&&(JSONparam=JSON.parse(param)),rootScope&&rootScope.$broadcast(name,JSONparam)};ossClientCallback.getUpdateLoadingCount=function(){return"UpdateLoadingCount"},angular.module("ossClientUiApp",["ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngAnimate","ui.bootstrap","angularSpinner","OSSCommon","ng-context-menu","ui.select","LocalStorageModule","gettext"]).run(function(gettextCatalog,OSSI18N){OSSI18N.setDefaultLan(),gettextCatalog.currentLanguage=OSSI18N.getCurrLan().lan,gettextCatalog.debug=!1}).config(["$routeProvider","$httpProvider","uiSelectConfig",function($routeProvider,$httpProvider,uiSelectConfig){uiSelectConfig.theme="bootstrap",$routeProvider.when("/file/:bucket?/?:object*?",{templateUrl:"views/filelist.html",controller:"FileListCtrl",resolve:{buckets:function(Bucket){
return Bucket.list()}}}).when("/upload/:bucket",{templateUrl:"views/uploadlist.html",controller:"UploadListCtrl",resolve:{buckets:function(Bucket){return Bucket.list()}}}).otherwise({redirectTo:"/file"}),$httpProvider.defaults.transformResponse.unshift(function(response,header){return"application/xml"==header("content-type")?$.xml2json(response):response})}]),angular.module("ossClientUiApp").controller("MainCtrl",["$scope","usSpinnerService","OSSApi","OSSModal","Bucket","Bread","OSSLocationHistory","$rootScope","$filter","OSSDialog","OSSAlert","OSSLocation","$location","OSSConfig","OSSMenu","$interval","OSSDownloadQueue","SpeedService","gettext","gettextCatalog",function($scope,usSpinnerService,OSSApi,OSSModal,Bucket,Bread,OSSLocationHistory,$rootScope,$filter,OSSDialog,OSSAlert,OSSLocation,$location,OSSConfig,OSSMenu,$interval,OSSDownloadQueue,SpeedService,gettext,gettextCatalog){$scope.isCustomClient=OSSConfig.isCustomClient(),$scope.isHideLogo=OSSConfig.isHideLogo(),$scope.showRefer=OSSConfig.showRefer(),$scope.showChannel=OSSConfig.showChannel(),$scope.speedSetting=SpeedService.getSpeedSetting(),$scope.bucketsLoaded=!1,$scope.loadDownloadCount={count:0,downloadcount:0},usSpinnerService.spin("body-spinner"),$scope.$on("bucketsLoaded",function(){$scope.bucketsLoaded=!0,usSpinnerService.stop("body-spinner")}),$scope.buckets=[],$scope.showAddBucketModal=function(){OSSModal.addBucket().result.then(function(param){param&&"add"==param.act&&($scope.buckets.push(param.bucket),$scope.scrollToIndex=$scope.buckets.length-1,$location.path(OSSLocation.getUrl(param.bucket.Name)))})},$scope.showSpeedModal=function(){OSSModal.setSpeed()},$scope.editBucket=function(bucket){OSSModal.addBucket(bucket).result.then(function(param){param&&"del"==param.act&&Util.Array.removeByValue($scope.buckets,param.bucket)})},$scope.callbackSetting=function(bucket){OSSModal.callbackSetting(bucket)},$scope.manageBucketPartition=function(activeBucket){var url=OSSLocation.getUrl(activeBucket.Name,"","upload");$location.url(url)},$scope.setRefer=function(bucket){OSSModal.setRefer(bucket)},$scope.setImageServer=function(bucket){OSSModal.setImageServer(bucket)},$scope.downloadBucket=function(bucket){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要下载整个Bucket吗？"))).result.then(function(){OSSMenu.getMenu("bucketdownload").execute(bucket)})},$scope.$on(ossClientCallback.getUpdateLoadingCount(),function(event,loadDownLoadCount){$scope.loadDownloadCount=loadDownLoadCount}),$scope.$on("startDownloadFilesLoading",function(){$scope.OSSDownloadQueue=OSSDownloadQueue.init(),$scope.OSSDownloadQueue.refresh(),$scope.startDownloadFiles=!0}),$scope.$on("endDownloadFilesLoading",function(){$scope.startDownloadFiles=!1}),$scope.stopLoadDownloadQueue=function(){$scope.loadDownloadCount.downloadcount=0;var _delLoaded=$scope.delLoaded?1:0;OSS.invoke("stopLoadDownload",{all:_delLoaded})},$scope.onConextMenuShow=function(bucket){$scope.activeBucket=bucket},$scope.breads=[],$scope.backward=function(){OSSLocationHistory.backward()},$scope.backwardPath=function(){var _path=OSSLocationHistory.backwardPath();if(_path){_path=decodeURIComponent(_path),"/"==_path.charAt(_path.length-1)&&(_path=_path.substring(0,_path.length-1));var _index=_path.lastIndexOf("/");return _index>=0&&(_path=_path.substring(_index+1)),gettextCatalog.getString(gettext("返回到 {{path}}"),{path:_path})}return gettextCatalog.getString(gettext("返回"))},$scope.forward=function(){OSSLocationHistory.forward()},$scope.forwardPath=function(){var _path=OSSLocationHistory.forwardPath();if(_path){_path=decodeURIComponent(_path),"/"==_path.charAt(_path.length-1)&&(_path=_path.substring(0,_path.length-1));var _index=_path.lastIndexOf("/");return _index>=0&&(_path=_path.substring(_index+1)),gettextCatalog.getString(gettext("前进到 {{path}}"),{path:_path})}return gettextCatalog.getString(gettext("前进"))};var loadBuckets=function(){$scope.loading=!0,Bucket.list().then(function(buckets){buckets&&($scope.buckets=angular.isArray(buckets)?buckets:[buckets]),$scope.loading=!1})};loadBuckets();var loadNewBuckets=function(){$scope.loading||Bucket.loadNew().then(function(buckets){if(buckets){var newBuckets=angular.isArray(buckets)?buckets:[buckets];$scope.buckets=newBuckets}})};$interval(function(){loadNewBuckets()},3e5),$scope.refreshBuckets=function(){$scope.loading||($scope.loading=!0,Bucket.loadNew().then(function(buckets){if(buckets){var newBuckets=angular.isArray(buckets)?buckets:[buckets];$scope.buckets=newBuckets}$scope.loading=!1}))},$scope.breadFilter=function(value){return!value.hide},$scope.$on("$routeChangeSuccess",function(event,current,prev){if(prev&&prev.params){var oldBucket=Bucket.getBucket(prev.params.bucket);oldBucket&&Bucket.unselected(oldBucket)}var currentBucket,currentObjectPath="/",filter="file";if(current&&current.params&&current.params.bucket){if(current.$$route&&current.$$route.originalPath){var pathArr=current.$$route.originalPath.split("/");currentBucket=Bucket.getBucket(current.params.bucket),currentObjectPath=current.params.object,filter=pathArr[1]||"file"}}else $scope.buckets&&$scope.buckets.length&&(currentBucket=$scope.buckets[0].Name);currentBucket&&(Bucket.select(currentBucket),$scope.breads=Bread.getBreads(currentBucket.Name,currentObjectPath,filter),$scope.historyCanForward=OSSLocationHistory.canForward(),$scope.historyCanBackward=OSSLocationHistory.canBackward())}),$scope.exportAuthorization=function(){OSSModal.setting()},$scope.$on("toggleTransQueue",function(event,isShow){angular.isUndefined(isShow)?$scope.showTransQueue=!$scope.showTransQueue:$scope.showTransQueue=isShow}),$scope.$on("showError",function(event,errorMsg,errorTitle,buttons,options){errorMsg&&OSSAlert.error(errorMsg,errorTitle,buttons,options)}),$scope.$on("removeBucket",function(event,bucket){Util.Array.removeByValue($scope.buckets,bucket),bucket.selected&&$scope.buckets.length&&$location.path(OSSLocation.getUrl($scope.buckets[0].Name))}),$scope.currentLocation="OSS-1.1.4.0",$scope.currentNetType="";var _loginLocation=OSS.invoke("getCurrentLocation");_loginLocation&&($scope.currentLocation="OSS-1.1.4.0"+gettext("当前选择区域："),$scope.currentNetType=$filter("getLocationName")(OSS.invoke("getCurrentLocation")))}]).controller("TransQueueCtrl",["$scope","$interval","OSSQueueMenu","OSSUploadQueue","OSSDownloadQueue","$rootScope","gettext","gettextCatalog","OSSNews","OSSVersionLogs","OSSDialog","OSSI18N","localStorageService",function($scope,$interval,OSSQueueMenu,OSSUploadQueue,OSSDownloadQueue,$rootScope,gettext,gettextCatalog,OSSNews,OSSVersionLogs,OSSDialog,OSSI18N,localStorageService){$scope.uploadQueueMenus=OSSQueueMenu.getUploadMenu(),$scope.uploadMenuGroup=OSSQueueMenu.groupBy($scope.uploadQueueMenus,"upload"),$scope.downloadQueueMenus=OSSQueueMenu.getDownloadMenu(),$scope.downloadMenuGroup=OSSQueueMenu.groupBy($scope.downloadQueueMenus,"download"),$scope.getSelectedList=function(type){return _.where("download"==type?$scope.downloadList:$scope.uploadList,{selected:!0})},$scope.select=function(item,type){item.selected=!0,"download"==type?$scope.scrollToDownloadIndex=_.indexOf($scope.downloadList,item):$scope.scrollToUploadIndex=_.indexOf($scope.uploadList,item)},$scope.unSelect=function(item){item.selected=!1},$scope.unSelectAll=function(type){angular.forEach($scope.getSelectedList(type),function(item){$scope.unSelect(item,type)})},$scope.shiftLastUploadIndex=0,$scope.shiftLastDownloadIndex=0,$scope.handleItemClick=function($event,index,item,type){if($event.ctrlKey||$event.metaKey)item.selected?$scope.unSelect(item,type):$scope.select(item,type);else if($event.shiftKey){var lastIndex="download"==type?$scope.shiftLastDownloadIndex:$scope.shiftLastUploadIndex;if($scope.unSelectAll(type),index>lastIndex)for(var i=lastIndex;index>=i;i++)$scope.select("download"==type?$scope.downloadList[i]:$scope.uploadList[i],type);else if(lastIndex>index)for(var i=index;lastIndex>=i;i++)$scope.select("download"==type?$scope.downloadList[i]:$scope.uploadList[i],type)}else $scope.unSelectAll(type),$scope.select(item,type);$event.shiftKey||("download"==type?$scope.shiftLastDownloadIndex=index:$scope.shiftLastUploadIndex=index)},$scope.$on("removeQueue",function(event,type,items,callback){"upload"===type?angular.forEach(items,function(item){OSSUploadQueue.remove(item)}):angular.forEach(items,function(item){OSSDownloadQueue.remove(item)}),angular.isFunction(callback)&&callback()}),$scope.OSSUploadQueue=OSSUploadQueue.init(),$scope.uploadList=$scope.OSSUploadQueue.items,$scope.OSSUploadQueue.refresh(),$scope.$on("reloadUploadQueue",function(){$scope.OSSUploadQueue=OSSUploadQueue.init(),$scope.uploadList=$scope.OSSUploadQueue.items}),$scope.OSSDownloadQueue=OSSDownloadQueue.init(),$scope.downloadList=$scope.OSSDownloadQueue.items,$scope.OSSDownloadQueue.refresh(),$scope.$on("reloadDownloadQueue",function(){$scope.OSSDownloadQueue=OSSDownloadQueue.init(),$scope.downloadList=$scope.OSSDownloadQueue.items}),$scope.loadMoreQueue=function(type){"download"==type?($scope.loadingQueue=!0,$scope.OSSDownloadQueue.getQueueList($scope.downloadList.length),$scope.loadingQueue=!1):"upload"==type&&($scope.loadingQueue=!0,$scope.OSSUploadQueue.getQueueList($scope.uploadList.length),$scope.loadingQueue=!1)},$scope.toggleSlideQueue=function(){$scope.$emit("toggleTransQueue")},$scope.handleTransQueueDblClick=function($event){var $target=$($event.target);($target.hasClass("nav-tabs")||$target.parents(".nav").size())&&$scope.toggleSlideQueue()},$scope.tabs=[{name:"upload",title:gettext("上传队列")},{name:"download",title:gettext("下载队列")},{name:"log",title:gettext("错误日志")},{name:"news",title:gettext("最新资讯"),active:!0}],$scope.$on("toggleTransQueue",function($event,isShow,currentTab){if(angular.isUndefined(currentTab)){var tab=_.findWhere($scope.tabs,{active:!0});"news"==tab.name&&(OSSNews.setIsTabNewsNew(),$scope.tabsNews.isNew=!1)}else{var tab=_.findWhere($scope.tabs,{name:currentTab});tab&&!tab.selected&&(tab.active=!0),"upload"==tab?$scope.scrollToUploadIndex=$scope.uploadList.length-1:"download"===tab?$scope.scrollToDownloadIndex=$scope.downloadList.length-1:"news"==tab.name&&(OSSNews.setIsTabNewsNew(),$scope.tabsNews.isNew=!1)}}),$scope.openLogFolder=function(){OSS.invoke("openLogFolder")},$scope.errorLog="";var selectCount=0;$scope.selectTab=function(tab){if("log"==tab.name){var errorLog="",res=OSS.invoke("getErrorLog");res&&res.list&&res.list.length&&(angular.forEach(res.list,function(val){errorLog+=val.msg+"\r\n"}),$scope.errorLog=errorLog)}else"upload"==tab.name||"download"==tab.name||"news"==tab.name&&(OSSNews.setIsTabNewsNew(),$scope.tabsNews.isNew=!1);!$rootScope.showTransQueue&&selectCount>0&&$scope.$emit("toggleTransQueue",!0),selectCount++},$scope.executeDownloadCmd=function(cmd,item){var menu=OSSQueueMenu.getDownloadMenuItem(cmd);menu&&menu.execute([item])},$scope.executeUploadCmd=function(cmd,item){var menu=OSSQueueMenu.getUploadMenuItem(cmd);menu&&menu.execute([item])};var excludeMenus=[];$scope.isExcludeTopMenu=function(menu){return _.indexOf(excludeMenus,menu.name)>=0},$scope.clearDone=function(type){var menu,list=[];"download"==type?(menu=OSSQueueMenu.getDownloadMenuItem("remove"),list=_.filter($scope.downloadList,function(item){return _.indexOf([4,5],item.status)>=0})):(menu=OSSQueueMenu.getUploadMenuItem("remove"),list=_.filter($scope.uploadList,function(item){return _.indexOf([4,5],item.status)>=0})),menu&&list.length&&menu.execute(list)},$rootScope.winNews={data:null,isNew:!1},$rootScope.exportNewsWin=function(){OSSNews.setIsWinNewsNew(),$rootScope.winNews.isNew=!1,OSSNews.getWinNewsData().then(function(data){data&&!data.err?(data.imgs=data.image.split(","),localStorageService.set("window-news-json",data),OSSDialog.exportNewsWindow()):(localStorageService.remove("window-news-json"),$rootScope.winNews.data=null,$rootScope.$broadcast("showError",gettextCatalog.getString(gettext("没有找到最新消息!"))))},function(err){localStorageService.remove("window-news-json"),$rootScope.winNews.data=null,$rootScope.$broadcast("showError",gettextCatalog.getString(gettext("没有找到最新消息!")))})},$scope.tabsNews={data:null,loading:!0,isNew:!1};var loadNewsFun=function(){OSSNews.getAllNews().then(function(res){$scope.tabsNews.loading=!1;var activeTabItem=null;angular.forEach($scope.tabs,function(item){item.active&&(activeTabItem=item)}),angular.forEach(res,function(item){item.err?OSSNews.isTabNews(item.loc)?($scope.tabsNews.data=null,OSSVersionLogs.getVersionLogs().then(function(res){$rootScope.versionLogs=res})):OSSNews.isWinNews(item.loc)&&($scope.winNews.data=null):OSSNews.isTabNews(item.loc)?($scope.tabsNews.data=item,("news"!=activeTabItem.name&&$scope.showTransQueue&&OSSNews.getIsTabNewsNew()||!$scope.showTransQueue&&OSSNews.getIsTabNewsNew())&&($scope.tabsNews.isNew=!0)):OSSNews.isWinNews(item.loc)&&($rootScope.winNews.data=item,OSSNews.getIsWinNewsNew()&&($rootScope.winNews.isNew=!0))})})};loadNewsFun(),$rootScope.$on("loadAllNews",function(){loadNewsFun();var activeTab=_.findWhere($scope.tabs,{active:!0});activeTab.active=!1;var tab=_.findWhere($scope.tabs,{name:"news"});tab.active=!0,$scope.selectTab(tab)}),$scope.clickNews=function(aid,index){OSS.invoke("openUrl",{url:OSSNews.clickNews(aid,index)})},$interval(function(){var currentDate=new Date,_hours=currentDate.getHours(),_minutes=currentDate.getMinutes(),_second=currentDate.getSeconds();23==_hours&&59==_minutes&&59==_second&&loadNewsFun()},1e3)}]).controller("FileListCtrl",["$scope","$routeParams","localStorageService","OSSApi","buckets","$rootScope","OSSObject","OSSMenu","Bucket","$route","$location","OSSLocation","usSpinnerService","$filter","OSSException","$timeout","gettext","gettextCatalog",function($scope,$routeParams,localStorageService,OSSApi,buckets,$rootScope,OSSObject,OSSMenu,Bucket,$route,$location,OSSLocation,usSpinnerService,$filter,OSSException,$timeout,gettext,gettextCatalog){var bucketName=$routeParams.bucket||"",keyword=$routeParams.keyword||"",prefix="",delimiter="/",isSearch=!1,loadFileCount=500,lastLoadMaker="",isAllFileLoaded=!1;if($scope.showTip=1==localStorageService.get("hide-tip")?!1:!0,$scope.tipContent='<i class="fa fa-info-circle"></i> <span>'+gettextCatalog.getString(gettext("小技巧：使用Shift和Ctrl键(Mac下Command键)可以实现多选操作。"))+"</span>",$scope.disableTip=function(){$scope.showTip=!1,localStorageService.set("hide-tip",1)},$scope.orderBy="",buckets.length&&!bucketName)return void $location.path(OSSLocation.getUrl(buckets[0].Name));if($scope.bucket=Bucket.getBucket(bucketName),!$scope.bucket)return void $location.path(OSSLocation.getUrl(buckets[0].Name));$scope.objectPrefix=$routeParams.object?$routeParams.object:"",OSSObject.setCurrentObject({path:$scope.objectPrefix,dir:1}),keyword.length?(prefix=$scope.objectPrefix+keyword,isSearch=!0):(prefix=$scope.objectPrefix,isSearch=!1),$scope.files=[];var loadFile=function(){$scope.loadingFile||($scope.loadingFile=!0,usSpinnerService.spin("file-list-spinner"),OSSObject.list($scope.bucket,prefix,delimiter,lastLoadMaker,loadFileCount).then(function(res){$scope.loadingFile=!1,$scope.files=$filter("orderBy")($scope.files.concat(res.files),$scope.orderBy),lastLoadMaker=res.marker,isAllFileLoaded=res.allLoaded,usSpinnerService.stop("file-list-spinner")},function(res,status){$scope.$emit("showError",gettextCatalog.getString(gettext("无法访问该Bucket"))),$scope.loadingFile=!1,usSpinnerService.stop("file-list-spinner")}))};loadFile(),$scope.openFile=function(file,isDir){if(1==isDir)OSSObject.open($scope.bucket,file.path,isDir);else{var menu=OSSMenu.getMenu("download");menu&&menu.execute($scope.bucket,$scope.objectPrefix,[file])}},$scope.loadMoreFile=function(){isAllFileLoaded||loadFile()},$scope.$watch("orderBy",function(val){$scope.files=$filter("orderBy")($scope.files,val)}),$scope.enableKeyBoardNav=1,$scope.getSelectedList=function(){return _.where($scope.files,{selected:!0})},$scope.select=function(item){item.selected=!0,$scope.scrollToIndex=_.indexOf($scope.files,item)},$scope.unSelect=function(item){item.selected=!1},$scope.unSelectAll=function(){angular.forEach($scope.getSelectedList(),function(item){$scope.unSelect(item)})},$scope.shiftLastIndex=0,$scope.handleClick=function($event,file,index){if($event.ctrlKey||$event.metaKey)file.selected?$scope.unSelect(file):$scope.select(file);else if($event.shiftKey){var lastIndex=$scope.shiftLastIndex;if($scope.unSelectAll(),index>lastIndex)for(var i=lastIndex;index>=i;i++)$scope.select($scope.files[i]);else if(lastIndex>index)for(var i=index;lastIndex>=i;i++)$scope.select($scope.files[i])}else $scope.unSelectAll(),$scope.select(file);$event.shiftKey||($scope.shiftLastIndex=index)},$scope.onContextMenuShow=function(file){file.selected||($scope.unSelectAll(),$scope.select(file))},$scope.currentFileMenuList=OSSMenu.getCurrentFileMenu(),$scope.selectFileMenuList=OSSMenu.getSelectFileMenu(),$scope.menuGroups=OSSMenu.groupMenu(_.union($scope.currentFileMenuList,$scope.selectFileMenuList)),$scope.excludeTopMenu=OSSMenu.getTopExcludeMenus(),$scope.isExclude=function(menu){return $scope.excludeTopMenu.indexOf(menu.name)>=0},$scope.$on("reloadFileList",function(){$route.reload()}),$scope.$on("createObject",function(event,callback){$timeout(function(){$scope.showCreateFile=!0,$scope.createFileCallback=callback})}),$scope.$on("addObject",function(event,objects,selected){objects=$.isArray(objects)?objects:[objects];var addFiles=_.map(objects,OSSObject.format);angular.forEach(addFiles,function(file){$scope.files.push(file),selected&&$scope.select(file)})}),$scope.$on("removeObject",function(event,objects){angular.forEach(objects,function(object){Util.Array.removeByValue($scope.files,object)})}),$scope.handleSysDrop=function(){var dragFiles=OSS.invoke("getDragFiles"),params={location:$scope.bucket.Location,bucket:$scope.bucket.Name,prefix:$scope.objectPrefix,list:dragFiles.list};OSS.invoke("addFile",params,function(res){res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):($rootScope.$broadcast("toggleTransQueue",!0),$rootScope.$broadcast("reloadUploadQueue"))})},$scope.handleFileListClick=function($event){$($event.target).closest(".file-item").size()||$scope.unSelectAll()}}]).controller("UploadListCtrl",["$scope","usSpinnerService","$routeParams","OSSUploadPart","Bucket","OSSUploadMenu","OSSException",function($scope,usSpinnerService,$routeParams,OSSUploadPart,Bucket,OSSUploadMenu,OSSException){$scope.loading=!1;var isAllLoaded=!1,lastKeyMaker="",lastUploadMaker="",loadCount=100,bucketName=$routeParams.bucket,loadUploads=function(){$scope.loading||($scope.loading=!0,usSpinnerService.spin("upload-list-spinner"),OSSUploadPart.list(Bucket.getBucket(bucketName),"","",lastKeyMaker,loadCount,lastUploadMaker).then(function(res){$scope.loading=!1,usSpinnerService.stop("upload-list-spinner"),$scope.uploads=$scope.uploads.concat(res.uploads),lastKeyMaker=res.keyMaker,lastUploadMaker=res.uploadIdMaker,isAllLoaded=res.allLoaded},function(res,status){$scope.loading=!1,usSpinnerService.stop("upload-list-spinner"),$scope.$emit("showError",OSSException.getError(res,status).msg)}))};$scope.uploads=[],$scope.loadMoreUpload=function(){isAllLoaded||loadUploads()},loadUploads(),$scope.enableKeyBoardNav=1,$scope.getSelectedList=function(){return _.where($scope.uploads,{selected:!0})},$scope.select=function(item){item.selected=!0},$scope.unSelect=function(item){item.selected=!1},$scope.unSelectAll=function(){angular.forEach($scope.getSelectedList(),function(item){$scope.unSelect(item)})},$scope.handleClick=function($event,upload,index){if($event.ctrlKey||$event.metaKey)upload.selected?$scope.unSelect(upload):$scope.select(upload);else if($event.shiftKey){var lastIndex=$scope.shiftLastIndex;if($scope.unSelectAll(),index>lastIndex)for(var i=lastIndex;index>=i;i++)$scope.select($scope.uploads[i]);else if(lastIndex>index)for(var i=index;lastIndex>=i;i++)$scope.select($scope.uploads[i])}else $scope.unSelectAll(),$scope.select(upload);$event.shiftKey||($scope.shiftLastIndex=index)},$scope.topMenuList=OSSUploadMenu.getAllMenu(),$scope.$on("removeUpload",function(event,uploads){angular.isArray(uploads)||(uploads=[uploads]),angular.forEach(uploads,function(upload){var index=_.indexOf($scope.uploads,upload);index>=0&&$scope.uploads.splice(index,1)})}),$scope.onContextMenuShow=function(upload){upload.selected||($scope.unSelectAll(),$scope.select(upload))}}]),angular.module("ossClientUiApp").factory("OSSAlert",["$modal","gettextCatalog","gettext",function($modal,gettextCatalog,gettext){function openAlertModal(type,message,title,buttons,errOptions){var option={templateUrl:"views/alert_modal.html",windowClass:"alert-modal "+type+"-alert-modal",controller:function($scope,$modalInstance){$scope.isWindowClient=OSS.isWindowsClient(),$scope.type=type,$scope.message=message,$scope.title=title,$scope.buttons=buttons,$scope.errOptions=errOptions;var getRandomNum=function(){for(var numArr=[0,1,2,3,4,5,6,7,8,9],_str="",i=0;5>i;i++){var index=Math.floor(10*Math.random());_str+=numArr[index]+""}return _str};errOptions&&"BucketAlreadyExists"===errOptions.Code&&(errOptions.newBucketName=errOptions.bucketName+"-"+getRandomNum()),$scope.buttonClick=function(button){angular.isFunction(button.callback)?button.callback($modalInstance):$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return $modal.open(option)}return{confirm:function(message,title){title=angular.isUndefined(title)?gettextCatalog.getString(gettext("请确认")):title;var buttons=[{text:gettextCatalog.getString(gettext("确定")),classes:"btn btn-primary",callback:function($modalInstance){$modalInstance.close()}},{text:gettextCatalog.getString(gettext("取消")),classes:"btn btn-default",callback:function($modalInstance){$modalInstance.dismiss("cancel")}}];return openAlertModal("warning",message,title,buttons)},info:function(message,title,buttons){return title=angular.isUndefined(title)?gettextCatalog.getString(gettext("信息")):title,buttons=angular.isUndefined(buttons)?[{text:gettextCatalog.getString(gettext("关闭")),classes:"btn btn-default"}]:buttons,openAlertModal("info",message,title,buttons)},warning:function(message,title,buttons){return title=angular.isUndefined(title)?gettextCatalog.getString(gettext("警告")):title,buttons=angular.isUndefined(buttons)?[{text:gettextCatalog.getString(gettext("确认")),classes:"btn btn-primary"},{text:gettextCatalog.getString(gettext("关闭")),classes:"btn btn-default"}]:buttons,openAlertModal("warning",message,title,buttons)},error:function(message,title,buttons,otherOption){return title=angular.isUndefined(title)||!title?gettextCatalog.getString(gettext("错误")):title,buttons=angular.isUndefined(buttons)||!buttons?[{text:gettextCatalog.getString(gettext("关闭")),classes:"btn btn-default"}]:buttons,openAlertModal("error",message,title,buttons,otherOption)},success:function(message,title,buttons){return title=angular.isUndefined(title)?gettextCatalog.getString(gettext("成功")):title,buttons=angular.isUndefined(buttons)?[{text:gettextCatalog.getString(gettext("关闭")),classes:"btn btn-default"}]:buttons,openAlertModal("success",message,title,buttons)}}}]).factory("OSSUploadQueue",["$rootScope","$timeout","OSSQueueItem","OSSLocation","$filter",function($rootScope,$timeout,OSSQueueItem,OSSLocation,$filter){var size=100,OSSUploadQueue={items:[],totalCount:0,doneCount:0,uploadSpeed:0,downloadSpeed:0,isStop:!0,init:function(){return this.getQueueList(0),this},getQueueList:function(start){var res=OSS.invoke("getUpload",{start:start,count:size});OSS.log("OSSUploadQueue",res);var list=angular.isArray(res.list)?res.list:[];0==start?this.items=list:angular.forEach(list,function(item){OSSUploadQueue.add(item)}),this.totalCount=res.upload_total_count,this.doneCount=res.upload_done_count,this.uploadSpeed=res.upload,this.downloadSpeed=res.download},add:function(item){this.items.push(item)},get:function(pathhash){return _.findWhere(this.items,{pathhash:pathhash})},remove:function(item){var index=_.indexOf(this.items,item);index>-1&&this.items.splice(index,1)},update:function(item,param){angular.extend(item,param)},refresh:function(){var _self=this;OSS.invoke("changeUpload",{start:1},function(res){$timeout(function(){angular.forEach(res.list,function(val){var existItem=_self.get(val.pathhash);existItem&&_self.update(existItem,val);var upPath=$filter("isDir")(val.object)?Util.String.dirName(Util.String.dirName(val.object)):Util.String.dirName(val.object);OSSQueueItem.isDone(val)&&OSSLocation.isCurrentObject(val.bucket,upPath)&&$rootScope.$broadcast("reloadFileList")}),_self.totalCount=res.upload_total_count,_self.doneCount=res.upload_done_count,_self.uploadSpeed=res.upload,_self.downloadSpeed=res.download})},!1),this.isStop=!1},stop:function(){OSS.invoke("changeUpload",{start:0}),this.isStop=!0},isStoped:function(){return this.isStop}};return OSSUploadQueue}]).factory("OSSQueueItem",[function(){var STATUS_ERROR=5,STATUS_PROGRESS=1,STATUS_DONE=4,STATUS_WAITING=2,STATUS_PASUED=3,OSSQueueItem={setStatus:function(item,status){item.status=status},isError:function(item){return item.status==STATUS_ERROR},isInProgress:function(item){return item.status==STATUS_PROGRESS},isDone:function(item){return item.status==STATUS_DONE},isWaiting:function(item){return item.status==STATUS_WAITING},isPaused:function(item){return item.status==STATUS_PASUED},setError:function(item){OSSQueueItem.setStatus(item,STATUS_ERROR)},setProgress:function(item){OSSQueueItem.setStatus(item,STATUS_PROGRESS)},setDone:function(item){OSSQueueItem.setStatus(item,STATUS_DONE)},setWaiting:function(item){OSSQueueItem.setStatus(item,STATUS_WAITING)},setPaused:function(item){OSSQueueItem.setStatus(item,STATUS_PASUED)}};return OSSQueueItem}]).factory("OSSDownloadQueue",["$rootScope","$timeout",function($rootScope,$timeout){var size=100,OSSDownloadQueue={items:[],totalCount:0,doneCount:0,uploadSpeed:0,downloadSpeed:0,isStop:!0,init:function(){return this.getQueueList(0),this},getQueueList:function(start){var res=OSS.invoke("getDownload",{start:start,count:size}),list=angular.isArray(res.list)?res.list:[];0==start?this.items=list:angular.forEach(list,function(item){OSSDownloadQueue.add(item)}),this.totalCount=res.download_total_count,this.doneCount=res.download_done_count,this.uploadSpeed=res.upload,this.downloadSpeed=res.download},add:function(item){this.items.push(item)},get:function(fullpath){return _.findWhere(this.items,{fullpath:fullpath})},remove:function(item){var index=_.indexOf(this.items,item);index>-1&&this.items.splice(index,1)},update:function(item,param){angular.extend(item,param)},refresh:function(){var _self=this;this.isStop=!1,OSS.invoke("changeDownload",{start:1},function(res){$timeout(function(){angular.forEach(res.list,function(val){var existItem=_self.get(val.fullpath);existItem&&_self.update(existItem,val)}),_self.totalCount=res.download_total_count,_self.doneCount=res.download_done_count,_self.uploadSpeed=res.upload,_self.downloadSpeed=res.download})},!1)},stop:function(){OSS.invoke("changeDownload",{start:0}),this.isStop=!0},isStoped:function(){return this.isStop}};return OSSDownloadQueue}]).factory("OSSQueueMenu",["$rootScope","OSSQueueItem","$timeout","OSSAlert","OSSDownloadQueue","OSSUploadQueue","gettext","gettextCatalog",function($rootScope,OSSQueueItem,$timeout,OSSAlert,OSSDownloadQueue,OSSUploadQueue,gettext,gettextCatalog){var checkArgValid=function(selectedItems){return angular.isArray(selectedItems)&&selectedItems.length?!0:!1},prepareUpladParam=function(selectedItems,finish){var param={all:selectedItems&&selectedItems.length?0:1};return"undefined"!=typeof finish&&angular.extend(param,{finish:finish}),selectedItems&&(param.list=[],angular.forEach(selectedItems,function(item){param.list.push({bucket:item.bucket,object:item.object})})),param},prepareDownloadParam=function(selectedItems,finish){var param={all:selectedItems&&selectedItems.length?0:1};return"undefined"!=typeof finish&&angular.extend(param,{finish:finish}),selectedItems&&(param.list=[],angular.forEach(selectedItems,function(item){param.list.push({fullpath:item.fullpath})})),param},uploadMenu=[{name:"start",text:gettext("开始"),execute:function(selectedItems){checkArgValid(selectedItems)&&OSS.invoke("startUpload",prepareUpladParam(selectedItems),function(){$timeout(function(){_.each(selectedItems,OSSQueueItem.setProgress)})})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return-1;for(var hasUnValidItem=!1,i=0;i<selectedItems.length;i++){var item=selectedItems[i];OSSQueueItem.isPaused(item)||(hasUnValidItem=!0)}return hasUnValidItem?-1:1}},{name:"pause",text:gettext("暂停"),execute:function(selectedItems){checkArgValid(selectedItems)&&OSS.invoke("stopUpload",prepareUpladParam(selectedItems),function(){$timeout(function(){_.each(selectedItems,OSSQueueItem.setPaused)})})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return 0;for(var hasUnValidItem=!1,count=0,i=0;i<selectedItems.length;i++){var item=selectedItems[i];(OSSQueueItem.isPaused(item)||OSSQueueItem.isError(item)||OSSQueueItem.isDone(item))&&(hasUnValidItem=!0,OSSQueueItem.isPaused(item)&&count++)}return hasUnValidItem?count==selectedItems.length?-1:0:1}},{name:"cancel",text:gettext("取消"),execute:function(selectedItems){var msg="";1==selectedItems.length?msg=gettextCatalog.getString(gettext("你确定要取消这个文件的上传？")):selectedItems.length>1&&(msg=gettextCatalog.getString(gettext("你确定要取消这{{fileLen}}个文件的上传？"),{fileLen:selectedItems.length})),OSSAlert.confirm(msg).result.then(function(){checkArgValid(selectedItems)&&OSS.invoke("deleteUpload",prepareUpladParam(selectedItems),function(){$timeout(function(){$rootScope.$broadcast("removeQueue","upload",selectedItems)})})},function(){})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return 0;var doneItemsList=_.filter(selectedItems,function(item){return OSSQueueItem.isDone(item)||OSSQueueItem.isError(item)}),progressList=_.filter(selectedItems,function(item){return OSSQueueItem.isWaiting(item)||OSSQueueItem.isInProgress(item)||OSSQueueItem.isPaused(item)});return doneItemsList&&doneItemsList.length==selectedItems.length?-1:progressList&&progressList.length==selectedItems.length?1:0}},{name:"remove",text:gettext("移除"),execute:function(selectedItems){checkArgValid(selectedItems)&&OSS.invoke("deleteUpload",prepareUpladParam(selectedItems),function(){$timeout(function(){$rootScope.$broadcast("removeQueue","upload",selectedItems)})})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return-1;var doneItemsList=_.filter(selectedItems,function(item){return OSSQueueItem.isDone(item)||OSSQueueItem.isError(item)});return doneItemsList&&doneItemsList.length==selectedItems.length?1:-1}},{name:"pauseAll",text:gettext("全部暂停"),execute:function(selectedItems,items){OSS.invoke("stopUpload",prepareUpladParam(),function(){$timeout(function(){_.each(_.filter(items,function(item){return OSSQueueItem.isWaiting(item)||OSSQueueItem.isInProgress(item)}),OSSQueueItem.setPaused)})})},getState:function(selectItems,items){return items&&items.length?1:0}},{name:"startAll",text:gettext("全部开始"),execute:function(selectedItems,items){OSS.invoke("startUpload",prepareUpladParam(),function(){$timeout(function(){_.each(_.filter(items,function(item){return OSSQueueItem.isPaused(item)||OSSQueueItem.isError(item)}),OSSQueueItem.setWaiting)})})},getState:function(selectItems,items){return items&&items.length?1:0}},{name:"stopAll",text:gettext("全部取消"),execute:function(selectedItems,items){var msg=gettextCatalog.getString(gettext("你确定要取消所有上传？"));OSSAlert.confirm(msg).result.then(function(){OSS.invoke("deleteUpload",prepareUpladParam(!1,0),function(){$timeout(function(){$rootScope.$broadcast("reloadUploadQueue")})})})},getState:function(selectItems,items){return items&&items.length?1:0}},{name:"removeAll",text:gettext("清空已完成"),execute:function(selectItems,items){OSS.invoke("deleteUpload",{finish:1,all:1},function(){$timeout(function(){$rootScope.$broadcast("removeQueue","upload",_.filter(items,function(item){return OSSQueueItem.isDone(item)}),function(){$rootScope.$broadcast("reloadUploadQueue");
})})})},getState:function(selectItems,items){return items&&items.length?1:0}}],downloadMenu=[{name:"start",text:gettext("开始"),execute:function(selectedItems){checkArgValid(selectedItems)&&OSS.invoke("startDownload",prepareDownloadParam(selectedItems),function(){$timeout(function(){_.each(selectedItems,OSSQueueItem.setProgress)})})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return-1;for(var hasUnValidItem=!1,i=0;i<selectedItems.length;i++){var item=selectedItems[i];OSSQueueItem.isPaused(item)||(hasUnValidItem=!0)}return hasUnValidItem?-1:1}},{name:"pause",text:gettext("暂停"),execute:function(selectedItems){checkArgValid(selectedItems)&&OSS.invoke("stopDownload",prepareDownloadParam(selectedItems),function(){$timeout(function(){_.each(selectedItems,OSSQueueItem.setPaused)})})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return 0;for(var hasUnValidItem=!1,count=0,i=0;i<selectedItems.length;i++){var item=selectedItems[i];(OSSQueueItem.isPaused(item)||OSSQueueItem.isError(item)||OSSQueueItem.isDone(item))&&(hasUnValidItem=!0,OSSQueueItem.isPaused(item)&&count++)}return hasUnValidItem?count==selectedItems.length?-1:0:1}},{name:"cancel",text:gettext("取消"),execute:function(selectedItems){var msg="";1==selectedItems.length?msg=gettextCatalog.getString(gettext("你确定要取消这个文件的下载？")):selectedItems.length>1&&(msg=gettextCatalog.getString(gettext("你确定要取消这{{fileLen}}文件的下载？"),{fileLen:selectedItems.length})),OSSAlert.confirm(msg).result.then(function(){checkArgValid(selectedItems)&&OSS.invoke("deleteDownload",prepareDownloadParam(selectedItems),function(){$timeout(function(){$rootScope.$broadcast("removeQueue","download",selectedItems)})})})},getState:function(selectedItems){if(!selectedItems||!selectedItems.length)return 0;var doneItemsList=_.filter(selectedItems,function(item){return OSSQueueItem.isDone(item)||OSSQueueItem.isError(item)}),progressList=_.filter(selectedItems,function(item){return OSSQueueItem.isWaiting(item)||OSSQueueItem.isInProgress(item)||OSSQueueItem.isPaused(item)});return doneItemsList&&doneItemsList.length==selectedItems.length?-1:progressList&&progressList.length==selectedItems.length?1:0}},{name:"remove",text:gettext("移除"),execute:function(selectedItems){checkArgValid(selectedItems)&&OSS.invoke("deleteDownload",prepareDownloadParam(selectedItems),function(){$timeout(function(){$rootScope.$broadcast("removeQueue","download",selectedItems)})})},getState:function(selectedItems){var len=selectedItems.length;if(!len)return-1;var doneItemsList=_.filter(selectedItems,function(item){return OSSQueueItem.isDone(item)||OSSQueueItem.isError(item)});return doneItemsList&&doneItemsList.length==selectedItems.length?1:-1}},{name:"pauseAll",text:gettext("全部暂停"),execute:function(selectItems,items){OSS.invoke("stopDownload",prepareDownloadParam(),function(){$timeout(function(){_.each(_.filter(items,function(item){return OSSQueueItem.isWaiting(item)||OSSQueueItem.isInProgress(item)}),OSSQueueItem.setPaused)})})},getState:function(selectItems,items,doneCount,totalCount){return items&&items.length?1:0}},{name:"startAll",text:gettext("全部开始"),execute:function(selectItems,items){OSS.invoke("startDownload",prepareDownloadParam(),function(){_.each(_.filter(items,function(item){return OSSQueueItem.isPaused(item)}),OSSQueueItem.setProgress)})},getState:function(selectItems,items){return items&&items.length?1:0}},{name:"stopAll",text:gettext("全部取消"),execute:function(selectedItems,items){var msg=gettextCatalog.getString(gettext("你确定要取消所有下载？"));OSSAlert.confirm(msg).result.then(function(){OSS.invoke("deleteDownload",prepareDownloadParam(!1,0),function(){$timeout(function(){$rootScope.$broadcast("reloadDownloadQueue")})})})},getState:function(selectItems,items){return items&&items.length?1:0}},{name:"removeAll",text:gettext("清空已完成"),execute:function(selectItems,items){OSS.invoke("deleteDownload",{finish:1,all:1},function(){$timeout(function(){$rootScope.$broadcast("removeQueue","download",_.filter(items,function(item){return OSSQueueItem.isDone(item)}),function(){$rootScope.$broadcast("reloadDownloadQueue")})})})},getState:function(selectItems,items){return items&&items.length?1:0}}],groupMenu=[["start","pause","cancel","remove"],["startAll","pauseAll","stopAll","removeAll"]],OSSQueueMenu={getUploadMenu:function(){return uploadMenu},getDownloadMenu:function(){return downloadMenu},getUploadMenuItem:function(name){return _.findWhere(uploadMenu,{name:name})},getDownloadMenuItem:function(name){return _.findWhere(downloadMenu,{name:name})},groupBy:function(menus){var groupMenus=[];return angular.forEach(groupMenu,function(val,key){groupMenus[key]||(groupMenus[key]=[]),angular.forEach(val,function(menuName){groupMenus[key].push(_.findWhere(menus,{name:menuName}))})}),groupMenus}};return OSSQueueMenu}]).factory("OSSMenu",["Clipboard","OSSAlert","OSSModal","$rootScope","OSSApi","OSSException","OSSConfig","gettext","gettextCatalog",function(Clipboard,OSSAlert,OSSModal,$rootScope,OSSApi,OSSException,OSSConfig,gettext,gettextCatalog){var currentMenus="upload create paste downloadcurrent".split(" "),selectMenus="download copy del get_uri set_header paste".split(" "),groupMenu=["upload create".split(" "),"download copy del".split(" "),"get_uri set_header".split(" "),"paste".split(" ")],allMenu=[{name:"upload",text:gettext("上传"),getState:function(){return 1},execute:function(bucket,currentObject){OSS.invoke("selectFileDlg",{path:"",disable_root:1},function(res){res&&res.list&&res.list.length&&OSS.invoke("addFile",{location:bucket.Location,bucket:bucket.Name,prefix:currentObject,list:res.list},function(res){res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):($rootScope.$broadcast("toggleTransQueue",!0,"upload"),$rootScope.$broadcast("reloadUploadQueue"))})})}},{name:"create",text:gettext("新建文件夹"),getState:function(){return 1},execute:function(bucket,currentObject){$rootScope.$broadcast("createObject",function(filename,callback){var msg=gettextCatalog.getString(gettext("文件夹名称格式错误"));if(msg+='<p class="text-muted">',msg+=gettextCatalog.getString(gettext("1. 只能包含字母，数字，中文，下划线（_）和短横线（-）,小数点（.）"))+"<br/>",msg+=gettextCatalog.getString(gettext("2. 只能以字母、数字或者中文开头"))+"<br/>",msg+=gettextCatalog.getString(gettext("3. 文件夹的长度限制在1-254之间"))+"<br/>",msg+=gettextCatalog.getString(gettext("4. Object总长度必须在1-1023之间"))+"<br/>",msg+="</p>",!/^[a-zA-Z0-9\u4e00-\u9fa5][a-zA-Z0-9\u4e00-\u9fa5_\-.]{0,253}$/.test(filename))return $rootScope.$broadcast("showError",msg),void($.isFunction(callback)&&callback(!1));if(Util.String.mbLen(filename)>254)return $rootScope.$broadcast("showError",msg),void($.isFunction(callback)&&callback(!1));var objectPath=currentObject?currentObject+filename+"/":filename+"/";return Util.String.mbLen(objectPath)>1023?($rootScope.$broadcast("showError",msg),void($.isFunction(callback)&&callback(!1))):void OSSApi.getObjectMeta(bucket,objectPath).success(function(){$rootScope.$broadcast("showError",gettextCatalog.getString(gettext("已存在相同名称的文件夹"))),$.isFunction(callback)&&callback(!1)}).error(function(response,statusCode){var error=OSSException.getError(response,statusCode);return 404!=error.status?($rootScope.$broadcast("showError",error.msg),void($.isFunction(callback)&&callback(!1))):void OSSApi.putObject(bucket,objectPath,{"Content-Type":""},"").success(function(){$.isFunction(callback)&&callback(!0),$rootScope.$broadcast("addObject",{Prefix:objectPath},!0)}).error(function(res,status){$.isFunction(callback)&&callback(!1),$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})})}},{name:"downloadcurrent",text:gettext("下载当前目录"),getState:function(){return 1},execute:function(bucket,currentObject){var list=[{location:bucket.Location,bucket:bucket.Name,object:currentObject,filesize:0,etag:""}];OSS.invoke("saveFileDlg",null,function(res){var _path=res.path;_path&&($rootScope.$broadcast("startDownloadFilesLoading"),OSS.invoke("saveFile",{list:list,path:_path},function(res){$rootScope.$broadcast("endDownloadFilesLoading"),res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):($rootScope.$broadcast("toggleTransQueue",!0,"download"),$rootScope.$broadcast("reloadDownloadQueue"))}))})}},{name:"bucketdownload",text:gettext("下载"),getState:function(){return 1},execute:function(bucket){var list=[{location:bucket.Location,bucket:bucket.Name,object:""}];OSS.invoke("saveFileDlg",null,function(res){var _path=res.path;_path&&($rootScope.$broadcast("startDownloadFilesLoading"),OSS.invoke("saveFile",{list:list,path:_path},function(res){$rootScope.$broadcast("endDownloadFilesLoading"),res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):($rootScope.$broadcast("toggleTransQueue",!0,"download"),$rootScope.$broadcast("reloadDownloadQueue"))}))})}},{name:"download",text:gettext("下载"),getState:function(selectedFiles){var len=selectedFiles.length;return len?1:0},execute:function(bucket,currentObject,selectedFiles){var list=_.map(selectedFiles,function(val){return{location:bucket.Location,bucket:bucket.Name,object:val.path,filesize:val.size,etag:val.etag}});OSS.invoke("saveFileDlg",null,function(res){var _path=res.path;_path&&($rootScope.$broadcast("startDownloadFilesLoading"),OSS.invoke("saveFile",{list:list,path:_path},function(res){$rootScope.$broadcast("endDownloadFilesLoading"),res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):($rootScope.$broadcast("toggleTransQueue",!0,"download"),$rootScope.$broadcast("reloadDownloadQueue"))}))})}},{name:"copy",text:gettext("复制"),getState:function(selectedFiles){var len=selectedFiles.length;return len?1:0},execute:function(bucket,currentObject,selectedFiles){var data=JSON.stringify({ac:"copy",bucket:bucket,objects:selectedFiles});Clipboard.add(data)}},{name:"paste",text:gettext("粘贴"),getState:function(){return Clipboard.len()?1:-1},execute:function(bucket,currentObject,selectedFiles){var clipData=Clipboard.get();if(clipData&&(clipData=JSON.parse(clipData),"copy"==clipData.ac)){var targetBucket=clipData.bucket,list=clipData.objects.map(function(object){return{object:object.path,filesize:object.filesize}});if(bucket.Location!=targetBucket.Location)return void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("不同区域的Bucket之间不能复制")));var copyToCurrent=1==selectedFiles.length&&selectedFiles[0].dir?!1:!0;OSS.invoke("copyObject",{dstbucket:bucket.Name,dstobject:copyToCurrent?currentObject:selectedFiles[0].path,dstlocation:bucket.Location,bucket:targetBucket.Name,location:targetBucket.Location,list:list},function(res){res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):copyToCurrent&&$rootScope.$broadcast("reloadFileList")})}}},{name:"del",text:gettext("删除"),getState:function(selectedFiles){var len=selectedFiles.length;return len?1:0},execute:function(bucket,currentObject,selectedFiles){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要删除？"))).result.then(function(){var list=_.map(selectedFiles,function(object){return{object:object.path}});OSS.invoke("deleteObject",{bucket:bucket.Name,location:bucket.Location,list:list},function(res){res.error?$rootScope.$broadcast("showError",OSSException.getClientErrorMsg(res)):$rootScope.$broadcast("removeObject",selectedFiles)})})}},{name:"get_uri",text:gettext("获取地址"),getState:function(selectedFiles){var len=selectedFiles.length;return!len||len>1?0:selectedFiles[0].dir?0:1},execute:function(bucket,currentObject,selectedFiles){OSSModal.getObjectURI(bucket,selectedFiles[0])}},{name:"set_header",text:gettext("设置HTTP头"),getState:function(selectedFiles){if(!selectedFiles||0==selectedFiles.length)return 0;var dirs=_.find(selectedFiles,function(item){return item.dir});return dirs?0:1},execute:function(bucket,currentObject,selectedFiles){OSSModal.setObjectHttpHeader(bucket,selectedFiles)}}];if(OSSConfig.showRefer()){var referSetting={name:"refer",text:gettext("Refer设置"),getState:function(){return 1},execute:function(bucket){OSSModal.setRefer(bucket)}};allMenu.splice(0,0,referSetting),currentMenus=currentMenus.concat(["refer"]),groupMenu[0].push("refer")}if(OSSConfig.showRam()){var ramSetting={name:"set_ram",text:gettext("RAM授权"),getState:function(selectedFiles){return 1},execute:function(bucket,currentObject,selectedFiles){OSSModal.setRam()}};allMenu.push(ramSetting),currentMenus=currentMenus.concat(["set_ram"]),groupMenu.push(["set_ram"])}return{getAllMenu:function(){return allMenu},getCurrentFileMenu:function(){return _.filter(allMenu,function(menu){return _.indexOf(currentMenus,menu.name)>=0})},getSelectFileMenu:function(){return _.filter(allMenu,function(menu){return _.indexOf(selectMenus,menu.name)>=0})},getMenu:function(name){return _.findWhere(allMenu,{name:name})},groupMenu:function(menus){var groupMenus=[];return angular.forEach(groupMenu,function(val,key){groupMenus[key]||(groupMenus[key]=[]),angular.forEach(val,function(menuName){groupMenus[key].push(_.findWhere(menus,{name:menuName}))})}),groupMenus},getTopExcludeMenus:function(){return[]}}}]).factory("OSSUploadMenu",["Bucket","OSSAlert","OSSApi","$rootScope","OSSModal","OSSException","gettext","gettextCatalog",function(Bucket,OSSAlert,OSSApi,$rootScope,OSSModal,OSSException,gettext,gettextCatalog){var allMenu=[{name:"remove",text:gettext("删除"),getState:function(selectedUploads){var len=selectedUploads.length;return len?1:0},execute:function(selectedUploads){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要删除选择的碎片？"))).result.then(function(){angular.forEach(selectedUploads,function(upload){OSSApi.deleteUpload(Bucket.getCurrentBucket(),upload).success(function(){$rootScope.$broadcast("removeUpload",upload)}).error(function(res,status){$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})})}},{name:"detail",text:gettext("详细"),getState:function(selectedUploads){var len=selectedUploads.length;return!len||len>1?0:1},execute:function(selectedUploads){OSSModal.uploadDetail(Bucket.getCurrentBucket(),selectedUploads[0])}}];return{getAllMenu:function(){return allMenu}}}]).factory("OSSLocationHistory",["$location","$rootScope",function($location,$rootScope){var current,update=!0,history=[],maxLen=100;return $rootScope.$on("$locationChangeSuccess",function(){var url=$location.url(),l=history.length;update&&(current>=0&&l>current+1&&history.splice(current+1),history[history.length-1]!=url&&(history.push(url),history.length>maxLen&&history.splice(0,1)),current=history.length-1),update=!0}),{reset:function(){history=[],current=0,update=!0},go:function(isForward){(isForward&&this.canForward()||!isForward&&this.canBackward())&&(update=!1,$location.url(history[isForward?++current:--current]))},forward:function(){this.go(!0)},backwardPath:function(){return this.canBackward()?history[current-1]:null},backward:function(){this.go()},forwardPath:function(){return this.canForward()?history[current+1]:null},canForward:function(){return current<history.length-1},canBackward:function(){return current>0}}}]).factory("OSSObject",["$location","$filter","OSSApi","$q","OSSLocation",function($location,$filter,OSSApi,$q,OSSLocation){var fileSorts={SORT_SPEC:["doc","docx","xls","xlsx","ppt","pptx","pdf","ai","cdr","psd","dmg","iso","md","ipa","apk"],SORT_MOVIE:["mp4","mkv","rm","rmvb","avi","3gp","flv","wmv","asf","mpeg","mpg","mov","ts","m4v"],SORT_MUSIC:["mp3","wma","wav","flac","ape","ogg","aac","m4a"],SORT_IMAGE:["jpg","png","jpeg","gif","psd","bmp","ai","cdr"],SORT_DOCUMENT:["doc","docx","xls","xlsx","ppt","pptx","pdf","odt","rtf","ods","csv","odp","txt"],SORT_CODE:["js","c","cpp","h","cs","vb","vbs","java","sql","ruby","php","asp","aspx","html","htm","py","jsp","pl","rb","m","css","go","xml","erl","lua","md"],SORT_ZIP:["rar","zip","7z","cab","tar","gz","iso"],SORT_EXE:["exe","bat","com"]},currentObject={};return{getCurrentObject:function(){return currentObject},setCurrentObject:function(object){currentObject=object},list:function(bucket,prefix,delimiter,lastLoadMaker,loadFileCount){var _self=this,defer=$q.defer();return OSSApi.getObjects(bucket,prefix,delimiter,lastLoadMaker,loadFileCount).success(function(res){var contents=res.ListBucketResult.Contents;contents=contents?angular.isArray(contents)?contents:[contents]:[];var commonPrefixes=res.ListBucketResult.CommonPrefixes;commonPrefixes=commonPrefixes?angular.isArray(commonPrefixes)?commonPrefixes:[commonPrefixes]:[];var files=[];angular.forEach($.merge(commonPrefixes,contents),function(file){file.Key!==prefix&&file.Prefix!==prefix&&files.push(_self.format(file))}),defer.resolve({files:files,marker:res.ListBucketResult.NextMarker,allLoaded:"false"===res.ListBucketResult.IsTruncated})}).error(function(res,status){defer.reject(res,status)}),defer.promise},format:function(object){var path=object.Key||object.Prefix,isDir="/"===Util.String.lastChar(path)?1:0,filename=isDir?$filter("getPrefixName")(path,1):$filter("baseName")(path);return{path:path,dir:isDir,filename:filename,lastModified:object.LastModified||"",size:object.Size?parseInt(object.Size):0,etag:object.ETag||""}},open:function(bucket,path,isDir){isDir&&$location.url(OSSLocation.getUrl(bucket.Name,path,"file"))},getIconSuffix:function(dir,filename){var suffix="",sorts=fileSorts;if(1==dir)suffix="folder";else{var ext=Util.String.getExt(filename);suffix=jQuery.inArray(ext,sorts.SORT_SPEC)>-1?ext:jQuery.inArray(ext,sorts.SORT_MOVIE)>-1?"video":jQuery.inArray(ext,sorts.SORT_MUSIC)>-1?"audio":jQuery.inArray(ext,sorts.SORT_IMAGE)>-1?"image":jQuery.inArray(ext,sorts.SORT_DOCUMENT)>-1?"document":jQuery.inArray(ext,sorts.SORT_ZIP)>-1?"compress":jQuery.inArray(ext,sorts.SORT_EXE)>-1?"execute":"other"}return suffix},getIcon:function(dir,name){return"icon-"+this.getIconSuffix(dir,name)}}}]).factory("OSSLocation",["$routeParams",function($routeParams){var OSSLocation={isCurrentBucket:function(bucketName){return bucketName==$routeParams.bucket},isCurrentObject:function(bucketName,objectPath){return objectPath&&"/"!=Util.String.lastChar(objectPath)&&(objectPath+="/"),OSSLocation.isCurrentBucket(bucketName)&&objectPath==($routeParams.object||"")},getUrl:function(bucketName,prefix,filter,searchParam){filter=angular.isUndefined(filter)?"file":filter,prefix=angular.isUndefined(prefix)?"":prefix;var url="";return url+="/"+filter,url+="/"+bucketName,prefix&&(url+="/"+encodeURIComponent(prefix)),searchParam&&(url+="?"+$.param(searchParam)),url}};return OSSLocation}]).factory("Bread",["OSSLocation","gettext","gettextCatalog",function(OSSLocation,gettext,gettextCatalog){var getFilterName=function(filter){var filterName="";switch(filter){case"upload":filterName=gettextCatalog.getString(gettext("碎片管理"))}return filterName};return{getBreads:function(bucketName,path,filter){var breads=[];if(breads.push({name:bucketName,url:OSSLocation.getUrl(bucketName)}),"file"!==filter&&breads.push({name:getFilterName(filter),url:OSSLocation.getUrl(bucketName,"",filter)}),path&&path.length){path=Util.String.rtrim(Util.String.ltrim(path,"/"),"/");for(var paths=path.split("/"),i=0;i<paths.length;i++){for(var bread={name:paths[i]},fullpath="",j=0;i>=j;j++)fullpath+=paths[j]+"/";bread.url=OSSLocation.getUrl(bucketName,fullpath),breads.push(bread)}}return breads}}}]).factory("RequestXML",function(){return{getXMLHeader:function(){return'<?xml version="1.0" encoding="UTF-8"?>'},getCreateChannelXml:function(setting){return[this.getXMLHeader(),"<Channel>","<Status>",setting.Status,"</Status>","<OrigPicForbidden>",setting.OrigPicForbidden,"</OrigPicForbidden> ","<UseStyleOnly>",setting.UseStyleOnly,"</UseStyleOnly>","</Channel>"].join("")},getCreateBucketXML:function(region){return region=region.replace("-internal",""),[this.getXMLHeader(),"<CreateBucketConfiguration >","<LocationConstraint >",region,"</LocationConstraint >","</CreateBucketConfiguration >"].join("")},getSetBucketReferXML:function(refer){for(var referers=refer.content.split(";"),_referContent="",i=0;i<referers.length;i++)_referContent+="<Referer>"+referers[i]+"</Referer>";return[this.getXMLHeader(),"<RefererConfiguration>","<AllowEmptyReferer>",refer.allowEmpty,"</AllowEmptyReferer>","<RefererList>",_referContent,"</RefererList>","</RefererConfiguration>"].join("")}}}).factory("Bucket",["OSSApi","$q","OSSException","$rootScope","OSSRegion","localStorageService","OSSConfig","gettext","gettextCatalog",function(OSSApi,$q,OSSException,$rootScope,OSSRegion,localStorageService,OSSConfig,gettext,gettextCatalog){var listPromise,buckets=null,deferred=$q.defer(),isIntranetNet=localStorageService.get(OSSRegion.getRegionPerfix()),currentLocation=OSS.invoke("getCurrentLocation"),isIntranet=OSSRegion.isIntranet(currentLocation);return{list:function(){return listPromise?listPromise:(OSSApi.getBuckets().success(function(res){if($rootScope.$broadcast("bucketsLoaded"),!res.ListAllMyBucketsResult)return void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("数据请求失败，如果你自定义了服务器地址，请检查是否正常。")));var resBuckets=[];if(res.ListAllMyBucketsResult.Buckets&&res.ListAllMyBucketsResult.Buckets.Bucket&&(resBuckets=res.ListAllMyBucketsResult.Buckets.Bucket),resBuckets){buckets=[];var _list=angular.isArray(resBuckets)?resBuckets:[resBuckets];if(OSSConfig.isCustomClient())if(isIntranetNet){console.log("=========load bucket=========",resBuckets);var intranetLocations=[];console.log("=========isIntranet=========",isIntranet),intranetLocations=isIntranet&&"1"===isIntranetNet?OSSRegion.getIntranetLocationItem():[OSSRegion.getInternetLocationItem()].concat([OSSRegion.getIntranetInner(OSSConfig.hasMoreZwLocations())]),console.log("=========intranetLocations=========",intranetLocations,_list),angular.forEach(_list,function(bucket){var _item=_.find(intranetLocations,function(item){return 1===item.enable&&(item.location===bucket.Location||item.location===bucket.Location+"-internal"||item.location===bucket.Location+"-a-internal")});_item&&buckets.push(bucket)})}else angular.forEach(_list,function(bucket){0===currentLocation.indexOf(bucket.Location)&&buckets.push(bucket)});else angular.forEach(_list,function(bucket){if(bucket.Location.toLowerCase().indexOf("tw")>=0&&(bucket.Location="oss-tw-kaohsiung"),currentLocation)0===currentLocation.indexOf(bucket.Location)&&buckets.push(bucket);else{var region=OSSRegion.getEnableRegionByLocation(bucket.Location);region&&buckets.push(bucket)}})}else buckets=[];angular.forEach(buckets,function(bucket){var region=OSSRegion.getRegionByLocation(bucket.Location);region&&(bucket.Location=region.location.replace("-internal",""))}),deferred.resolve(buckets)}).error(function(res,status){$rootScope.$broadcast("bucketsLoaded"),$rootScope.$broadcast("showError",OSSException.getError(res,status).msg),deferred.reject(res,status)}),listPromise=deferred.promise)},loadNew:function(){var _deferred=$q.defer(),newBuckets=[];return OSSApi.getBuckets().success(function(res){var bucketList=null,resBuckets=null;if(res&&res.ListAllMyBucketsResult&&res.ListAllMyBucketsResult.Buckets&&res.ListAllMyBucketsResult.Buckets.Bucket&&(resBuckets=res.ListAllMyBucketsResult.Buckets.Bucket),resBuckets){bucketList=[];var _list=angular.isArray(resBuckets)?resBuckets:[resBuckets];if(OSSConfig.isCustomClient())if(isIntranetNet){var intranetLocations=[];intranetLocations=isIntranet&&"1"===isIntranetNet?OSSRegion.getIntranetLocationItem():[OSSRegion.getInternetLocationItem()].concat([OSSRegion.getIntranetInner(OSSConfig.hasMoreZwLocations())]),angular.forEach(_list,function(bucket){var _item=_.find(intranetLocations,function(item){return 1===item.enable&&(item.location===bucket.Location||item.location===bucket.Location+"-internal"||item.location===bucket.Location+"-a-internal")});_item&&bucketList.push(bucket)})}else angular.forEach(_list,function(bucket){0===currentLocation.indexOf(bucket.Location)&&bucketList.push(bucket)});else angular.forEach(_list,function(bucket){if(currentLocation)0===currentLocation.indexOf(bucket.Location)&&bucketList.push(bucket);else{var region=OSSRegion.getEnableRegionByLocation(bucket.Location);region&&bucketList.push(bucket)}})}else bucketList=[];angular.forEach(bucketList,function(bucket){var oldItem=_.findWhere(buckets,{Name:bucket.Name});oldItem||newBuckets.push(bucket)}),angular.forEach(newBuckets,function(bucket){var region=OSSRegion.getRegionByLocation(bucket.Location);region&&(bucket.Location=region.location.replace("-internal",""))}),newBuckets&&newBuckets.length>0&&(buckets=buckets.concat(newBuckets)),_deferred.resolve(buckets)}),_deferred.promise},getAcls:function(){return{"public-read":gettext("公共读"),"public-read-write":gettext("公共读写"),"private":gettext("私有")}},getBucket:function(buckeName){return _.findWhere(buckets,{Name:buckeName})},select:function(bucket){bucket.selected=!0},unselected:function(bucket){bucket.selected=!1},getCurrentBucket:function(){return _.findWhere(buckets,{selected:!0})}}}]).factory("SpeedService",["$timeout","OSSConfig",function($timeout,OSSConfig){var caclurtimeout=null,speedSetting={speed:{cartNumber:null,timeHour:0,timeMinute:0,timeSecond:0},active:!1,show:!OSSConfig.isCustomClient()},SpeedService={getSpeedSetting:function(){return speedSetting},setSpeedSetting:function(_speedSetting){speedSetting.speed=_speedSetting.speed,speedSetting.active=_speedSetting.active||!1,SpeedService.caclurSpeedNotUserTime()},caclurSpeedNotUserTime:function(){var _notUserdSecond=speedSetting.speed.timeCount-speedSetting.speed.timeUsed,_hours=parseInt(_notUserdSecond/3600),_minuts=parseInt(_notUserdSecond%3600/60),_seconds=parseInt(_notUserdSecond%3600%60);speedSetting.speed.timeHour=+_hours>=10?_hours:"0"+_hours,speedSetting.speed.timeMinute=+_minuts>=10?_minuts:"0"+_minuts,speedSetting.speed.timeSecond=+_seconds>=10?_seconds:"0"+_seconds},caclurSpeedTime:function(){caclurtimeout=$timeout(function(){speedSetting.active?(speedSetting.speed.timeUsed+=1,SpeedService.caclurSpeedNotUserTime(),SpeedService.caclurSpeedTime()):caclurtimeout&&$timeout.cancel(caclurtimeout)},1e3)},disabledSpeed:function(){speedSetting.active=!1},abledSpeed:function(){speedSetting.active=!0}};return SpeedService}]).factory("OSSRam",["$http","$q","localStorageService",function($http,$q,localStorageService){var OSSAccessKeyId=OSS.invoke("getAccessID"),ramCommonParams={Format:"JSON",Version:"2015-05-01",SignatureMethod:"HMAC-SHA1",SignatureVersion:"1.0"},getSign=function(method,_params){var params=angular.copy(_params),_keyArr=[];for(var key in params)_keyArr.push(key);_keyArr.sort();for(var _paramStr="",i=0;i<_keyArr.length;i++)0!=i&&(_paramStr+="&"),_paramStr+=encodeURIComponent(_keyArr[i])+"="+encodeURIComponent(params[_keyArr[i]]).replace(/\+/g,"%20").replace(/\*/g,"%2A").replace(/%7E/g,"~");console.log("=========_paramStr=======",_paramStr);var signString=method+"&"+encodeURIComponent("/")+"&"+encodeURIComponent(_paramStr);console.log("=========signString=======",signString);var _screct=localStorageService.get("serect")||"EV472gOxdVVhGxhJOq5sI2S12oUKCN";console.log("=====_screct======",_screct);var signStr=CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA1(signString,_screct+"&"));return signStr},getRamRequestUrl=function(action,options){var _date=new Date,_utcYear=_date.getUTCFullYear(),_utcMonth=_date.getUTCMonth()>8?_date.getUTCMonth()+1:"0"+(_date.getUTCMonth()+1),_utcDate=_date.getUTCDate()>9?_date.getUTCDate():"0"+_date.getUTCDate(),_utcHours=_date.getUTCHours()>9?_date.getUTCHours():"0"+_date.getUTCHours(),_utcMinutes=_date.getUTCMinutes()>9?_date.getUTCMinutes():"0"+_date.getUTCMinutes(),_utcSeconds=_date.getUTCSeconds()>9?_date.getUTCSeconds():"0"+_date.getUTCSeconds(),_utcTime=_utcYear+"-"+_utcMonth+"-"+_utcDate+"T"+_utcHours+":"+_utcMinutes+":"+_utcSeconds+"Z",params=angular.extend(angular.copy(ramCommonParams),{SignatureNonce:""+(new Date).getTime(),Timestamp:_utcTime,AccessKeyId:OSSAccessKeyId,Action:action});options&&(params=angular.extend(params,options));var _signature=OSSClient.getRamSignature("GET",JSON.stringify(params));getSign("GET",params);return params.Signature=$.trim(_signature.substring(1,_signature.length-1)),"https://ram.aliyuncs.com/?"+$.param(params)};return{deactivateService:function(_accountId){var defer=$q.defer(),params={AccountId:_accountId},url=getRamRequestUrl("DeactivateService",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},activateService:function(_accountId){var defer=$q.defer(),params={AccountId:_accountId},url=getRamRequestUrl("ActivateService",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},createUser:function(_userName,_displayName,_phone,_email,_desc){var defer=$q.defer(),params={UserName:_userName,DisplayName:_displayName,MobilePhone:_phone,Email:_email,Comments:_desc},url=getRamRequestUrl("CreateUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},createRole:function(_roleName,_doc,_desc){var defer=$q.defer(),params={RoleName:_roleName,AssumeRolePolicyDocument:_doc,Description:_desc},url=getRamRequestUrl("CreateRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},createGroup:function(_groupName,_groupDesc){var defer=$q.defer(),params={GroupName:_groupName,Comments:_groupDesc},url=getRamRequestUrl("CreateGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},createPolicy:function(_policyName,_policyDoc,_desc){var defer=$q.defer(),params={PolicyName:_policyName,PolicyDocument:_policyDoc,Description:_desc},url=getRamRequestUrl("CreatePolicy",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},updateUser:function(_user){var defer=$q.defer(),params={UserName:_user.oldUserName,NewUserName:_user.userName,NewDisplayName:_user.displayName,NewMobilePhone:_user.phone,NewEmail:_user.email,NewComments:_user.desc},url=getRamRequestUrl("UpdateUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},deleteUser:function(_userName){var defer=$q.defer(),params={UserName:_userName},url=getRamRequestUrl("DeleteUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},createAccessKey:function(_userName){var defer=$q.defer(),params={UserName:_userName},url=getRamRequestUrl("CreateAccessKey",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},updateAccessKey:function(_keyId,_userName,_status){var defer=$q.defer(),params={UserAccessKeyId:_keyId,UserName:_userName,Status:_status},url=getRamRequestUrl("UpdateAccessKey",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},deleteAccessKey:function(_keyId,_userName){var defer=$q.defer(),params={UserAccessKeyId:_keyId,UserName:_userName},url=getRamRequestUrl("DeleteAccessKey",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},listUserAccessKey:function(_userName){var defer=$q.defer(),params={UserName:_userName},url=getRamRequestUrl("ListAccessKeys",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getUserPolicies:function(_userName){var defer=$q.defer(),params={UserName:_userName},url=getRamRequestUrl("ListPoliciesForUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},detachPolicyFromUser:function(_policyType,_policyName,_userName){var defer=$q.defer(),params={PolicyType:_policyType,PolicyName:_policyName,UserName:_userName},url=getRamRequestUrl("DetachPolicyFromUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise;
},attachPolicyToUser:function(_policyType,_policyName,_userName){var defer=$q.defer(),params={PolicyType:_policyType,PolicyName:_policyName,UserName:_userName},url=getRamRequestUrl("AttachPolicyToUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},detachPolicyFromRole:function(_policyType,_policyName,_roleName){var defer=$q.defer(),params={PolicyType:_policyType,PolicyName:_policyName,RoleName:_roleName},url=getRamRequestUrl("DetachPolicyFromRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},attachPolicyToRole:function(_policyType,_policyName,_roleName){var defer=$q.defer(),params={PolicyType:_policyType,PolicyName:_policyName,RoleName:_roleName},url=getRamRequestUrl("AttachPolicyToRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getUserGroups:function(_userName){var defer=$q.defer(),params={UserName:_userName},url=getRamRequestUrl("ListGroupsForUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},removeUserToGroups:function(_userName,_groupName){var defer=$q.defer(),params={UserName:_userName,GroupName:_groupName},url=getRamRequestUrl("RemoveUserFromGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},addUserToGroups:function(_userName,_groupName){var defer=$q.defer(),params={UserName:_userName,GroupName:_groupName},url=getRamRequestUrl("AddUserToGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},deleteGroup:function(_groupName){var defer=$q.defer(),params={GroupName:_groupName},url=getRamRequestUrl("DeleteGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},updateGroup:function(_group){var defer=$q.defer(),params={GroupName:_group.oldGroupName,NewGroupName:_group.GroupName,NewComments:_group.Comments},url=getRamRequestUrl("UpdateGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getGroupUsers:function(_groupName){var defer=$q.defer(),params={GroupName:_groupName},url=getRamRequestUrl("ListUsersForGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getGroupPolicies:function(_groupName){var defer=$q.defer(),params={GroupName:_groupName},url=getRamRequestUrl("ListPoliciesForGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},detachPolicyFromGroup:function(_policyType,_policyName,_groupName){var defer=$q.defer(),params={PolicyType:_policyType,PolicyName:_policyName,GroupName:_groupName},url=getRamRequestUrl("DetachPolicyFromGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},attachPolicyToGroup:function(_policyType,_policyName,_groupName){var defer=$q.defer(),params={PolicyType:_policyType,PolicyName:_policyName,GroupName:_groupName},url=getRamRequestUrl("AttachPolicyToGroup",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getRolePolicies:function(_roleName){var defer=$q.defer(),params={RoleName:_roleName},url=getRamRequestUrl("ListPoliciesForRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getGroups:function(_max,_marker){var defer=$q.defer(),params={MaxItems:""+_max};_marker&&(params.Marker=_marker);var url=getRamRequestUrl("ListGroups",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getUser:function(_userName){var defer=$q.defer(),params={UserName:_userName},url=getRamRequestUrl("GetUser",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getUsers:function(_max,_marker){var defer=$q.defer(),params={MaxItems:""+_max};_marker&&(params.Marker=_marker);var url=getRamRequestUrl("ListUsers",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getRole:function(_roleName){var defer=$q.defer(),params={RoleName:_roleName},url=getRamRequestUrl("GetRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},deleteRole:function(_roleName){var defer=$q.defer(),params={RoleName:_roleName},url=getRamRequestUrl("DeleteRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},updateRole:function(_roleName,_roleDoc){var defer=$q.defer(),params={RoleName:_roleName,NewAssumeRolePolicyDocument:_roleDoc},url=getRamRequestUrl("UpdateRole",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getRoles:function(){var defer=$q.defer(),url=getRamRequestUrl("ListRoles");return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getPolicies:function(_max,_marker,_type){var defer=$q.defer(),params={MaxItems:""+_max};_marker&&(params.Marker=_marker),!_type||"Custom"!==_type&&"System"!==_type||(params.PolicyType=_type);var url=getRamRequestUrl("ListPolicies",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},deletePolicy:function(_policyName){var defer=$q.defer(),params={PolicyName:_policyName},url=getRamRequestUrl("DeletePolicy",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},getPolicieVersions:function(_type,_name){var defer=$q.defer(),params={PolicyType:_type,PolicyName:_name},url=getRamRequestUrl("ListPolicyVersions",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},createPolicyVersion:function(_policyName,_policyDoc,_isDefault){var defer=$q.defer(),params={PolicyName:_policyName,PolicyDocument:_policyDoc,SetAsDefault:""+_isDefault},url=getRamRequestUrl("CreatePolicyVersion",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},deletePolicyVersion:function(_policyName,_versionId){var defer=$q.defer(),params={PolicyName:_policyName,VersionId:_versionId},url=getRamRequestUrl("DeletePolicyVersion",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise},setPolicyDefault:function(_policyName,_versionId){var defer=$q.defer(),params={PolicyName:_policyName,VersionId:_versionId},url=getRamRequestUrl("SetDefaultPolicyVersion",params);return $http.get(url).then(function(res){defer.resolve(res.data)},function(res){defer.reject(res)}),defer.promise}}}]).factory("OSSApi",["$http","RequestXML","OSSConfig","OSSRegion","localStorageService","$q",function($http,RequestXML,OSSConfig,OSSRegion,localStorageService,$q){var ajaxBaseUri="http://pay.jiagouyun.com",OSSAccessKeyId=OSS.invoke("getAccessID"),isIntranetNet=localStorageService.get(OSSRegion.getRegionPerfix()),currentLocation=OSS.invoke("getCurrentLocation"),isIntranet=OSSRegion.isIntranet(currentLocation),host=OSSConfig.getHost(),customHost=OSS.invoke("getCurrentHost"),getExpires=function(expires){return expires=angular.isUndefined(expires)?180:expires,parseInt((new Date).getTime()/1e3)+expires},getRequestUrl=function(bucket,region,expires,signature,canonicalizedResource,extraParam,isImgServer){region=OSSRegion.changeLocation(region);var requestUrl="http://"+(bucket?bucket+".":"")+(region?region+".":"")+host;if(isImgServer=!!isImgServer,isImgServer&&(requestUrl=requestUrl.replace(region,region.replace("oss","img"))),customHost){var _imgServer=null,_customHost=customHost;if(OSSConfig.isCustomClient())if(isIntranetNet){var intranetLocations=[];intranetLocations=isIntranet&&"1"===isIntranetNet?OSSRegion.getIntranetLocationItem():[OSSRegion.getInternetLocationItem()].concat([OSSRegion.getIntranetInner(!0)]);var _item=_.find(intranetLocations,function(item){return 1===item.enable&&item.location.indexOf(region)>=0});requestUrl="http://"+(bucket?bucket+".":"")+_item.customhost,_imgServer=_item.imghost,_customHost=_item.customhost}else{var internetLocation=OSSRegion.getInternetLocationItem();_imgServer=internetLocation.imghost,requestUrl="http://"+(bucket?bucket+".":"")+internetLocation.customhost,_customHost=internetLocation.customhost}else requestUrl="http://"+(bucket?bucket+".":"")+_customHost;if(isImgServer)if(_imgServer)requestUrl="http://"+(bucket?bucket+".":"")+_imgServer;else{var _host=_customHost.substring(0,_customHost.indexOf("."))+"-picture"+_customHost.substring(_customHost.indexOf("."));requestUrl=requestUrl.replace(_customHost,_host)}}return canonicalizedResource=canonicalizedResource.replace(new RegExp("^/"+bucket),""),requestUrl+=canonicalizedResource,requestUrl+=(requestUrl.indexOf("?")>=0?"&":"?")+$.param({OSSAccessKeyId:OSSAccessKeyId,Expires:expires,Signature:signature}),requestUrl+=extraParam?"&"+$.param(extraParam):""},getCanonicalizedResource=function(bucketName,objectName,subResources){var subResourcesStr=subResources?Util.param(subResources):"";return"/"+(bucketName?bucketName+"/":"")+(objectName?objectName:"")+(subResourcesStr?"?"+subResourcesStr:"")};return{getURI:function(bucket,objectName,_expires){if(_expires){var expires=getExpires(+_expires),canonicalizedResource=getCanonicalizedResource(bucket.Name,objectName),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource});return getRequestUrl(bucket.Name,bucket.Location,expires,signature,getCanonicalizedResource(bucket.Name,encodeURIComponent(objectName)))}var _location=OSSRegion.changeLocation(bucket.Location),_url="http://"+bucket.Name+"."+_location+"."+host+"/"+encodeURI(objectName);if(OSSConfig.isCustomClient()&&customHost&&(_url="http://"+bucket.Name+"."+customHost+"/"+encodeURI(objectName),isIntranetNet)){var intranetLocations=[];intranetLocations=isIntranet&&"1"===isIntranetNet?OSSRegion.getIntranetLocationItem():[OSSRegion.getInternetLocationItem()].concat([OSSRegion.getIntranetInner(!0)]);var _item=_.find(intranetLocations,function(item){return 1===item.enable&&item.location.indexOf(_location)>=0});_url="http://"+bucket.Name+"."+_item.customhost+"/"+encodeURI(objectName)}return _url},getBuckets:function(){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl("",currentLocation?currentLocation:"oss",expires,signature,canonicalizedResource);return $http.get(requestUrl)},getBucketRefer:function(bucket){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,"",{referer:void 0}),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource);return $http.get(requestUrl)},setBucketRefer:function(bucket,refer){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,"",{referer:void 0}),contentType="application/xml",signature=OSS.invoke("getSignature",{verb:"PUT",content_type:contentType,expires:expires,canonicalized_resource:canonicalizedResource}),headers=angular.extend({},{},{Accept:contentType,"Content-Type":contentType}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource);return $http.put(requestUrl,RequestXML.getSetBucketReferXML(refer),{headers:headers})},saveBucketChannel:function(bucketName,bucketRegion,_status,_origPicForbidden,_useStyleOnly){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucketName),contentType="application/xml",signature=OSS.invoke("getSignature",{verb:"PUT",content_type:contentType,expires:expires,canonicalized_resource:canonicalizedResource}),setting={Status:_status?"enable":"disable",OrigPicForbidden:_origPicForbidden,UseStyleOnly:_useStyleOnly},headers=angular.extend({},{},{Accept:contentType,"Content-Type":contentType}),requestUrl=getRequestUrl(bucketName,bucketRegion,expires,signature,canonicalizedResource,null,!0);return $http.put(requestUrl,RequestXML.getCreateChannelXml(setting),{headers:headers})},getBucketChannel:function(bucket){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource,null,!0);return $http.get(requestUrl)},createBucket:function(bucketName,region,acl){var expires=getExpires(),canonicalizedOSSheaders={"x-oss-acl":acl},canonicalizedResource=getCanonicalizedResource(bucketName),contentType="application/xml",signature=OSS.invoke("getSignature",{verb:"PUT",content_type:contentType,expires:expires,canonicalized_oss_headers:canonicalizedOSSheaders,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucketName,region,expires,signature,canonicalizedResource),headers=angular.extend({},canonicalizedOSSheaders,{"Content-Type":contentType});return $http.put(requestUrl,null,{headers:headers})},getBucketAcl:function(bucket){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,"",{acl:void 0}),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource);return $http.get(requestUrl)},editBucket:function(bucket,acl){var expires=getExpires(),canonicalizedOSSheaders={"x-oss-acl":acl},canonicalizedResource=getCanonicalizedResource(bucket.Name,""),contentType="application/xml",signature=OSS.invoke("getSignature",{verb:"PUT",content_type:contentType,expires:expires,canonicalized_oss_headers:canonicalizedOSSheaders,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource),headers=angular.extend({},canonicalizedOSSheaders,{"Content-Type":contentType});return $http.put(requestUrl,"",{headers:headers})},delBucket:function(bucket){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,""),signature=OSS.invoke("getSignature",{verb:"DELETE",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource);return $http["delete"](requestUrl)},getObjects:function(bucket,prefix,delimiter,marker,maxKeys){var param={prefix:prefix};$.extend(param,{delimiter:delimiter,marker:marker,"max-keys":maxKeys});var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,""),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource,param);return $http.get(requestUrl)},getObjectMeta:function(bucket,object){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,object),signature=OSS.invoke("getSignature",{verb:"HEAD",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,getCanonicalizedResource(bucket.Name,encodeURIComponent(object)));return $http.head(requestUrl)},putObject:function(bucket,objectPath,headers,canonicalizedOSSheaders){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,objectPath),signature=OSS.invoke("getSignature",{verb:"PUT",content_type:headers["Content-Type"],expires:expires,canonicalized_oss_headers:canonicalizedOSSheaders,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,getCanonicalizedResource(bucket.Name,encodeURIComponent(objectPath)));return $http.put(requestUrl,"",{headers:angular.extend({},headers,canonicalizedOSSheaders)})},listUploads:function(bucket,prefix,delimiter,keyMarker,maxUploads,uploadIdMaker){var param={prefix:prefix};$.extend(param,{delimiter:delimiter,"key-marker":keyMarker,"upload-id-marker":uploadIdMaker,"max-uploads":maxUploads});var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,"",{uploads:void 0}),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,canonicalizedResource,param);return $http.get(requestUrl)},deleteUpload:function(bucket,upload){var expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,upload.path,{uploadId:upload.id}),signature=OSS.invoke("getSignature",{verb:"DELETE",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,getCanonicalizedResource(bucket.Name,encodeURIComponent(upload.path),{uploadId:upload.id}));return $http["delete"](requestUrl)},listUploadPart:function(bucket,upload,partNumberMaker,maxParts){var param={"part-number-marker":partNumberMaker,"max-parts":maxParts},expires=getExpires(),canonicalizedResource=getCanonicalizedResource(bucket.Name,upload.path,{uploadId:upload.id}),signature=OSS.invoke("getSignature",{verb:"GET",expires:expires,canonicalized_resource:canonicalizedResource}),requestUrl=getRequestUrl(bucket.Name,bucket.Location,expires,signature,getCanonicalizedResource(bucket.Name,encodeURIComponent(upload.path),{uploadId:upload.id}),param);return $http.get(requestUrl)},getSpeedCart:function(cartNumber,baseUri){baseUri=baseUri||ajaxBaseUri;var requestUrl=baseUri+"/cardnumber/detail/get";return requestUrl+=(requestUrl.indexOf("?")>=0?"&":"?")+$.param({cartNumber:cartNumber}),$http.get(requestUrl)},startCartSpeed:function(cartNumber,baseUri){baseUri=baseUri||ajaxBaseUri;var requestUrl=baseUri+"/flowwallet/upload/init",param={cartNumber:cartNumber},defer=$q.defer();return $http.post(requestUrl,param).success(function(res){defer.resolve(res)}).error(function(res){defer.resolve(res)}),defer.promise}}}]).factory("OSSUploadPart",["OSSApi","$filter","$q",function(OSSApi,$filter,$q){return{list:function(bucket,prefix,delimiter,lastKeyMaker,loadFileCount,lastUploadMaker){var _self=this,defer=$q.defer();return OSSApi.listUploads(bucket,prefix,delimiter,lastKeyMaker,loadFileCount,lastUploadMaker).success(function(res){var result=res.ListMultipartUploadsResult,contents=result.Upload;contents=contents?angular.isArray(contents)?contents:[contents]:[];var commonPrefixes=result.CommonPrefixes;commonPrefixes=commonPrefixes?angular.isArray(commonPrefixes)?commonPrefixes:[commonPrefixes]:[];var files=[];angular.forEach($.merge(contents,commonPrefixes),function(file){file.Key!==prefix&&file.Prefix!==prefix&&files.push(_self.format(file))}),defer.resolve({uploads:files,keyMaker:result.NextKeyMarker,uploadIdMaker:result.NextUploadIdMarker,allLoaded:"false"===result.IsTruncated})}).error(function(res,status){defer.reject(res,status)}),defer.promise},format:function(upload){var path=upload.Key||upload.Prefix,isDir="/"===Util.String.lastChar(path)?1:0,filename=isDir?$filter("getPrefixName")(path,1):$filter("baseName")(path);return{path:path,dir:isDir,filename:filename,id:upload.UploadId,initTime:upload.Initiated}}}}]).factory("OSSModal",["$modal","OSSAlert","OSSDialog","OSSConfig","Bucket","OSSApi","OSSRam","OSSObject","OSSException","OSSRegion","$rootScope","usSpinnerService","SpeedService","gettext","gettextCatalog","localStorageService","OSSI18N","OSSVersionLogs","$timeout",function($modal,OSSAlert,OSSDialog,OSSConfig,Bucket,OSSApi,OSSRam,OSSObject,OSSException,OSSRegion,$rootScope,usSpinnerService,SpeedService,gettext,gettextCatalog,localStorageService,OSSI18N,OSSVersionLogs,$timeout){var defaultOption={backdrop:"static"},OSSModal={setting:function(){var option={templateUrl:"views/setting_modal.html",windowClass:"setting_modal",controller:function($scope,$modalInstance){$scope.min=1,$scope.max=10,$scope.maxTaskLimit=99,$scope.isCustomClient=OSSConfig.isCustomClient(),$scope.setting=OSS.invoke("getTransInfo"),$scope.showLanSetting=OSSConfig.showLanSetting(),$scope.lanLists=angular.copy(OSSI18N.getLanLists()),$scope.lanLists.selected=OSSI18N.getCurrLan(),$scope.showRam=OSSConfig.showRam();var checkSetting=function(setting){var unValidMsg="";return angular.forEach(setting,function(val,key){return/^[1-9]{1}[0-9]*$/.test(val)?void 0:(unValidMsg=gettextCatalog.getString(gettext("设置的值必须是正整数")),unValidMsg=_.indexOf(["upload_peer_max","download_peer_max"],key)>=0?gettextCatalog.getString(gettext("单任务线程数必须是大于{{min}}小于等于{{max}}的整数"),{min:$scope.min,max:$scope.max}):gettextCatalog.getString(gettext("同时任务数必须是大于{{min}}小于等于{{max}}的整数"),{min:$scope.min,max:$scope.maxTaskLimit}),!1)}),unValidMsg?($rootScope.$broadcast("showError",unValidMsg),!1):!0};$scope.saveSetting=function(setting){gettextCatalog.setCurrentLanguage($scope.lanLists.selected.lan),OSSI18N.setCurrLan($scope.lanLists.selected.key),$rootScope.$emit("loadAllNews"),OSSVersionLogs.getVersionLogs().then(function(res){$rootScope.versionLogs=res}),checkSetting(setting)&&(angular.forEach(setting,function(val,key){setting[key]=parseInt(val)}),OSS.invoke("setTransInfo",setting),$modalInstance.dismiss("cancel"))},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.exportAuth=function(){OSSDialog.exportAuthorization()}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},addBucket:function(bucket){var _context=this,option={templateUrl:"views/add_bucket_modal.html",windowClass:"add_bucket_modal",controller:function($scope,$modalInstance){$scope.loading=!1,$scope.getingBucketInfo=!1,$scope.bucket=bucket||null,$scope.cBucket={};var acls=[];angular.forEach(Bucket.getAcls(),function(val,key){acls.push({name:val,value:key})}),$scope.acls=acls,bucket||($scope.acls.selected=$scope.acls[0]),$scope.$watch("loading",function(newVal){newVal?usSpinnerService.spin("add-bucket-spinner"):usSpinnerService.stop("add-bucket-spinner")}),$scope.$watch("getingBucketInfo",function(newVal){newVal?usSpinnerService.spin("get-bucket-spinner"):usSpinnerService.stop("get-bucket-spinner")});var currentLocation=OSS.invoke("getCurrentLocation");if($scope.isDisableLocationSelect=OSSConfig.isDisableLocationSelect()||currentLocation,$scope.isDisableLocationSelect||($scope.regions=OSSRegion.list()),bucket)$scope.cBucket.region=OSSRegion.getRegionByLocation(bucket.Location);else if($scope.isDisableLocationSelect){if(!currentLocation)return;$scope.cBucket.region=OSSRegion.getRegionByLocation(currentLocation)}else $scope.cBucket.region=$scope.regions[0];$scope.bucket?($scope.loading=!0,$scope.getingBucketInfo=!0,OSSApi.getBucketAcl(bucket).success(function(res){$scope.loading=!1,$scope.getingBucketInfo=!1,$scope.acls.selected=Util.Array.getObjectByKeyValue($scope.acls,"value",res.AccessControlPolicy.AccessControlList.Grant)}).error(function(res,status){$scope.loading=!1,$scope.getingBucketInfo=!1,$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})):$scope.loading=!0,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.loading=!1,$scope.createBucket=function(bucketName,region,acl){if(!bucketName||!bucketName.length)return void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("Bucket的名称不能为空")));if(!/^[a-z0-9][a-z0-9\-]{1,61}[a-z0-9]$/.test(bucketName))return void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("Bucket的名称格式错误")));if(Bucket.getBucket(bucketName)){var _options={bucketName:bucketName,Code:"BucketAlreadyExists"};return void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("已存在相同名称的Bucket")),null,null,_options)}$scope.loading=!0,OSSApi.createBucket(bucketName,region.location,acl.value).success(function(res){$scope.loading=!1,$modalInstance.close({act:"add",bucket:{Name:bucketName,Location:region.location,Acl:acl.value}})}).error(function(response,statusCode){$scope.loading=!1;var _options=void 0;response&&response.Error&&"BucketAlreadyExists"===response.Error.Code&&(_options={bucketName:bucketName,Code:"BucketAlreadyExists"}),$rootScope.$broadcast("showError",OSSException.getError(response,statusCode).msg,null,null,_options)})},$scope.editBucket=function(acl){$scope.loading=!0,OSSApi.editBucket(bucket,acl.value).success(function(){$scope.loading=!1,angular.extend(bucket,{Acl:acl.value}),$modalInstance.close({act:"edit",bucket:bucket})}).error(function(response,statusCode){$scope.loading=!1,$rootScope.$broadcast("showError",OSSException.getError(response,statusCode).msg)})},$scope.delBucket=function(){_context.delBucketConfirm(bucket).result.then(function(param){OSS.invoke("deleteBucket",{keyid:param.accessKey,keysecret:param.accessSecret,bucket:bucket.Name,location:bucket.Location},function(res){res.error?alert(OSSException.getClientErrorMsg(res)):($rootScope.$broadcast("removeBucket",bucket),$rootScope.$broadcast("reloadUploadQueue"),$rootScope.$broadcast("reloadDownloadQueue"),$modalInstance.close())})})}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},setObjectHttpHeader:function(bucket,objects){var option={templateUrl:"views/set_http_header_modal.html",windowClass:"set_http_header_modal",controller:function($scope,$modalInstance){if($scope.objects=objects,$scope.headers=[],angular.forEach("Content-Type Content-Disposition Content-Language Cache-Control Expires".split(" "),function(val){$scope.headers.push({name:val,text:val})}),$scope.customHeaders=[{nameModel:"",contentModel:""}],$scope.$watch("saving",function(newVal){newVal?usSpinnerService.spin("set-http-spinner"):usSpinnerService.stop("set-http-spinner")}),$scope.$watch("loading",function(newVal){newVal?usSpinnerService.spin("loading-spinner"):usSpinnerService.stop("loading-spinner")}),objects&&1==objects.length){var object=objects[0];$scope.loading=!0,OSSApi.getObjectMeta(bucket,object.path).success(function(data,status,getHeader){$scope.loading=!1,angular.forEach($scope.headers,function(header){header.model=getHeader(header.name),"Content-Disposition"==header.name&&header.model&&(header.model=decodeURIComponent(header.model))}),angular.forEach(getHeader(),function(val,key){0===key.indexOf("x-oss-meta-")&&$scope.customHeaders.push({nameModel:key.replace(/^x-oss-meta-/,""),contentModel:val})})}).error(function(res,status){$scope.loading=!1,$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})}$scope.setHttpHeader=function(headers,customHeaders){var ossHeaders={},canonicalizedOSSheaders={},unValidFieldValue=!1,contentTypeRequired=!1,checkFieldValueIsValid=function(value){return/^[a-zA-Z0-9\-_/.;,:="]+$/.test(value)};angular.forEach(headers,function(val){if("Content-Type"==val.name&&!val.model)return contentTypeRequired=!0,!1;if(val.model){if("Content-Disposition"==val.name){var valid=/^[\u4e00-\u9fa5a-zA-Z0-9\-_/.;,:=*'"]+$/.test(val.model);if(!valid)return unValidFieldValue=!0,!1;var _modelVal=val.model.match(/filename\*=utf-8''\S+/g);if(_modelVal&&_modelVal.length>0){var _str=_modelVal[0].substring("filename*=utf-8''".length);0!=_str.indexOf('"')&&(_str='"'+_str),_str.lastIndexOf('"')!=_str.length-1&&(_str+='"'),_modelVal=_str.substring(1,_str.length-1)}val.model=val.model.replace(/filename\*=utf-8''\S+/g,"filename*=utf-8''"+encodeURIComponent(_modelVal))}else if(!checkFieldValueIsValid(val.model))return unValidFieldValue=!0,!1;ossHeaders[val.name]=val.model}});var unValidField=!1;if(angular.forEach(customHeaders,function(val){if(val.nameModel){if(!/^[a-zA-Z0-9\-]+$/.test(val.nameModel))return unValidField=!0,!1;if(val.contentModel){if(!checkFieldValueIsValid(val.contentModel))return unValidFieldValue=!0,!1;canonicalizedOSSheaders["x-oss-meta-"+val.nameModel.toLowerCase()]=val.contentModel||""}}}),contentTypeRequired){var msg=gettextCatalog.getString(gettext("HTTP属性值格式错误"));return msg+='<p class="text-muted">'+gettextCatalog.getString(gettext("Content-Type是必填字段"))+"</p>",void $rootScope.$broadcast("showError",msg)}if(unValidFieldValue){var msg=gettextCatalog.getString(gettext("HTTP属性值格式错误"));return msg+='<p class="text-muted">'+gettextCatalog.getString(gettext("属性名称只能包含英文、数子、横线、下划线、斜杠、点、英文分号、英文逗号、英文冒号、英文双引号和等号"))+"</p>",void $rootScope.$broadcast("showError",msg)}if(unValidField){var msg=gettextCatalog.getString(gettext("属性名称格式错误"));return msg+='<p class="text-muted">'+gettextCatalog.getString(gettext("属性名称只能包含英文、数子或横线"))+"</p>",void $rootScope.$broadcast("showError",msg)}$scope.saving=!0;var errorSetObjects=[],_submitCount=0;angular.forEach(objects,function(object,index){angular.extend(canonicalizedOSSheaders,{"x-oss-copy-source":"/"+bucket.Name+"/"+encodeURIComponent(object.path)}),OSSApi.putObject(bucket,object.path,ossHeaders,canonicalizedOSSheaders).success(function(res){_submitCount+=1,_submitCount==objects.length&&($scope.saving=!1,$modalInstance.close())}).error(function(res,status){_submitCount+=1;var _filename=object.filename;if(errorSetObjects.push({filename:_filename,errmsg:OSSException.getError(res,status).msg}),_submitCount==objects.length){$scope.saving=!1;var _errorMsg="";angular.forEach(errorSetObjects,function(item){_errorMsg+=gettextCatalog.getString(gettext("文件{{fileName}}设置http头的错误信息:"),{fileName:item.filename})+item.errmsg+"<br/>"}),$rootScope.$broadcast("showError",_errorMsg)}})})},$scope.addCustomHeader=function(){$scope.customHeaders.push({nameModel:"",contentModel:""})},$scope.removeCustomHeader=function(header){var index=_.indexOf($scope.customHeaders,header);index>-1&&$scope.customHeaders.splice(index,1)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},setSpeed:function(){var option={templateUrl:"views/set_speed_modal.html",windowClass:"set_speed_modal",controller:function($scope,$modalInstance,$timeout){var _loadCartSpeedTimeout=null;$scope.speedSetting=SpeedService.getSpeedSetting();var startCartSpeed=function(cartNumber){OSSApi.startCartSpeed(cartNumber).then(function(res){return"400"==res.err_code?($rootScope.$broadcast("showError",res.err_msg),!1):(SpeedService.getSpeedSetting().active||(SpeedService.abledSpeed(),SpeedService.caclurSpeedTime()),void(_loadCartSpeedTimeout=$timeout(function(){startCartSpeed()},3e4)))})};$scope.stopOpenSpeed=function(){$timeout.cancel(_loadCartSpeedTimeout),SpeedService.disabledSpeed()},$scope.startOpenSpeed=function(){$scope.doing=!0,OSSApi.getSpeedCart($scope.speedSetting.speed.cartNumber).success(function(res){$scope.doing=!1;var _speed={cartNumber:res.cart_number,orderId:res.order_id,timeCount:res.time_count,timeUsed:res.time_used};SpeedService.setSpeedSetting({speed:_speed}),startCartSpeed($scope.speedSetting.speed.cartNumber)}).error(function(res,status){$scope.doing=!1;var _message="";_message="string"==typeof res?res:res.err_msg,$rootScope.$broadcast("showError",_message)})},$scope.goBuy=function(){OSS.invoke("openUrl",{url:"http://pay.jiagouyun.com"})},$scope.goSearchBill=function(){},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},callbackSetting:function(bucket){var option={templateUrl:"views/callback-setting.html",windowClass:"callback-setting-modal",controller:function($scope,$modalInstance,$timeout){$scope.min=1,
$scope.max=5;var _setting=OSS.invoke("getCallFunctionInfo",{bucket:bucket.Name});$scope.callbackSetting={times:_setting.num||3,url:_setting.url||"",rule:_setting.regular||"",status:_setting.status||0},$scope.setCallback=function(){var _params={bucket:bucket.Name,regular:$scope.callbackSetting.rule,url:$scope.callbackSetting.url,status:parseInt($scope.callbackSetting.status),num:parseInt($scope.callbackSetting.times)};OSS.invoke("setCallFunctionInfo",_params),$modalInstance.dismiss("cancel")},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},setRefer:function(bucket){var option={templateUrl:"views/set_refer_modal.html",windowClass:"set_refer_modal",controller:function($scope,$modalInstance){$scope.loading=!0,$scope.refer={content:"",allowEmpty:!0},OSSApi.getBucketRefer(bucket).success(function(res){$scope.loading=!1;var _referContent="";if(res.RefererConfiguration&&res.RefererConfiguration.RefererList&&res.RefererConfiguration.RefererList.Referer)if(angular.isArray(res.RefererConfiguration.RefererList.Referer))for(var i=0;i<res.RefererConfiguration.RefererList.Referer.length;i++)_referContent+=res.RefererConfiguration.RefererList.Referer[i]+";";else _referContent+=res.RefererConfiguration.RefererList.Referer+";";$scope.refer.content=_referContent.replace(/;/g,"\r"),$scope.refer.allowEmpty=Boolean("true"==res.RefererConfiguration.AllowEmptyReferer)}).error(function(res,status){$scope.loading=!1,$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}),$scope.disabledSave=function(){return $scope.refer.allowEmpty||$scope.refer.content&&0!=$scope.refer.content.length?$scope.saving?!0:!1:!0},$scope.setReferer=function(){$scope.saving=!0;var _refer=$scope.refer.content.replace(/\r|\n/gi,";"),params={content:_refer,allowEmpty:$scope.refer.allowEmpty};OSSApi.setBucketRefer(bucket,params).success(function(res){$scope.saving=!1,$modalInstance.dismiss("cancel")}).error(function(res,status){$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},setImageServer:function(bucket){var option={templateUrl:"views/set_image_server_modal.html",windowClass:"set_imageserver_modal",controller:function($scope,$modalInstance){$scope.loading=!0,$scope.channel={name:bucket.Name,Status:!1,OrigPicForbidden:!1,UseStyleOnly:!1},OSSApi.getBucketChannel(bucket).success(function(res){var channel=res.Channel;$scope.channel.name=channel.Name,$scope.channel.Status=0===channel.Status.toLowerCase().indexOf("enable")?!0:!1,$scope.channel.OrigPicForbidden="true"===channel.OrigPicForbidden.toLowerCase()?!0:!1,$scope.channel.UseStyleOnly="true"===channel.UseStyleOnly.toLowerCase()?!0:!1,$scope.loading=!1}).error(function(res,status){status&&404==status?$scope.loading=!1:$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}),$scope.saveChannel=function(){$scope.saving=!0,OSSApi.saveBucketChannel(bucket.Name,bucket.Location,$scope.channel.Status,$scope.channel.OrigPicForbidden,$scope.channel.UseStyleOnly).success(function(res){$scope.saving=!1,$modalInstance.dismiss("cancel")}).error(function(res,status){$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},setRamServiceModal:function(){var option={templateUrl:"views/ram-service-modal.html",windowClass:"ram-service-modal",controller:function($scope,$modalInstance){$scope.aliyun={uuid:"",pattern:/^[0-9]{16}$/},$scope.activeRam=function(){OSSRam.activateService($scope.aliyun.uuid).then(function(res){$modalInstance.dismiss("cancel"),OSSRam.setRam()},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},ramUserManage:function(user,_tab){_tab=_tab||"info";var option={templateUrl:"views/ram-user-manage.html",windowClass:"ram-user-manage-modal",controller:function($scope,$modalInstance){$scope.info={pattern:{name:/^[a-zA-Z0-9\u4e00-\u9fa5\.@\-_]{1,64}$/,display:/^[a-zA-Z0-9\.@\-\u4e00-\u9fa5]{0,12}$/,phone:/^([0-9]+\-){0,1}[0-9]{11}$/,email:/^[a-zA-Z0-9]+\@[a-zA-Z0-9]+\.[a-zA-Z0-9]+$/,desc:/^[\S\s]{0,128}$/},edit:!1,active:"info"==_tab,data:null,editData:null,loading:!0},$scope.accessKey={active:"accessKey"==_tab,list:null,loading:!0},$scope.group={active:"group"==_tab,hasGroup:{list:null,loading:!0,active:!1},listGroup:{list:[],loading:!1,active:!1,hasMore:!1,marker:null,max:20}},$scope.policies={active:"policy"==_tab,hasPolicies:{active:!0,loading:!0,list:null},listPolicies:{active:!1,loading:!0,list:[],marker:null,max:20,hasMore:!1,type:"Custom"}};var getUserPolicies=function(){OSSRam.getUserPolicies(user.UserName).then(function(res){console.log("user policy:",res),$scope.policies.hasPolicies.list=res.Policies.Policy,$scope.policies.hasPolicies.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getAllPolicies=function(_max,_marker,_type){_max=_max||50,OSSRam.getPolicies(_max,_marker,_type).then(function(res){res.IsTruncated?($scope.policies.listPolicies.marker=res.Marker,$scope.policies.listPolicies.hasMore=!0):($scope.policies.listPolicies.marker=null,$scope.policies.listPolicies.hasMore=!1);var _allPolicies=res.Policies.Policy;if($scope.policies.hasPolicies.list)for(var i=0;i<_allPolicies.length;i++)for(var j=0;j<$scope.policies.hasPolicies.list.length;j++)if(_allPolicies[i].PolicyName==$scope.policies.hasPolicies.list[j].PolicyName){_allPolicies[i].exist=!0;break}$scope.policies.listPolicies.list=$scope.policies.listPolicies.list.concat(_allPolicies),$scope.policies.listPolicies.loading=!1})},getUserInfo=function(){OSSRam.getUser(user.UserName).then(function(res){$scope.info.data={UserId:user.UserId,oldUserName:user.UserName,userName:res.User.UserName,displayName:res.User.DisplayName,phone:res.User.MobilePhone,id:res.User.UserId,email:res.User.Email,desc:res.User.Comments,createDate:res.User.CreateDate,lastLoginDate:res.User.LastLoginDate,updateDate:res.User.UpdateDate},$scope.info.editData=angular.copy($scope.info.data)},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getAccessKeyList=function(){OSSRam.listUserAccessKey(user.UserName).then(function(res){$scope.accessKey.list=res.AccessKeys.AccessKey,$scope.accessKey.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getUserGroups=function(){OSSRam.getUserGroups(user.UserName).then(function(res){console.log("get user group:",res),$scope.group.hasGroup.list=res.Groups.Group,$scope.group.hasGroup.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getAllUserGroups=function(_max,_marker){_max=_max||50,OSSRam.getGroups(_max,_marker).then(function(res){res.IsTruncated?($scope.group.listGroup.marker=res.Marker,$scope.group.listGroup.hasMore=!0):($scope.group.listGroup.marker=null,$scope.group.listGroup.hasMore=!1);var _allGroup=res.Groups.Group;if($scope.group.hasGroup.list)for(var i=0;i<_allGroup.length;i++)for(var j=0;j<$scope.group.hasGroup.list.length;j++)if(_allGroup[i].GroupName==$scope.group.hasGroup.list[j].GroupName){_allGroup[i].exist=!0;break}$scope.group.listGroup.list=$scope.group.listGroup.list.concat(_allGroup),$scope.group.listGroup.loading=!1,console.log("list groups:",$scope.group.listGroup.list)})};getUserInfo(),$scope.changeEditModel=function(){$scope.info.edit=!$scope.info.edit,$scope.info.edit||($scope.info.editData=angular.copy($scope.info.data))},$scope.updateUser=function(){OSSRam.updateUser($scope.info.editData).then(function(res){$scope.info.data=angular.copy($scope.info.editData),user=angular.extend(user,res.User),$scope.info.edit=!1,alert(gettextCatalog.getString(gettext("用户信息修改成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.deleteUser=function(){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要删除当前用户吗？"))).result.then(function(){OSSRam.deleteUser(user.UserName).then(function(res){alert(gettextCatalog.getString(gettext("用户删除成功！"))),$rootScope.$broadcast("UpdateRamListData","user"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.showAkSecret=function(ak){if("Inactive"==ak.Status)return!1;if(!ak.AccessKeySecret&&OSSClient.gAccountAction){var param={subkeyid:ak.AccessKeyId},_ak=OSSClient.gAccountAction("getram",JSON.stringify(param));_ak&&(_ak=JSON.parse(_ak),ak.AccessKeySecret=_ak.subsecret)}ak.showSecret=!0},$scope.createKey=function(){OSSRam.createAccessKey(user.UserName).then(function(res){alert(gettextCatalog.getString(gettext("创建AccessKey成功！")));var param={subkeyid:res.AccessKey.AccessKeyId,subsecret:res.AccessKey.AccessKeySecret};OSSClient.gAccountAction&&OSSClient.gAccountAction("addram",JSON.stringify(param)),$scope.accessKey.list.push(res.AccessKey)},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.updateAccessKey=function(_ak){var _status="Active"==_ak.Status?"Inactive":"Active",_update=function(){OSSRam.updateAccessKey(_ak.AccessKeyId,user.UserName,_status).then(function(res){var _message="Active"==_status?gettextCatalog.getString(gettext("启用AccessKey成功！")):gettextCatalog.getString(gettext("禁用AccessKey成功！"));alert(_message),_ak.Status=_status},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})};"Inactive"==_status?OSSAlert.confirm(gettextCatalog.getString(gettext("确定要禁用当前AccessKey吗？"))).result.then(function(){_update()}):_update()},$scope.delAccessKey=function(_ak){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要删除当前用户的AccessKey吗？"))).result.then(function(){OSSRam.deleteAccessKey(_ak.AccessKeyId,user.UserName).then(function(res){alert(gettextCatalog.getString(gettext("删除AccessKey成功！"))),OSSClient.gAccountAction&&OSSClient.gAccountAction("delram",JSON.stringify({subkeyid:_ak.AccessKeyId})),getAccessKeyList()},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.removePolicy=function(_policy,_index){OSSRam.detachPolicyFromUser(_policy.PolicyType,_policy.PolicyName,user.UserName).then(function(res){$scope.policies.hasPolicies.list.splice(_index,1),alert(gettextCatalog.getString(gettext("移除授权成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.setPolicy=function(_policy){OSSRam.attachPolicyToUser(_policy.PolicyType,_policy.PolicyName,user.UserName).then(function(res){_policy.exist=!0,alert(gettextCatalog.getString(gettext("授权成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.selectTabs=function(_type){"info"==_type?($scope.accessKey.active=!1,$scope.group.active=!1,$scope.policies.active=!1,$scope.info.active=!0,$scope.info.loading=!0,getUserInfo()):"accessKey"==_type?($scope.accessKey.active=!0,$scope.info.active=!1,$scope.group.active=!1,$scope.policies.active=!1,$scope.accessKey.loading=!0,$scope.accessKey.list=null,getAccessKeyList()):"group"==_type?($scope.accessKey.active=!1,$scope.info.active=!1,$scope.policies.active=!1,$scope.group.hasGroup.active=!0,$scope.group.hasGroup.loading=!0,$scope.group.hasGroup.list=null,$scope.group.listGroup.active=!1,$scope.group.listGroup.loading=!1,$scope.group.listGroup.list=[],getUserGroups()):"policy"==_type&&($scope.accessKey.active=!1,$scope.info.active=!1,$scope.group.active=!1,$scope.policies.active=!0,$scope.policies.hasPolicies.active=!0,$scope.policies.hasPolicies.loading=!0,$scope.policies.hasPolicies.list=null,$scope.policies.listPolicies.active=!1,$scope.policies.listPolicies.loading=!1,$scope.policies.listPolicies.list=[],getUserPolicies())},$scope.loadMoreGroups=function(){$scope.group.listGroup.loading=!0,$scope.group.listGroup.list=[],getAllUserGroups($scope.group.listGroup.max,$scope.group.listGroup.marker)},$scope.loadMorePolicies=function(){$scope.policies.listPolicies.loading=!0,getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type)},$scope.changePolicyType=function(_type){$scope.policies.listPolicies.type=_type,$scope.policies.listPolicies.marker=null,$scope.policies.listPolicies.list=[],$scope.policies.listPolicies.loading=!0,getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type)},$scope.removeUserToGroups=function(_group,_index){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要移除该用户组吗？"))).result.then(function(){OSSRam.removeUserToGroups(user.UserName,_group.GroupName).then(function(res){$scope.group.hasGroup.list.splice(_index,1),alert(gettextCatalog.getString(gettext("移除用户组成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.addUserToGroup=function(_group){OSSRam.addUserToGroups(user.UserName,_group.GroupName).then(function(res){alert(gettextCatalog.getString(gettext("加入用户组成功！"))),_group.exist=!0},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.policyModalChange=function(){$scope.policies.listPolicies.active?($scope.policies.listPolicies.active=!1,$scope.policies.hasPolicies.active=!0,$scope.policies.hasPolicies.loading=!0,$scope.policies.hasPolicies.list=null,getUserPolicies()):($scope.policies.hasPolicies.active=!1,$scope.policies.listPolicies.active=!0,$scope.policies.listPolicies.loading=!0,$scope.policies.listPolicies.list=[],getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type))},$scope.groupModalChange=function(){$scope.group.listGroup.active?($scope.group.listGroup.active=!1,$scope.group.hasGroup.active=!0,$scope.group.hasGroup.loading=!0,$scope.group.hasGroup.list=null,getUserGroups()):($scope.group.hasGroup.active=!1,$scope.group.listGroup.active=!0,$scope.group.listGroup.loading=!0,$scope.group.listGroup.list=[],getAllUserGroups($scope.group.listGroup.max,$scope.group.listGroup.marker))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},ramGroupManage:function(group,_tab){_tab=_tab||"info";var option={templateUrl:"views/ram-group-manage.html",windowClass:"ram-group-manage-modal",controller:function($scope,$modalInstance){$scope.info={pattern:{name:/^[a-zA-Z0-9\u4e00-\u9fa5\.@\-_]{1,64}$/,desc:/^[\S\s]{0,128}$/},edit:!1,active:"info"==_tab,data:angular.copy(group),editData:angular.copy(group),loading:!0},$scope.user={active:"user"==_tab,hasUser:{list:null,loading:!0,active:!1},listUser:{list:[],loading:!1,active:!1,hasMore:!1,marker:null,max:20}},$scope.policies={active:"policy"==_tab,hasPolicies:{active:!0,loading:!0,list:null},listPolicies:{active:!1,loading:!0,list:[],marker:null,max:20,hasMore:!1,type:"Custom"}};var getGroupPolicies=function(){OSSRam.getGroupPolicies(group.GroupName).then(function(res){console.log("group policy:",res),$scope.policies.hasPolicies.list=res.Policies.Policy,$scope.policies.hasPolicies.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getAllPolicies=function(_max,_marker,_type){_max=_max||50,OSSRam.getPolicies(_max,_marker,_type).then(function(res){res.IsTruncated?($scope.policies.listPolicies.marker=res.Marker,$scope.policies.listPolicies.hasMore=!0):($scope.policies.listPolicies.marker=null,$scope.policies.listPolicies.hasMore=!1);var _allPolicies=res.Policies.Policy;if($scope.policies.hasPolicies.list)for(var i=0;i<_allPolicies.length;i++)for(var j=0;j<$scope.policies.hasPolicies.list.length;j++)if(_allPolicies[i].PolicyName==$scope.policies.hasPolicies.list[j].PolicyName){_allPolicies[i].exist=!0;break}$scope.policies.listPolicies.list=$scope.policies.listPolicies.list.concat(_allPolicies),$scope.policies.listPolicies.loading=!1})},getGroupUser=function(){OSSRam.getGroupUsers(group.GroupName).then(function(res){$scope.user.hasUser.list=res.Users.User,$scope.user.hasUser.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getAllUsers=function(_max,_marker){_max=_max||50,OSSRam.getUsers(_max,_marker).then(function(res){if(res&&!res.err){res.IsTruncated?($scope.user.listUser.marker=res.Marker,$scope.user.listUser.hasMore=!0):($scope.user.listUser.marker=null,$scope.user.listUser.hasMore=!1);var _allUsers=res.Users.User;if($scope.user.hasUser.list)for(var i=0;i<_allUsers.length;i++)for(var j=0;j<$scope.user.hasUser.list.length;j++)if(_allUsers[i].UserName==$scope.user.hasUser.list[j].UserName){_allUsers[i].exist=!0;break}$scope.user.listUser.list=$scope.user.listUser.list.concat(res.Users.User)}$scope.user.listUser.loading=!1})};$scope.loadMoreUsers=function(){$scope.user.listUser.loading=!0,$scope.user.listUser.list=[],getAllUsers($scope.user.listUser.max,$scope.user.listUser.marker)},$scope.loadMorePolicies=function(){$scope.policies.listPolicies.loading=!0,getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type)},$scope.selectTabs=function(_type){"info"==_type?($scope.user.active=!1,$scope.policies.active=!1,$scope.info.active=!0):"user"==_type?($scope.user.active=!0,$scope.info.active=!1,$scope.policies.active=!1,$scope.user.hasUser.loading=!0,$scope.user.hasUser.list=null,getGroupUser()):"policy"==_type&&($scope.info.active=!1,$scope.user.active=!1,$scope.policies.active=!0,$scope.policies.hasPolicies.active=!0,$scope.policies.hasPolicies.loading=!0,$scope.policies.hasPolicies.list=null,$scope.policies.listPolicies.active=!1,$scope.policies.listPolicies.loading=!1,$scope.policies.listPolicies.list=[],getGroupPolicies())},$scope.changePolicyType=function(_type){$scope.policies.listPolicies.type=_type,$scope.policies.listPolicies.marker=null,$scope.policies.listPolicies.list=[],$scope.policies.listPolicies.loading=!0,getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type)},$scope.policyModalChange=function(){$scope.policies.listPolicies.active?($scope.policies.listPolicies.active=!1,$scope.policies.hasPolicies.active=!0,$scope.policies.hasPolicies.loading=!0,$scope.policies.hasPolicies.list=null,getGroupPolicies()):($scope.policies.hasPolicies.active=!1,$scope.policies.listPolicies.active=!0,$scope.policies.listPolicies.loading=!0,$scope.policies.listPolicies.list=[],getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type))},$scope.userModalChange=function(){$scope.user.listUser.active?($scope.user.listUser.active=!1,$scope.user.hasUser.active=!0,$scope.user.hasUser.loading=!0,$scope.user.hasUser.list=null,getGroupUser()):($scope.user.hasUser.active=!1,$scope.user.listUser.active=!0,$scope.user.listUser.loading=!0,$scope.user.listUser.list=[],getAllUsers($scope.user.listUser.max,$scope.user.listUser.marker))},$scope.removePolicy=function(_policy,_index){OSSRam.detachPolicyFromGroup(_policy.PolicyType,_policy.PolicyName,group.GroupName).then(function(res){$scope.policies.hasPolicies.list.splice(_index,1),alert(gettextCatalog.getString(gettext("移除授权成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.setPolicy=function(_policy){OSSRam.attachPolicyToGroup(_policy.PolicyType,_policy.PolicyName,group.GroupName).then(function(res){_policy.exist=!0,alert(gettextCatalog.getString(gettext("授权成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.removeUserToGroups=function(_user,_index){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要移除该用户吗？"))).result.then(function(){OSSRam.removeUserToGroups(_user.UserName,group.GroupName).then(function(res){$scope.user.hasUser.list.splice(_index,1),alert(gettextCatalog.getString(gettext("移除用户成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.addUserToGroup=function(_user){OSSRam.addUserToGroups(_user.UserName,group.GroupName).then(function(res){alert(gettextCatalog.getString(gettext("添加用户成功！"))),_user.exist=!0},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.deleteGroup=function(){OSSAlert.confirm(gettextCatalog.getString(gettext("确定要删除当前用户组吗？"))).result.then(function(){OSSRam.deleteGroup(group.GroupName).then(function(res){alert(gettextCatalog.getString(gettext("用户组删除成功！"))),$rootScope.$broadcast("UpdateRamListData","group"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.updateGroup=function(){$scope.info.editData.oldGroupName=$scope.info.data.GroupName,OSSRam.updateGroup($scope.info.editData).then(function(res){$scope.info.data=angular.copy($scope.info.editData),group=angular.extend(group,res.Group),$scope.info.edit=!1,alert(gettextCatalog.getString(gettext("组信息修改成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.changeEditModel=function(){$scope.info.edit=!$scope.info.edit,$scope.info.edit||($scope.info.editData=angular.copy($scope.info.data))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},ramRoleManage:function(role,_tab){_tab=_tab||"info";var option={templateUrl:"views/ram-role-manage.html",windowClass:"ram-role-manage-modal",controller:function($scope,$modalInstance){$scope.info={pattern:{doc:/^[\S\s]{1,2048}$/},edit:!1,active:"info"==_tab,data:angular.copy(role),editData:angular.copy(role),loading:!0},$scope.policies={active:"policy"==_tab,hasPolicies:{active:!0,loading:!0,list:null},listPolicies:{active:!1,loading:!0,list:[],marker:null,max:20,hasMore:!1,type:"Custom"}};var getRole=function(){OSSRam.getRole(role.RoleName).then(function(res){$scope.info.data=res.Role,$scope.info.editData=angular.copy(res.Role),$scope.info.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getRolePolicies=function(){OSSRam.getRolePolicies(role.RoleName).then(function(res){console.log("role policy:",res),$scope.policies.hasPolicies.list=res.Policies.Policy,$scope.policies.hasPolicies.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},getAllPolicies=function(_max,_marker,_type){_max=_max||50,OSSRam.getPolicies(_max,_marker,_type).then(function(res){res.IsTruncated?($scope.policies.listPolicies.marker=res.Marker,$scope.policies.listPolicies.hasMore=!0):($scope.policies.listPolicies.marker=null,$scope.policies.listPolicies.hasMore=!1);var _allPolicies=res.Policies.Policy;if($scope.policies.hasPolicies.list)for(var i=0;i<_allPolicies.length;i++)for(var j=0;j<$scope.policies.hasPolicies.list.length;j++)if(_allPolicies[i].PolicyName==$scope.policies.hasPolicies.list[j].PolicyName){_allPolicies[i].exist=!0;break}$scope.policies.listPolicies.list=$scope.policies.listPolicies.list.concat(_allPolicies),$scope.policies.listPolicies.loading=!1})};$scope.selectTabs=function(_type){"info"==_type?($scope.policies.active=!1,$scope.info.active=!0,getRole()):"policy"==_type&&($scope.info.active=!1,$scope.policies.active=!0,$scope.policies.hasPolicies.active=!0,$scope.policies.hasPolicies.loading=!0,$scope.policies.hasPolicies.list=null,$scope.policies.listPolicies.active=!1,$scope.policies.listPolicies.loading=!1,$scope.policies.listPolicies.list=[],getRolePolicies())},$scope.changePolicyType=function(_type){$scope.policies.listPolicies.type=_type,$scope.policies.listPolicies.marker=null,$scope.policies.listPolicies.list=[],$scope.policies.listPolicies.loading=!0,getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type)},$scope.policyModalChange=function(){$scope.policies.listPolicies.active?($scope.policies.listPolicies.active=!1,$scope.policies.hasPolicies.active=!0,$scope.policies.hasPolicies.loading=!0,$scope.policies.hasPolicies.list=null,getRolePolicies()):($scope.policies.hasPolicies.active=!1,$scope.policies.listPolicies.active=!0,$scope.policies.listPolicies.loading=!0,$scope.policies.listPolicies.list=[],getAllPolicies($scope.policies.listPolicies.max,$scope.policies.listPolicies.marker,$scope.policies.listPolicies.type))},$scope.deleteRole=function(){OSSAlert.confirm(gettextCatalog.getString(gettext("您确定要删除该角色吗？"))).result.then(function(){OSSRam.deleteRole(role.RoleName).then(function(res){alert(gettextCatalog.getString(gettext("角色删除成功！"))),$rootScope.$broadcast("UpdateRamListData","role"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.updateRole=function(){OSSRam.updateRole($scope.info.editData.RoleName,$scope.info.editData.AssumeRolePolicyDocument).then(function(res){$scope.info.data=angular.copy($scope.info.editData),role=angular.extend(role,res.Role),$scope.info.edit=!1,alert(gettextCatalog.getString(gettext("角色信息修改成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.removePolicy=function(_policy,_index){OSSRam.detachPolicyFromRole(_policy.PolicyType,_policy.PolicyName,role.RoleName).then(function(res){$scope.policies.hasPolicies.list.splice(_index,1),alert(gettextCatalog.getString(gettext("移除授权成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.setPolicy=function(_policy){OSSRam.attachPolicyToRole(_policy.PolicyType,_policy.PolicyName,role.RoleName).then(function(res){_policy.exist=!0,alert(gettextCatalog.getString(gettext("授权成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.changeEditModel=function(){$scope.info.edit=!$scope.info.edit,$scope.info.edit||($scope.info.editData=angular.copy($scope.info.data))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},ramPolicyManage:function(policy){var option={templateUrl:"views/ram-policy-manage.html",windowClass:"ram-policy-manage-modal",controller:function($scope,$modalInstance){$scope.policy=policy,$scope.newVersion={active:!1,pattern:{doc:/^[\S\s]{1,2048}$/},doc:null,isDefault:!1},$scope.versions={active:!0,list:null,loading:!0,showList:!0,showPolicyDoc:null,showDoc:!1};var getPolicyVersion=function(){OSSRam.getPolicieVersions(policy.PolicyType,policy.PolicyName).then(function(res){$scope.versions.list=res.PolicyVersions.PolicyVersion,$scope.versions.loading=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})};$scope.setPolicyDefault=function(_version,_index){OSSAlert.confirm(gettextCatalog.getString(gettext("您确定要将该版本设置为默认版本吗？"))).result.then(function(){OSSRam.setPolicyDefault(policy.PolicyName,_version.VersionId).then(function(res){angular.forEach($scope.versions.list,function(item){return item.IsDefaultVersion?(item.IsDefaultVersion=!1,!1):void 0}),$scope.versions.list[_index].IsDefaultVersion=!0,alert(gettextCatalog.getString(gettext("设置默认成功！")))})})},$scope.deleteVersion=function(_version,_index){OSSAlert.confirm(gettextCatalog.getString(gettext("您确定要删除该版本吗？"))).result.then(function(){OSSRam.deletePolicyVersion(policy.PolicyName,_version.VersionId).then(function(res){$scope.versions.list.splice(_index,1),alert(gettextCatalog.getString(gettext("删除版本成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.saveNewVersion=function(){OSSRam.createPolicyVersion(policy.PolicyName,$scope.newVersion.doc,$scope.newVersion.isDefault).then(function(res){$scope.newVersion.doc=null,$scope.newVersion.isDefault=!1,$scope.newVersion.active=!1,$scope.versions.active=!0,$scope.versions.showList=!0,$scope.versions.showDoc=!1},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.selectTabs=function(_type){"version"==_type&&($scope.versions.list=null,$scope.versions.active=!0,$scope.versions.loading=!0,getPolicyVersion())},$scope.changeVersions=function(_doc){$scope.versions.showList?($scope.versions.showPolicyDoc=_doc.replace(/\{/g,"\n{\n").replace(/\[/g,"\n[\n").replace(/\}/g,"\n}\n").replace(/\]/g,"\n]\n"),$scope.versions.showList=!1,$scope.versions.showDoc=!0):($scope.versions.showList=!0,$scope.versions.showDoc=!1)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},setRam:function(bucket,objects){var option={templateUrl:"views/ram-setting.html",windowClass:"ram-setting-modal",controller:function($scope,$modalInstance){$scope.user={tabActive:!1,list:[],max:20,marker:null,loading:!1,hasMore:!1},$scope.group={tabActive:!0,list:[],max:20,marker:null,loading:!1,hasMore:!1},$scope.role={tabActive:!1,list:null,loading:!0},$scope.policy={tabActive:!1,list:[],max:20,marker:null,loading:!1,hasMore:!1,type:"Custom"};var getUsers=function(_max,_marker){_max=_max||50,OSSRam.getUsers(_max,_marker).then(function(res){res&&!res.err&&(res.IsTruncated?($scope.user.marker=res.Marker,$scope.user.hasMore=!0):($scope.user.marker=null,$scope.user.hasMore=!1),$scope.user.list=$scope.user.list.concat(res.Users.User)),$scope.user.loading=!1},function(res){$scope.user.loading=!1,res={Error:res.data};var _resultErr=OSSException.getError(res,status),_msg=_resultErr.msg;"Inactive"==_resultErr.code?(OSSModal.setRamServiceModal(),$timeout(function(){$modalInstance.dismiss("cancel")})):$rootScope.$broadcast("showError",_msg)})},getGroups=function(_max,_marker){_max=_max||50,OSSRam.getGroups(_max,_marker).then(function(res){res.IsTruncated?($scope.group.marker=res.Marker,$scope.group.hasMore=!0):($scope.group.marker=null,$scope.group.hasMore=!1),$scope.group.list=$scope.group.list.concat(res.Groups.Group),$scope.group.loading=!1},function(res){$scope.group.loading=!1,res={Error:res.data};var _resultErr=OSSException.getError(res,status),_msg=_resultErr.msg;"Inactive"==_resultErr.code?(OSSModal.setRamServiceModal(),$timeout(function(){$modalInstance.dismiss("cancel")})):$rootScope.$broadcast("showError",_msg)})},getRoles=function(){OSSRam.getRoles().then(function(res){$scope.role.list=res.Roles.Role,$scope.role.loading=!1},function(res){$scope.role.loading=!1,res={Error:res.data};var _resultErr=OSSException.getError(res,status),_msg=_resultErr.msg;"Inactive"==_resultErr.code?(OSSModal.setRamServiceModal(),$timeout(function(){$modalInstance.dismiss("cancel")})):$rootScope.$broadcast("showError",_msg)})},getPolicies=function(_max,_marker,_type){_max=_max||50,OSSRam.getPolicies(_max,_marker,_type).then(function(res){res.IsTruncated?($scope.policy.marker=res.Marker,$scope.policy.hasMore=!0):($scope.policy.marker=null,$scope.policy.hasMore=!1),$scope.policy.list=$scope.policy.list.concat(res.Policies.Policy),$scope.policy.loading=!1},function(res){$scope.policy.loading=!1,
res={Error:res.data};var _resultErr=OSSException.getError(res,status),_msg=_resultErr.msg;"Inactive"==_resultErr.code?(OSSModal.setRamServiceModal(),$timeout(function(){$modalInstance.dismiss("cancel")})):$rootScope.$broadcast("showError",_msg)})};$scope.loadMoreUsers=function(){$scope.user.loading=!0,getUsers($scope.user.max,$scope.user.marker)},$scope.loadMoreGroups=function(){$scope.group.hasMore&&($scope.group.loading=!0,getGroups($scope.group.max,$scope.group.marker))},$scope.loadMorePolicies=function(){$scope.policy.loading=!0,getPolicies($scope.policy.max,$scope.policy.marker,$scope.policy.type)},$scope.changePolicyType=function(_type){$scope.policy.type=_type,$scope.policy.marker=null,$scope.policy.list=[],$scope.policy.loading=!0,getPolicies($scope.policy.max,$scope.policy.marker,$scope.policy.type)},$scope.closeRamService=function(_accountId){OSSRam.deactivateService(_accountId).then(function(res){},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.createUser=function(){OSSModal.createRamItemsModal("user")},$scope.createGroup=function(){OSSModal.createRamItemsModal("group")},$scope.createRole=function(){OSSModal.createRamItemsModal("role")},$scope.createPolicy=function(){OSSModal.createRamItemsModal("policy")},$scope.manageRam=function(_obj,_type,_tab){"user"==_type?OSSModal.ramUserManage(_obj,_tab):"group"==_type?OSSModal.ramGroupManage(_obj,_tab):"role"==_type?OSSModal.ramRoleManage(_obj,_tab):OSSModal.ramPolicyManage(_obj,_tab)},$scope.deletePolicy=function(_policy,_index){OSSAlert.confirm(gettextCatalog.getString(gettext("您确定要删除该授权策略吗？"))).result.then(function(){OSSRam.deletePolicy(_policy.PolicyName).then(function(res){$scope.policy.marker=null,$scope.policy.list=[],$scope.policy.loading=!0,getPolicies($scope.policy.max,$scope.policy.marker,$scope.policy.type),alert(gettextCatalog.getString(gettext("授权策略删除成功！")))},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})})},$scope.selectTabs=function(type){if("user"==type&&($scope.group.tabActive=!1,$scope.policy.tabActive=!1,$scope.role.tabActive=!1,$scope.policy.type="Custom",$scope.user.tabActive=!0,$scope.user.list=[],$scope.user.loading=!0,getUsers($scope.user.max,$scope.user.marker)),"group"==type){if($scope.group.loading)return!1;$scope.user.tabActive=!1,$scope.policy.tabActive=!1,$scope.role.tabActive=!1,$scope.policy.type="Custom",$scope.group.tabActive=!0,$scope.group.list=[],$scope.group.loading=!0,getGroups($scope.group.max,$scope.group.marker)}"role"==type&&($scope.user.tabActive=!1,$scope.policy.tabActive=!1,$scope.policy.type="Custom",$scope.group.tabActive=!1,$scope.role.tabActive=!0,$scope.role.loading=!0,getRoles()),"policy"==type&&($scope.user.tabActive=!1,$scope.group.tabActive=!1,$scope.role.tabActive=!1,$scope.policy.tabActive=!0,$scope.policy.list=[],$scope.policy.loading=!0,getPolicies($scope.policy.max,$scope.policy.marker,$scope.policy.type))},$scope.deletePolicies=function(){},$rootScope.$on("UpdateRamListData",function(event,type,option){"user"==type?($scope.user.list=[],$scope.user.marker=null,$scope.user.loading=!0,$scope.user.hasMore=!1,getUsers($scope.user.max,$scope.user.marker)):"group"==type?($scope.group.list=[],$scope.group.loading=!0,$scope.group.marker=null,$scope.group.hasMore=!1,getGroups($scope.group.max,$scope.group.marker)):"role"==type?($scope.role.list=null,$scope.role.loading=!0,getRoles()):"policy"==type&&($scope.policy.list=[],$scope.policy.loading=!0,$scope.policy.marker=null,$scope.policy.hasMore=!1,getPolicies($scope.policy.max,$scope.policy.marker,$scope.policy.type))}),$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},createRamItemsModal:function(_type){var option={templateUrl:"views/create-ram-items.html",windowClass:"create-ram-items-modal",controller:function($scope,$modalInstance){_type=_type?_type:"user",$scope.userGroups=[],$scope.user={tabActive:"user"==_type,pattern:{name:/^[a-zA-Z0-9\u4e00-\u9fa5\.@\-_]{1,64}$/,display:/^[a-zA-Z0-9\.@\-\u4e00-\u9fa5]{0,12}$/,phone:/^([0-9]+\-){0,1}[0-9]{11}$/,email:/^[a-zA-Z0-9]+\@[a-zA-Z0-9]+\.[a-zA-Z0-9]+$/,desc:/^[\s\S]{0,128}$/},userName:"",displayName:"",phone:"",email:"",groupName:"",desc:"",defaultKey:!1},$scope.group={tabActive:"group"==_type,pattern:{name:/^[a-zA-Z0-9\u4e00-\u9fa5\-]{1,64}$/,desc:/^[\s\S]{0,128}$/},groupName:"",desc:""},$scope.policy={tabActive:"policy"==_type,pattern:{name:/^[a-zA-Z0-9\u4e00-\u9fa5\-]{1,128}$/,doc:/^[\S\s]{1,2048}$/,desc:/^[\S\s]{0,1024}$/},policyName:"",policyDocument:"",desc:""},$scope.role={tabActive:"role"==_type,pattern:{name:/^[a-zA-Z0-9\.@\-_]{1,64}$/,doc:/^[\S\s]{1,2048}$/,desc:/^[\S\s]{0,1024}$/},roleName:"",desc:"",doc:""},$scope.selectTabs=function(type){"user"==type&&($scope.group.tabActive=!1,$scope.policy.tabActive=!1,$scope.role.tabActive=!1,$scope.user.tabActive=!0),"group"==type&&($scope.user.tabActive=!1,$scope.policy.tabActive=!1,$scope.role.tabActive=!1,$scope.group.tabActive=!0),"policy"==type&&($scope.user.tabActive=!1,$scope.group.tabActive=!1,$scope.role.tabActive=!1,$scope.policy.tabActive=!0),"role"==type&&($scope.user.tabActive=!1,$scope.group.tabActive=!1,$scope.policy.tabActive=!1,$scope.role.tabActive=!0)},$scope.save=function(){$scope.user.tabActive?OSSRam.createUser($scope.user.userName,$scope.user.displayName,$scope.user.phone,$scope.user.email,$scope.user.desc).then(function(res){console.log("create user result:",res),$rootScope.$broadcast("UpdateRamListData","user",res.User),alert("用户创建成功！"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}):$scope.group.tabActive?OSSRam.createGroup($scope.group.groupName,$scope.group.desc).then(function(res){console.log("create group result:",res),$rootScope.$broadcast("UpdateRamListData","group"),alert("用户组创建成功！"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}):$scope.role.tabActive?OSSRam.createRole($scope.role.roleName,$scope.role.doc,$scope.role.desc).then(function(res){$rootScope.$broadcast("UpdateRamListData","role"),alert("角色创建成功！"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}):$scope.policy.tabActive&&OSSRam.createPolicy($scope.policy.policyName,$scope.policy.policyDocument,$scope.policy.desc).then(function(res){$rootScope.$broadcast("UpdateRamListData","policy"),alert("授权策略创建成功！"),$modalInstance.dismiss("cancel")},function(res){res={Error:res.data},$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},getObjectURI:function(bucket,object){var option={templateUrl:"views/get_object_uri_modal.html",windowClass:"get_object_uri_modal",controller:function($scope,$modalInstance){$scope.filename=Util.String.baseName(object.path),$scope.expire=3600,$scope.loading=!0,$scope.$watch("loading",function(newVal){newVal?usSpinnerService.spin("get-acl-spinner"):usSpinnerService.stop("get-acl-spinner")}),OSSApi.getBucketAcl(bucket).success(function(res){if($scope.loading=!1,res&&res.AccessControlPolicy&&res.AccessControlPolicy.AccessControlList&&res.AccessControlPolicy.AccessControlList.Grant){var acl=res.AccessControlPolicy.AccessControlList.Grant;"private"!=acl&&($scope.uri=OSSApi.getURI(bucket,object.path))}}).error(function(res,status){$scope.loading=!1,$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}),$scope.getUri=function(expire){$scope.uri=OSSApi.getURI(bucket,object.path,expire)},$scope.copyToClipborad=function(uri){OSS.invoke("setClipboardData",uri),alert(gettextCatalog.getString(gettext("已复制到剪切板")))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},uploadDetail:function(bucket,upload){var option={templateUrl:"views/upload_detail_modal.html",windowClass:"upload_detail_modal",controller:function($scope,$modalInstance){$scope.loading=!1,$scope.parts=[];var size=50,lastMaker="",allLoaded=!1;$scope.firstLoading=!0;var loadPart=function(){$scope.loading||($scope.loading=!0,OSSApi.listUploadPart(bucket,upload,lastMaker,size).success(function(res){$scope.loading=!1,$scope.parts&&$scope.parts.length||($scope.firstLoading=!1);var result=res.ListPartsResult;lastMaker=result.NextPartNumberMarker,allLoaded="false"===result.IsTruncated;var parts=[];result.Part&&(parts=angular.isArray(result.Part)?result.Part:[result.Part]),$scope.parts=$scope.parts.concat(parts)}).error(function(res,status){$scope.loading=!1,$scope.firstLoading=!1,$rootScope.$broadcast("showError",OSSException.getError(res,status).msg)}))};loadPart(),$scope.$watch("firstLoading",function(newVal){newVal?usSpinnerService.spin("load-upload-detail-spinner"):usSpinnerService.stop("load-upload-detail-spinner")}),$scope.loadMore=function(){allLoaded||loadPart()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}};return option=angular.extend({},defaultOption,option),$modal.open(option)},delBucketConfirm:function(bucket){var option={templateUrl:"views/del_bucket_confirm_modal.html",windowClass:"del_bucket_confirm_modal",controller:function($scope,$modalInstance){$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.delConfirm=function(accessKey,accessSecret){return accessKey?accessSecret?void OSSAlert.confirm(gettextCatalog.getString(gettext("确定要删除Bucket “{{bucketName}}“吗？删除后数据将无法恢复"),{bucketName:bucket.Name})).result.then(function(){$modalInstance.close({accessKey:accessKey,accessSecret:accessSecret})}):void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("请输入 Access Key Secret"))):void $rootScope.$broadcast("showError",gettextCatalog.getString(gettext("请输入 Access Key ID")))}}};return option=angular.extend({},defaultOption,option),$modal.open(option)}};return OSSModal}]),angular.module("ossClientUiApp").filter("bitSize",function(){return Util.Number.bitSize}).filter("formatTime",["$filter",function($filter){return function(dateStr){return $filter("date")(Date.parse(dateStr),"yyyy-MM-dd HH:mm:ss")}}]).filter("getPrefixName",function(){return function(prefix,removeLastSlash){removeLastSlash=angular.isUndefined(removeLastSlash)?0:removeLastSlash;var arr=prefix.split("/");return arr[arr.length-2]+(removeLastSlash?"":"/")}}).filter("getRemainTime",["gettext","gettextCatalog",function($filter,gettext,gettextCatalog){return function(speed,filesize,offset){if(!speed)return"--:--:--";var second=(filesize-offset)/speed;if(0>second)return second=0,"--:--:--";var d=parseInt(parseInt(second)/3600/24),h=parseInt(parseInt(second)/3600%24),m=parseInt(parseInt(second)/60%60),s=parseInt(parseInt(second)%60);return d>0?gettextCatalog.getString(gettext("大于{{dateLen}}天"),{dateLen:d}):(10>h&&(h="0"+h),10>m&&(m="0"+m),10>s&&(s="0"+s),"00"==h&&"00"==m&&"00"==s?"00:00:01":h+":"+m+":"+s)}}]).filter("getQueueState",["$filter","gettext","gettextCatalog",function($filter,gettext,gettextCatalog){return function(type,status,speed,filesize,offset,errormsg){var state="";switch(status){case 1:state=$filter("getRemainTime")(speed,filesize,offset);break;case 2:state="",state="upload"==type?gettextCatalog.getString(gettext("等待上传")):gettextCatalog.getString(gettext("等待下载"));break;case 3:state=gettextCatalog.getString(gettext("暂停"));break;case 4:state=gettextCatalog.getString(gettext("完成"));break;case 5:state=gettextCatalog.getString(gettext("错误："))+errormsg}return state}}]).filter("getLocation",["OSSLocation",function(OSSLocation){return OSSLocation.getUrl}]).filter("baseName",function(){return Util.String.baseName}),angular.module("ossClientUiApp").directive("createFile",["$parse","gettext","gettextCatalog",function($parse,gettext,gettextCatalog){return{restrict:"A",link:function(scope,element,attrs){var createFileItem,fn=$parse(attrs.createFileCallback);scope.$watch(attrs.createFile,function(value,oldValue){if(value){element.scrollTop(0);var defaultFilename=gettextCatalog.getString(gettext("新建文件夹")),$input=angular.element('<input name="folder-name" class="form-control" value="'+defaultFilename+'" />'),$okBtn=angular.element('<button class="btn btn-primary">'+gettextCatalog.getString(gettext("确定"))+"</button>"),$cancelBtn=angular.element('<button class="btn btn-default">'+gettextCatalog.getString(gettext("取消"))+"</button>");createFileItem=angular.element('<div class="clearfix file-item new-file-item"><div class="pull-left filename"><i class="file-icon-32 icon-folder"></i></div></div>'),createFileItem.find(".filename").append($input).append($okBtn).append($cancelBtn),createFileItem.prependTo(element),$input[0].select(),$input[0].selectionStart=0,$input[0].selectionEnd=defaultFilename.length,$input.focus(),$okBtn.click(function(){scope.$apply(function(){var filename=$.trim($input.val());createFileItem.find("button").prop("disabled",!0),$.isFunction(fn)&&fn(scope,{filename:filename,callback:function(success){success?scope[attrs.createFile]=!1:createFileItem.find("button").prop("disabled",!1)}})})}),$cancelBtn.click(function(){scope.$apply(function(){scope[attrs.createFile]=!1})}),$input.on("keydown",function(event){13==event.keyCode&&$okBtn.trigger("click")})}else createFileItem&&createFileItem.remove()})}}}]).directive("smartSearch",["$location","$rootScope","$filter","OSSObject","Bucket","OSSLocation","gettextCatalog","gettext",function($location,$rootScope,$filter,OSSObject,Bucket,OSSLocation,gettextCatalog,gettext){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){var bread=element.parent().next();element.on("keydown",function(e){var keycode=e.keyCode;if(13==keycode){var keyword=ngModel.$modelValue;if(!keyword)return $(element).blur(),void hideSearch();var currentObj=OSSObject.getCurrentObject(),currentBucket=Bucket.getCurrentBucket();scope.$apply(function(){var url=OSSLocation.getUrl(currentBucket.Name,currentObj.path,"file",{keyword:keyword,scope:""});$location.url(url)})}});var $breadList=bread.find(".bread-list"),$searchWrapper=element.parent(),hideSearch=scope.hideSearch=function(){$searchWrapper.find(".search-scope").remove(),$searchWrapper.find(".fa-remove").remove(),$breadList.show(),element.next(".fa").show(),scope[attrs.ngModel]="";var search=$location.search();search.keyword&&$location.url($location.path())},showSearch=function(){if(!element.next(".search-scope").size()){var currentObj=OSSObject.getCurrentObject(),currentBucket=Bucket.getCurrentBucket(),searchScopeName=currentObj.path?$filter("getPrefixName")(currentObj.path,1):currentBucket.Name,$removeIcon=$('<a href="javascript:;" class="fa fa-remove fa-lg"></a>'),$searchDomain=$('<a style="color:#fff;text-decoration: underline !important;cursor:pointer">'+searchScopeName+"</a>"),$searchScope=$('<div class="search-scope">'+gettextCatalog.getString(gettext("在"))+'<span id="searchdomain"></span>'+gettextCatalog.getString(gettext("中搜索"))+"</div>");$searchScope.find("span[id='searchdomain']").append($searchDomain),element.next(".fa").hide(),element.after($searchScope).after($removeIcon),element.css({"padding-left":$searchScope.outerWidth(!0)+6}),$breadList.hide(),$searchDomain.on("click",function(){scope.$apply(function(){element.val()&&hideSearch()})}),$removeIcon.on("click",function(){scope.$apply(function(){hideSearch()})}),element.focus()}};element.on("blur",function(){element.val()&&0!=element.val().length||hideSearch()}),element.on("mousedown",function(){showSearch()}),element.next(".fa").on("click",function(){showSearch()}),scope.$on("$locationChangeSuccess",function(){var param=$location.search();param&&param.keyword||hideSearch()})}}}]).directive("smartBread",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){var offsetParent=element.offsetParent(),lastMaxWidth=0;lastMaxWidth=element.css("maxWidth").indexOf("%")>=0?offsetParent.width()*(parseFloat(element.css("maxWidth"))/100):parseInt(element.css("maxWidth"));var getBreadItemWidth=function(breadItem){return breadItem.outerWidth(!0)},getTotalBreadWidth=function(breads){var totalWidth=0;return breads.each(function(){totalWidth+=getBreadItemWidth($(this))}),totalWidth},setBreadUI=function(){var totalWidth=(element.width(),getTotalBreadWidth(element.find(".bread-item")));totalWidth>lastMaxWidth&&totalWidth>lastMaxWidth&&scope.breads.shift()};scope.$watch("breads",function(val){val&&val.length&&$timeout(function(){setBreadUI()})}),$(window).on("resize",function(){lastMaxWidth=offsetParent().width()*maxWidthSet})}}}]).directive("queueItem",["OSSQueueItem",function(OSSQueueItem){return{templateUrl:"views/queue-item.html",restrict:"E",replace:!0,scope:{type:"@",item:"=data",executeCmd:"&"},link:function(scope){scope.handleCmdClick=function(cmd,item){scope.executeCmd({cmd:cmd,item:item})},scope.isError=OSSQueueItem.isError,scope.isInProgress=OSSQueueItem.isInProgress,scope.isDone=OSSQueueItem.isDone,scope.isWaiting=OSSQueueItem.isWaiting,scope.isPasued=OSSQueueItem.isPaused,scope.getProgress=function(item){return scope.isError(item)||scope.isPasued(item)||scope.isWaiting(item)||scope.isInProgress(item)?0==item.filesize?100:item.offset/item.filesize*100:100}}}}]).directive("menu",[function(){return{template:'<button class="btn btn-default" ng-class="menu-{{name}}" ng-disabled="state==0" ng-show="state>-1" ng-transclude></button>',restrict:"E",replace:!0,transclude:!0,scope:{text:"@",name:"@",state:"=",shortcut:"@",execute:"&"},link:function(scope,element,attrs){element.click(function(event){scope.execute({$event:event})})}}}]).directive("onlyNumber",["$timeout",function($timeout){return{restrict:"A",replace:!1,scope:{number:"=onlyNumber",showError:"="},link:function(scope,element,attrs){var _val=0;$timeout(function(){var min=parseInt(attrs.min),max=parseInt(attrs.max);_val=element.val(),element.keydown(function(event){if(event.ctrlKey||event.shiftKey)return!1;if(event.keyCode>47&&event.keyCode<58||event.keyCode>95&&event.keyCode<106||"37 38 39 40 8".indexOf(event.keyCode+"")>=0){var _selectStart=event.target.selectionStart,_selectEnd=event.target.selectionEnd,_eleVal=element.val()+"";return(_eleVal.length<=_selectStart||_selectStart==_selectEnd)&&_eleVal.length==(max+"").length&&"37 38 39 40 8".indexOf(event.keyCode+"")<0?!1:!0}return!1}).blur(function(event){!min&&0!=min||!max&&0!=max||(_val=element.val(),!_val||isNaN(_val)?(scope.number=min,element.val(min),_val=min):min>_val?(scope.number=min,element.val(min),_val=min,scope.showError=!0):_val>max&&(scope.number=max,element.val(max),_val=max,scope.showError=!0))})})}}}]).directive("fileIcon",["OSSObject",function(OSSObject){return{template:'<i class="file-icon-{{size}} {{icon}}"></i>',restrict:"E",replace:!0,scope:{dir:"@",filename:"@",size:"@"},link:function(scope,element,attrs){scope.icon=OSSObject.getIcon(scope.dir,scope.filename)}}}]).directive("showContextMenu",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(event){event.preventDefault(),event.stopPropagation(),$timeout(function(){element.parents("li").trigger("contextmenu",event)})})}}}]).directive("keyboardNav",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var list=[],enableKeyboardNav=!1,shiftLastIndex=0,keyboardNavStep=1;scope.$watch(attrs.keyboardNavList,function(newVal){shiftLastIndex=0,list=newVal}),attrs.$observe("keyboardNav",function(newVal){enableKeyboardNav=1==newVal?!0:!1}),attrs.$observe("keyboardNavStep",function(newVal){keyboardNavStep=parseInt(newVal)});var getSelectedList=$parse(attrs.getSelectedList),getSelectedMinIndex=function(){return _.indexOf(list,_.findWhere(list,{selected:!0}))},getSelectedMaxIndex=function(){var selectedFiles=getSelectedList(scope);return selectedFiles&&selectedFiles.length?_.indexOf(list,selectedFiles[selectedFiles.length-1]):-1},select=$parse(attrs.select),unSelect=$parse(attrs.unSelect),unSelectAll=function(){angular.forEach(getSelectedList(scope),function(item){unSelect(scope,{item:item})})},upLeftPress=function($event){var step=keyboardNavStep,initIndex=list.length+step-1,selectedIndex=getSelectedMinIndex();selectedIndex>=0&&(initIndex=selectedIndex);var newIndex=initIndex-step;if(0>newIndex&&(newIndex=0),$event.shiftKey)for(var i=initIndex>list.length-1?list.length-1:initIndex;i>=newIndex;i--)select(scope,{item:list[i]});else unSelectAll(),select(scope,{item:list[newIndex]}),shiftLastIndex=newIndex},downRightPress=function($event){var step=keyboardNavStep,initIndex=-1*step,selectedIndex=getSelectedMaxIndex();selectedIndex>=0&&(initIndex=selectedIndex);var newIndex=initIndex+step;if(newIndex>list.length-1&&(newIndex=list.length-1),$event.shiftKey)for(var i=initIndex>0?initIndex:0;newIndex>=i;i++)select(scope,{item:list[i]});else unSelectAll(),select(scope,{item:list[newIndex]}),shiftLastIndex=newIndex};$(document).on("keydown.keyboardNav",function($event){enableKeyboardNav&&(["INPUT","TEXTAREA"].indexOf($event.target.nodeName)>=0||(scope.$apply(function(){switch($event.keyCode){case 37:case 38:upLeftPress($event);break;case 39:case 40:downRightPress($event)}}),$event.preventDefault()))}),scope.$on("$destroy",function(){$(document).off("keydown.keyboardNav")})}}}]),angular.module("gettext").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("en_US",{"(最少6位)":"(At least 6 characters)",",你可以按【{{isWindowClient?'Ctrl+C':'⌘ + C'}}】复制以下名称创建：":", you can press【{{isWindowClient?'Ctrl+C':'⌘ + C’}}】to copy the following name and create:","/秒":"/s","1. 只能包含字母，数字，中文，下划线（_）和短横线（-）,小数点（.）":"1. Only letters, numbers, Chinese, “_”(underscore), “-”(dashes), and “.”(decimal point) are allowed","2. 只能以字母、数字或者中文开头":"2. Only start witch  letters, chinese","3. 文件夹的长度限制在1-254之间":"3. The name of folder should be limit between 1-254 characters","4. Object总长度必须在1-1023之间":"4. The total length of object must be between 1-1023 characters.","Access Key ID不存在":"Access Key ID does not exist","Bucket下载":"Download Bucket","Bucket不为空":"Bucket can not be empty","Bucket不存在":"Bucket does not exist","Bucket名称：":"Bucket Name:","Bucket已经存在":"Bucket is already existed","Bucket数目超过限制":"The amount of buckets exceed the limit","Bucket的名称不能为空":"Bucket name can not be empty","Bucket的名称格式错误":"Bucket name format is wrong","Content-Type是必填字段":"Content-Type is required field","HTTP头":"HTTP header","HTTP属性值格式错误":"HTTP attribute value format is wrong.","Logging操作中有无效的目标bucket":"Invaild target buckets exist in the Logging","Multipart Upload ID不存在":"Mulitpart Upload ID does not exist","OSS-当前选择区域：":"OSS-current selected region:","OSS内部发生错误":"OSS internal Error","OSS控制台客户端":"OSS Console Client","Refer设置":"Refer Settings","Refer设置：":"Refer Settings:","Style设置：":"Style Settings:","XML格式非法":"XML format does not permit","上传":"Upload","上传加速是一项增值服务，可以在复杂的网络环境下为您提供稳定高速的上传速度，立即":"Upload accelerate is a ","上传时间":"Upload Tme:","上传设置":"Upload Settings:","上传速度：":"Upload Speed:","上传队列":"Upload Queue:","上海":"Shanghai","下一期功能预告":"new funtion trailer for next version","下载":"Download","下载当前目录":"Download current directory","下载设置":"Download settings","下载速度：":"Download Speed:","下载队列":"Download Queue:","不允许为空":"Cannot be empty","不再提示":"No tips anymore","不同区域的Bucket之间不能复制":"Cannot duplicate buckets between two different region.","不支持的方法":"Unsupported methods","两次输入的密码不一致":"The passwords you type do not match","个文件，请稍候...":"files, please wait….","中搜索":"search","了解详情":"more","互联网":"Internet","以小写字母和数字开头及结尾并且只能包含小写字母、数字及横线的长度限制在3-63之间的字符":"Only start with lowercase letters and numbers and can only contain lowercase letters, numbers and dashes character, length limit of between 3-63","你确定要取消所有上传？":"Are you sure to cancel all uploads?","你确定要取消所有下载？":"Are you sure to cancel all downloads?","你确定要取消这{{fileLen}}个文件的上传？":"Are you sure to cancel uploading {{fileLen}} file?","你确定要取消这{{fileLen}}文件的下载？":"Are you sure to cancel downloading {{fileLen}} file?","你确定要取消这个文件的上传？":"Are you sure to cancel uploading the file?","你确定要取消这个文件的下载？":"Are you sure to cancel downloading the file?","你连续密码输入错误已超过{{allowErrorCount}}次,请重新使用Access Key ID 和 Access Key Secret登录":"You type the wrong password over {{allowErrorCount}} times, please use Access Key ID and Accesss Key Secret to login","保&nbsp;&nbsp;&nbsp;&nbsp;存":"Save","信息":"Information","停止加速":"Stop accelerating","允许为空":"Empty is permitted","全部取消":"Cancel All","全部开始":"Begin All","全部暂停":"Stop All","公共读":"public read","公共读写":"public read and write","关闭":"close","再输一次":"retry","分":"minute","创建时间":"Create time","删除":"Delete","删除Bucket":"Delete Bucket","刷新":"Refresh","前进":"Forward","前进到 {{path}}":"Access to {{path}}","剩余加速时长:":"Remaining accelerating time:","加载中...":"Loading…","加速服务":"accelerate server","北京":"Beijing","匹配正则:":"Match regular rules:","单任务线程数必须是大于{{min}}小于等于{{max}}的整数":"Single task thread must be integer, it’s value lager than {{min}} and less than or equal {{max}}","单任务线程数：":"Single task thread number:","参数格式错误":"Parameter Format is wrong","发起请求的时间和服务器时间超出15分钟":"The time between request and server response is more than 15 minutes","取消":"Cancel","台湾高雄":"Kaohsiung, Taiwan","同时任务数必须是大于{{min}}小于等于{{max}}的整数":"Concurrent tasks must be integer, it’s value lager than {{min}} and less than or equal {{max}}","同时任务数：":"Concurrent tasks number:","名&nbsp;&nbsp;&nbsp;&nbsp;称：":"Name","回调地址:":"recall address:","回调设置":"Recall settings:",'回调设置功能是当前bucket的文件或文件夹上传完成后，若文件或文件夹名称匹配到正则的规则，则去调设置的回调地址，注意回调地址是以"PUT"方法进行请求的！':"The Recall settings function is that: if the file or the folder name matches the regular rules, you need to set the recall path address, when the current bucket files or folders upload completed. Notification: Recall address uses “PUT” to send request.","图片服务器设置":"Picture server Settings","图片设置":"Picture Settings","在":"In","地址：":"Address:","复制":"Copy","复制成功":"Copy success","复制机器码":"Copy machine code","大于{{dateLen}}天":"larger than {{dateLen}} days","大小":"size","存储区域：":"Storage","安全密码":"Security Password","完成":"Complete","实体过大":"object is too large","实体过小":"object is too small","密码长度最少6位":"Password at least 6 characters","导入授权":"Authorization","导出成功":"Export success","导出授权":"Export Authorization","小技巧：使用Shift和Ctrl键(Mac下Command键)可以实现多选操作。":"Tips: You can implement multi-select operation by pressing “Shift” and “Ctrl”(“Command” in mac),","属性内容":"Attribute Content","属性名称":"Attribute Name","属性名称只能包含英文、数子、横线、下划线、斜杠、点、英文分号、英文逗号、英文冒号、英文双引号和等号":"Attribute Name can only includes: letters, numbers, dashes, underscores, slash, period, semicolon, comma, colon, double quotation marks and equal.","属性名称只能包含英文、数子或横线":"Attribute Name can only includes: letters, numbers, dashes","属性名称格式错误":"Attribute Name format is wrong","属性管理":"Attribute Management","已复制到剪切板":"Have already copied to the clipboard","已存在相同名称的Bucket":"The same Bucket name is already existed","已存在相同名称的文件夹":"The same file name is already existed","开启":"Start","开始":"Begin","开始加速":"Begin accelerating","当前加载队列已超出客户端下载能力，请使用OSS提供的API下载。":"Your current loading queue is more than your client download capabilities, please using OSS API to download the queue.","当前状态:":"Current state","成功":"Success","所属地区：":"Region:","打开日志文件夹":"Open log folder","拒绝访问":"Access denied","按钮，开始创建你的Bucket":"Button, start creating your bucket","政务外网":"Government public internet","数据加载失败，当前您电脑的时间比服务器时间快{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。":"Data loading failed, because your computer system date is faster than server about {{d}}days {{h}}hours {{m}}minutes {{s}}seconds, please modify your computer system date.","数据加载失败，当前您电脑的时间比服务器时间慢{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。":"Data loading failed, because your computer system date is slower than server about {{d}}days {{h}}hours {{m}}minutes {{s}}seconds, please modify your computer system date.","数据请求失败，如果你自定义了服务器地址，请检查是否正常。":"Data request failed, if you use customized server ip address, please check whether it can work normally or not.","文件Part不存在":"File Part does not exist","文件Part过时":"File Part is out of time","文件{{fileName}}设置http头的错误信息:":"The {{fileName}} file sets http header error information:","文件不存在":"File does not exist","文件名":"File name","文件名：":"File name:","文件夹名称格式错误":"Folder name format is wrong","文件组过大":"File group is too large","新加坡":"Sinapore","新建":"create","新建Bucket":"create a bucket","新建文件夹":"create a folder","无效的Bucket名字":"Invaild bucket name","无效的Object名字":"Invaild object name","无效的Part":"Invaild Part","无效的part顺序":"Invaild Part order","无效的摘要":"Invaild abstract","无法处理的方法":"Unknown processing methods","无法访问该Bucket":"Bucket access denied","时":"hour","是否只允许通过 Style 来访问图像处理接口":"whether it can access to picture processing interface only through Style or not.","暂停":"pause","更新时间：":"Upload Tme：","最新资讯":"Latest News","本机是ECS云主机":"The host computer is ECS","机器码":"Machine code","杭州":"Hangzhou ","欢迎使用OSS客户端":"Welcome to use OSS client","正在加载下载列表，当前已加载了":"Loading the download list, ","没有上传":"No upload","没有下载":"No downloads","没有找到最新消息!":"Not find the message!","没有数据":"No data","没有文件":"No files","没有日志":"No logs","没有碎片":"No fragments","注：多个refer以换行分隔，支持通配符(*,?)":"Note: Separate refer by using line break, and it supports wildcard characters (*,?)","注：如果下载队列已加载完成,则删除已加载列表选项无效":"Note: if the downloads queue is already completed,  the function of deleting loaded list is invalid.","深圳":"Shenzhen","添加输入框":"Add input field","清空已完成":"Clearing completed","清除安全密码":"Clear password","点击左侧栏的":"Click left sidebar","版本号：":"Version：","状&nbsp;&nbsp;&nbsp;&nbsp;态：":"Status:","登&nbsp;&nbsp;&nbsp;&nbsp;录":"Login","的属性":"attribute","确定":"confirm","确定要下载整个Bucket吗？":"Are you confirm to download the whole bucket?","确定要删除Bucket “{{bucketName}}“吗？删除后数据将无法恢复":"Are you confirm to delete Bucket “{{bucketName}}”?  Deleted data cannot be recovered.","确定要删除选择的碎片？":"Are you confirm to delete selected fragments?","确定要删除？":"Are you confirm to delete?","确定要清除安全密码？":"Are your confirm to clear the security password?","确认":"Confirm","确认设置":"Confirm settings","碎片管理":"Fragments management","碎片详细":"Fragment details:","禁止访问原图：":"original drawing access is denied","私有":"private","秒":"second","移除":"remove","空Refer：":"The empty refer:","等待上传":"Waiting for uploading","等待下载":"Waiting for downloading","签名错误":"Signature error","粘贴":"paste","终止操作":"Terminate operation","编号":"Numbers","缺少内容长度":"Missing content length","缺少参数":"Missing parameters","网络请求错误":"Network requests error","美国":"American","自定义属性":"Custom attributes","自定义服务器地址":"Custom server address","自定义服务地址设置后只有设置了登录密码才能一直保存，否则下次登录时将自动清空。":"Custom server address settings can be saved forever, only if you set the login password, otherwise the custom server address settings will be cleared automatically when you login next time.","获取":"Get","获取Object的地址":"Get Object address","获取地址":"Get address","警告":"Warning","设置":"Setting","设置HTTP头":"HTTP header","设置HTTP头属性":"Set HTTP header attribute","设置一个安全密码，下次打开客户端时只需要输入这个安全密码就能使用客户端":"Set a security password, and you can use the client by entering this security password.","设置成功":"Setting success","设置的值必须是正整数":"Setting values must be positive integer","详细":"Details","语言设置":"Language Settings","语言设置：":"Language Settings:","请求超时":"Request time out","请确认":"Please confirm","请确认安全密码":"Please confirm security password","请输入 Access Key ID":"Please enter Access Key ID","请输入 Access Key Secret":"Please enter Access Key ID","请输入Access Key 和Access Secret确认":"Confirm Access Key and Access Secret.","请输入加速卡号":"Please enter accelerating card code","请输入大于0的整数":"Please enter a larger than 0 integer ","请输入安全密码":"Please enter Security Password","请输入服务器地址":"Please enter Server Address","请输入要授权的机器码":"Please enter the authorized machine codes","请输入要设置的refer":"Please enter the setting refer","请输入链接的有效期：":"Please enter the link vaild date:","请选择区域":"Please select the region:","读写权限：":"permission:","购买":"buy","跳过设置":"Skip settings",
"输入您设置的安全密码即可快速登录管理器":"Please enter your security password, so that you can quickly login to your management server.","返&nbsp;&nbsp;&nbsp;&nbsp;回":"Return","返回":"Return","返回到 {{path}}":"Return to {{path}}","还未创建Bucket":"No Bucket create","进&nbsp;&nbsp;&nbsp;&nbsp;入":"Enter","选择区域":"select a region","选择文件并导入":"select & import","选择语言":"Select a language:","重连次数:":"Reconnection times:","错误":"Error","错误日志":"Error log","错误：":"Error:","限制数字范围：":"limit the range of number","青岛":"Qingdao","预处理错误":"Preprocessing is wrong","香港":"Hongkong","（可能是你登录时选择的区域与当前的网络环境不匹配，请退出客户端后重新选择）":"(It maybe caused by your selected region does not match your current network environment, please quit the client and reconnection.)"}),gettextCatalog.setStrings("zh_CN",{"(最少6位)":"(最少6位)",",你可以按【{{isWindowClient?'Ctrl+C':'⌘ + C'}}】复制以下名称创建：":",你可以按【{{isWindowClient?'Ctrl+C':'⌘ + C'}}】复制以下名称创建：","/秒":"/秒","1. 只能包含字母，数字，中文，下划线（_）和短横线（-）,小数点（.）":"1. 只能包含字母，数字，中文，下划线（_）和短横线（-）,小数点（.）","2. 只能以字母、数字或者中文开头":"2. 只能以字母、数字或者中文开头","3. 文件夹的长度限制在1-254之间":"3. 文件夹的长度限制在1-254之间","4. Object总长度必须在1-1023之间":"4. Object总长度必须在1-1023之间","Access Key ID不存在":"Access Key ID不存在","Bucket下载":"Bucket下载","Bucket不为空":"Bucket不为空","Bucket不存在":"Bucket不存在","Bucket名称：":"Bucket名称：","Bucket已经存在":"Bucket已经存在","Bucket数目超过限制":"Bucket数目超过限制","Bucket的名称不能为空":"Bucket的名称不能为空","Bucket的名称格式错误":"Bucket的名称格式错误","Content-Type是必填字段":"Content-Type是必填字段","HTTP属性值格式错误":"HTTP属性值格式错误","Logging操作中有无效的目标bucket":"Logging操作中有无效的目标bucket","Multipart Upload ID不存在":"Multipart Upload ID不存在","OSS-当前选择区域：":"OSS-当前选择区域：","OSS内部发生错误":"OSS内部发生错误","Refer设置":"Refer设置","Refer设置：":"Refer设置：","Style设置：":"Style设置：","XML格式非法":"XML格式非法","·只能包含小写字母、数字和横线":"·只能包含小写字母、数字和横线","·必须以小写字母和数字开头和结尾":"·必须以小写字母和数字开头和结尾","·长度限制在3-63之间":"·长度限制在3-63之间","上传":"上传","上传加速是一项增值服务，可以在复杂的网络环境下为您提供稳定高速的上传速度，立即":"上传加速是一项增值服务，可以在复杂的网络环境下为您提供稳定高速的上传速度，立即","上传时间":"上传时间","上传设置":"上传设置","上传速度：":"上传速度：","上传队列":"上传队列","上海":"上海","下载":"下载","下载当前目录":"下载当前目录","下载设置":"下载设置","下载速度：":"下载速度：","下载队列":"下载队列","不允许为空":"不允许为空","不再提示":"不再提示","不同区域的Bucket之间不能复制":"不同区域的Bucket之间不能复制","不支持的方法":"不支持的方法","两次输入的密码不一致":"两次输入的密码不一致","个文件，请稍候...":"个文件，请稍候...","中搜索":"中搜索","互联网":"互联网","你确定要取消所有上传？":"你确定要取消所有上传？","你确定要取消所有下载？":"你确定要取消所有下载？","你确定要取消这{{fileLen}}个文件的上传？":"你确定要取消这{{fileLen}}个文件的上传？","你确定要取消这{{fileLen}}文件的下载？":"你确定要取消这{{fileLen}}文件的下载？","你确定要取消这个文件的上传？":"你确定要取消这个文件的上传？","你确定要取消这个文件的下载？":"你确定要取消这个文件的下载？","你连续密码输入错误已超过{{allowErrorCount}}次,请重新使用Access Key ID 和 Access Key Secret登录":"你连续密码输入错误已超过{{allowErrorCount}}次,请重新使用Access Key ID 和 Access Key Secret登录","保&nbsp;&nbsp;&nbsp;&nbsp;存":"保&nbsp;&nbsp;&nbsp;&nbsp;存","信息":"信息","停止加速":"停止加速","允许为空":"允许为空","全部取消":"全部取消","全部开始":"全部开始","全部暂停":"全部暂停","公共读":"公共读","公共读写":"公共读写","关闭":"关闭","再输一次":"再输一次","分":"分","创建时间":"创建时间","删除":"删除","删除Bucket":"删除Bucket","刷新":"刷新","前进":"前进","前进到 {{path}}":"前进到 {{path}}","剩余加速时长:":"剩余加速时长:","加载中...":"加载中...","加速服务":"加速服务","北京":"北京","匹配正则:":"匹配正则:","单任务线程数必须是大于{{min}}小于等于{{max}}的整数":"单任务线程数必须是大于{{min}}小于等于{{max}}的整数","单任务线程数：":"单任务线程数：","参数格式错误":"参数格式错误","发起请求的时间和服务器时间超出15分钟":"发起请求的时间和服务器时间超出15分钟","取消":"取消","同时任务数必须是大于{{min}}小于等于{{max}}的整数":"同时任务数必须是大于{{min}}小于等于{{max}}的整数","同时任务数：":"同时任务数：","名&nbsp;&nbsp;&nbsp;&nbsp;称：":"名&nbsp;&nbsp;&nbsp;&nbsp;称：","回调地址:":"回调地址:","回调设置":"回调设置",'回调设置功能是当前bucket的文件或文件夹上传完成后，若文件或文件夹名称匹配到正则的规则，则去调设置的回调地址，注意回调地址是以"PUT"方法进行请求的！':'回调设置功能是当前bucket的文件或文件夹上传完成后，若文件或文件夹名称匹配到正则的规则，则去调设置的回调地址，注意回调地址是以"PUT"方法进行请求的！',"图片服务器设置":"图片服务器设置","图片设置":"图片设置","在":"在","地址：":"地址：","复制":"复制","复制成功":"复制成功","复制机器码":"复制机器码","大于{{dateLen}}天":"大于{{dateLen}}天","大小":"大小","存储区域：":"存储区域：","安全密码":"安全密码","完成":"完成","实体过大":"实体过大","实体过小":"实体过小","密码长度最少6位":"密码长度最少6位","导入授权":"导入授权","导出成功":"导出成功","导出授权":"导出授权","小技巧：使用Shift和Ctrl键(Mac下Command键)可以实现多选操作。":"小技巧：使用Shift和Ctrl键(Mac下Command键)可以实现多选操作。","属性内容":"属性内容","属性名称":"属性名称","属性名称只能包含英文、数子、横线、下划线、斜杠、点、英文分号、英文逗号、英文冒号、英文双引号和等号":"属性名称只能包含英文、数子、横线、下划线、斜杠、点、英文分号、英文逗号、英文冒号、英文双引号和等号","属性名称只能包含英文、数子或横线":"属性名称只能包含英文、数子或横线","属性名称格式错误":"属性名称格式错误","属性管理":"属性管理","已复制到剪切板":"已复制到剪切板","已存在相同名称的Bucket":"已存在相同名称的Bucket","已存在相同名称的文件夹":"已存在相同名称的文件夹","开启":"开启","开始":"开始","开始加速":"开始加速","当前加载队列已超出客户端下载能力，请使用OSS提供的API下载。":"当前加载队列已超出客户端下载能力，请使用OSS提供的API下载。","当前状态:":"当前状态:","成功":"成功","所属地区：":"所属地区：","打开日志文件夹":"打开日志文件夹","拒绝访问":"拒绝访问","按钮，开始创建你的Bucket":"按钮，开始创建你的Bucket","政务外网":"政务外网","数据加载失败，当前您电脑的时间比服务器时间快{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。":"数据加载失败，当前您电脑的时间比服务器时间快{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。","数据加载失败，当前您电脑的时间比服务器时间慢{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。":"数据加载失败，当前您电脑的时间比服务器时间慢{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。","数据请求失败，如果你自定义了服务器地址，请检查是否正常。":"数据请求失败，如果你自定义了服务器地址，请检查是否正常。","文件Part不存在":"文件Part不存在","文件Part过时":"文件Part过时","文件{{fileName}}设置http头的错误信息:":"文件{{fileName}}设置http头的错误信息:","文件不存在":"文件不存在","文件名":"文件名","文件名：":"文件名：","文件夹名称格式错误":"文件夹名称格式错误","文件组过大":"文件组过大","新加坡":"新加坡","新建":"新建","新建Bucket":"新建Bucket","新建文件夹":"新建文件夹","无效的Bucket名字":"无效的Bucket名字","无效的Object名字":"无效的Object名字","无效的Part":"无效的Part","无效的part顺序":"无效的part顺序","无效的摘要":"无效的摘要","无法处理的方法":"无法处理的方法","无法访问该Bucket":"无法访问该Bucket","时":"时","是否只允许通过 Style 来访问图像处理接口":"是否只允许通过 Style 来访问图像处理接口","暂停":"暂停","本机是ECS云主机":"本机是ECS云主机","机器码":"机器码","杭州":"杭州","欢迎使用OSS客户端":"欢迎使用OSS客户端","正在加载下载列表，当前已加载了":"正在加载下载列表，当前已加载了","没有上传":"没有上传","没有下载":"没有下载","没有数据":"没有数据","没有文件":"没有文件","没有日志":"没有日志","没有碎片":"没有碎片","注：多个refer以换行分隔，支持通配符(*,?)":"注：多个refer以换行分隔，支持通配符(*,?)","注：如果下载队列已加载完成,则删除已加载列表选项无效":"注：如果下载队列已加载完成,则删除已加载列表选项无效","深圳":"深圳","添加输入框":"添加输入框","清空已完成":"清空已完成","清除安全密码":"清除安全密码","点击左侧栏的":"点击左侧栏的","状&nbsp;&nbsp;&nbsp;&nbsp;态：":"状&nbsp;&nbsp;&nbsp;&nbsp;态：","登&nbsp;&nbsp;&nbsp;&nbsp;录":"登&nbsp;&nbsp;&nbsp;&nbsp;录","的属性":"的属性","确定":"确定","确定要下载整个Bucket吗？":"确定要下载整个Bucket吗？","确定要删除Bucket “{{bucketName}}“吗？删除后数据将无法恢复":"确定要删除Bucket “{{bucketName}}“吗？删除后数据将无法恢复","确定要删除选择的碎片？":"确定要删除选择的碎片？","确定要删除？":"确定要删除？","确定要清除安全密码？":"确定要清除安全密码？","确认":"确认","确认设置":"确认设置","碎片管理":"碎片管理","碎片详细":"碎片详细","禁止访问原图：":"禁止访问原图：","私有":"私有","秒":"秒","移除":"移除","空Refer：":"空Refer：","等待上传":"等待上传","等待下载":"等待下载","签名错误":"签名错误","粘贴":"粘贴","终止操作":"终止操作","编号":"编号","缺少内容长度":"缺少内容长度","缺少参数":"缺少参数","网络请求错误":"网络请求错误","美国":"美国","自定义属性":"自定义属性","自定义服务器地址":"自定义服务器地址","自定义服务地址设置后只有设置了登录密码才能一直保存，否则下次登录时将自动清空。":"自定义服务地址设置后只有设置了登录密码才能一直保存，否则下次登录时将自动清空。","获取":"获取","获取Object的地址":"获取Object的地址","获取地址":"获取地址","警告":"警告","设置":"设置","设置HTTP头":"设置HTTP头","设置HTTP头属性":"设置HTTP头属性","设置一个安全密码，下次打开客户端时只需要输入这个安全密码就能使用客户端":"设置一个安全密码，下次打开客户端时只需要输入这个安全密码就能使用客户端","设置成功":"设置成功","设置的值必须是正整数":"设置的值必须是正整数","详细":"详细","语言设置":"语言设置","语言设置：":"语言设置：","请求超时":"请求超时","请确认":"请确认","请确认安全密码":"请确认安全密码","请输入 Access Key ID":"请输入 Access Key ID","请输入 Access Key Secret":"请输入 Access Key Secret","请输入Access Key 和Access Secret确认":"请输入Access Key 和Access Secret确认","请输入加速卡号":"请输入加速卡号","请输入大于0的整数":"请输入大于0的整数","请输入安全密码":"请输入安全密码","请输入服务器地址":"请输入服务器地址","请输入要授权的机器码":"请输入要授权的机器码","请输入要设置的refer":"请输入要设置的refer","请输入链接的有效期：":"请输入链接的有效期：","请选择区域":"请选择区域","读写权限：":"读写权限：","购买":"购买","跳过设置":"跳过设置","输入您设置的安全密码即可快速登录管理器":"输入您设置的安全密码即可快速登录管理器","返&nbsp;&nbsp;&nbsp;&nbsp;回":"返&nbsp;&nbsp;&nbsp;&nbsp;回","返回":"返回","返回到 {{path}}":"返回到 {{path}}","还未创建Bucket":"还未创建Bucket","进&nbsp;&nbsp;&nbsp;&nbsp;入":"进&nbsp;&nbsp;&nbsp;&nbsp;入","选择区域":"选择区域","选择文件并导入":"选择文件并导入","选择语言":"选择语言","重连次数:":"重连次数:","错误":"错误","错误日志":"错误日志","错误：":"错误：","限制数字范围：":"限制数字范围：","青岛":"青岛","预处理错误":"预处理错误","香港":"香港","（可能是你登录时选择的区域与当前的网络环境不匹配，请退出客户端后重新选择）":"（可能是你登录时选择的区域与当前的网络环境不匹配，请退出客户端后重新选择）"}),gettextCatalog.setStrings("zh_TW",{"(最少6位)":"(最少6位)",",你可以按【{{isWindowClient?'Ctrl+C':'⌘ + C'}}】复制以下名称创建：":",你可以按【{{isWindowClient?'Ctrl+C':'⌘ + C'}}】複製以下名稱建立：","/秒":"/秒","1. 只能包含字母，数字，中文，下划线（_）和短横线（-）,小数点（.）":"1. 只能包含字母，數字，中文，底線( _ ) 和破折號( - ) ,小數點 ( . )","2. 只能以字母、数字或者中文开头":"2. 只能以字母、數字或者中文開頭","3. 文件夹的长度限制在1-254之间":"3. 文件夾的長度限制在1-254之間","4. Object总长度必须在1-1023之间":"4. Object總長度必須在1-1023之間","Access Key ID不存在":"Access Key ID不存在",AccessKeyId:"AccessKeyId","AccessKey管理":"AccessKey Manage",Arn:"Arn","Arn：":"Arn:","Bucket下载":"Bucket下載","Bucket不为空":"Bucket不為空","Bucket不存在":"Bucket不存在","Bucket名称：":"Bucket名稱：","Bucket已经存在":"Bucket已經存在","Bucket数目超过限制":"Bucket數目超過限制","Bucket的名称不能为空":"Bucket的名稱不能為空","Bucket的名称格式错误":"Bucket的名稱格式錯誤","Content-Type是必填字段":"Content-Type是必填欄位","HTTP头":"HTTP頭","HTTP属性值格式错误":"HTTP屬性值格式錯誤","Logging操作中有无效的目标bucket":"Logging操作中有無效的目的bucket","Multipart Upload ID不存在":"Multipart Upload ID不存在","OSS-当前选择区域：":"OSS-目前選擇區域：","OSS内部发生错误":"OSS內部發生錯誤","OSS控制台客户端":"OSS控制台客戶端","RAM授权":"RAM授權","RAM服务开启":"RAM服務","RAM设置":"RAM設置","Refer设置":"Refer設置","Refer设置：":"Refer設置：","Style设置：":"Style設置：","XML格式非法":"XML格式非法","上传":"上傳","上传加速是一项增值服务，可以在复杂的网络环境下为您提供稳定高速的上传速度，立即":"上傳加速是一項加值服務，可以在複雜的網路環境下為您提供穩定高速的上傳速度，立即","上传时间":"上傳時間","上传设置":"上傳設置","上传速度：":"上傳速度：","上传队列":"上傳佇列","上海":"上海","下一期功能预告":"下一期功能預告","下载":"下載","下载当前目录":"下載目前目錄","下载设置":"下載設置","下载速度：":"下載速度：","下载队列":"下載佇列","不允许为空":"不允許為空","不再提示":"不再提示","不同区域的Bucket之间不能复制":"不同區域的Bucket之間不能複製","不支持的方法":"不支持的方法","两次输入的密码不一致":"兩次輸入的密碼不一致","个文件，请稍候...":"個文件，請稍候...","中搜索":"中搜索","了解详情":"了解詳情","互联网":"網際網路","以小写字母和数字开头及结尾并且只能包含小写字母、数字及横线的长度限制在3-63之间的字符":"以小寫字母和數字開頭和結尾並且只能包含小寫字母、數字及橫線，字符長度在3﹣63之間","你确定要取消所有上传？":"你確定要取消所有上傳？","你确定要取消所有下载？":"你確定要取消所有下載？","你确定要取消这{{fileLen}}个文件的上传？":"你確定要取消這{{fileLen}}個文件的上傳？","你确定要取消这{{fileLen}}文件的下载？":"你確定要取消這{{fileLen}}文件的下載？","你确定要取消这个文件的上传？":"你確定要取消這個文件的上傳？","你确定要取消这个文件的下载？":"你確定要取消這個文件的下載？","你连续密码输入错误已超过{{allowErrorCount}}次,请重新使用Access Key ID 和 Access Key Secret登录":"你連續密碼輸入錯誤已超過{{allowErrorCount}}次，請重新使用Access Key ID 和 Access Key Secret登錄","保&nbsp;&nbsp;&nbsp;&nbsp;存":"保&nbsp;&nbsp;&nbsp;&nbsp;存","保存":"保存","信息":"訊息","停止加速":"停止加速","允许为空":"允許為空","全部取消":"全部取消","全部开始":"全部開始","全部暂停":"全部暫停","全部类型":"全部類型","公共读":"公開讀","公共读写":"公開讀寫","关闭":"關閉","关闭RAM服务":"關閉RAM服務","再输一次":"再輸入一次","分":"分","创建AccessKey":"创建AccessKey","创建AccessKey成功！":"創建AccessKey成功！","创建授权策略":"創建授權策略","创建时间":"建立時間","创建版本":"創建版本","创建用户":"創建用戶","创建用户组":"創建用戶組","创建角色":"創建角色","删除":"刪除","删除AccessKey成功！":"刪除AccessKey成功！","删除Bucket":"刪除Bucket","删除版本成功！":"刪除版本成功！","删除用户":"刪除用戶","删除角色":"刪除角色","删除该组":"刪除該組","刷新":"刷新","前进":"前進","前进到 {{path}}":"前進到 {{path}}","剩余加速时长:":"剩餘加速時間:","功能开关：":"功能開關：","加入":"加入","加入时间":"加入時間","加入用户":"加入用戶","加入用户组":"加入用戶組","加入用户组成功！":"加入用戶組成功！","加入的组管理":"加入的組管理","加载中...":"載入中...","加速服务":"加速服務","北京":"北京","匹配正则:":"符合正規表示式:","单任务线程数必须是大于{{min}}小于等于{{max}}的整数":"單行程執行緒數必須大於{{min}}小於等於{{max}}的整數","单任务线程数：":"單行程執行緒數：","参数格式错误":"參數格式錯誤","发起请求的时间和服务器时间超出15分钟":"發起請求的時間和服務器時間超出15分鐘","取消":"取消",'可包含大小写字母、数字、"."、"@"、"-"或中文且长度在0~12之间的字符':"可包含大小寫字母、數字、”.”、”@“、”-“或中文且長度在0~12之間的字符",'可包含大小写字母、数字、"."、"@"或中文且长度在1~64之间的字符':"可包含大小寫字母、數字、”.”、”@“或中文且長度在1~64之間的字符","可包含大小写字母、数字、'@'、-'且长度在1~128之间的字符":"可包含大小寫字母、數字、”@“且長度在1~128之間的字符","台湾高雄":"台灣高雄","同时任务数必须是大于{{min}}小于等于{{max}}的整数":"並行行程數必須是大於{{min}}小於等於{{max}}的整數","同时任务数：":"並行行程數：","名&nbsp;&nbsp;&nbsp;&nbsp;称：":"名&nbsp;&nbsp;&nbsp;&nbsp;稱：","名称：":"名稱：","启用":"啟用","启用AccessKey成功！":"啟用AccessKey成功！","回调地址:":"重導位址：","回调设置":"重導設置",'回调设置功能是当前bucket的文件或文件夹上传完成后，若文件或文件夹名称匹配到正则的规则，则去调设置的回调地址，注意回调地址是以"PUT"方法进行请求的！':'重導設置功能是目前bucket的文件或文件夾上傳完成後，若文件或文件夾名稱符合正則表示式，則會調用設置的重導位址，注意重導位址是以"PUT"方式進行請求的！',"图片服务器设置":"圖片服務器設置","图片设置":"圖片設置","在":"在","地址：":"地址：","复制":"複製","复制成功":"複製成功","复制机器码":"複製機器碼","大于{{dateLen}}天":"大於{{dateLen}}天","大小":"大小","存储区域：":"儲存區域：","安全密码":"安全密碼","完成":"完成","实体过大":"實體過大","实体过小":"實體過小","密码长度最少6位":"密碼長度最少6位","导入授权":"匯入授權","导出成功":"匯出成功","导出授权":"匯出授權","小技巧：使用Shift和Ctrl键(Mac下Command键)可以实现多选操作。":"小技巧：使用Shift和Ctrl鍵(Mac下Command鍵)可以作多重選取操作。","属性内容":"屬性內容","属性名称":"屬性名稱","属性名称只能包含英文、数子、横线、下划线、斜杠、点、英文分号、英文逗号、英文冒号、英文双引号和等号":'屬性名稱只能包含英文、數字、橫線(-)、底線(_)、斜線(/)、點(.)、分號(;)、逗號(,)、冒號(:)、雙引號(")和等號(=)',"属性名称只能包含英文、数子或横线":"屬性名稱只能包含英文、數字或橫線(-)","属性名称格式错误":"屬性名稱格式錯誤","属性管理":"屬性管理","已复制到剪切板":"已複製到剪貼簿","已存在相同名称的Bucket":"已存在相同名稱的Bucket","已存在相同名称的文件夹":"已存在相同名稱的文件夾","开启":"開啟","开始":"開始","开始加速":"開始加速","引用次数":"引用次數","当前加载队列已超出客户端下载能力，请使用OSS提供的API下载。":"目前載入佇列已超出用戶端下載能力，請使用OSS提供的API下載。","当前状态:":"目前狀態:","当前用户还有创建的AK":"當前用戶還有創建的AK","当前语言：":"當前語言：","必填，可包含大小写字母、数字、'-'或中文且长度在1~128之间的字符":"必填，可包含大小寫字母、數字、’-’或中文且長度在1~128之間的字符","必填，可包含大小写字母、数字、'-'或中文且长度在1~64之间的字符":"必填，可包含大小寫字母、數字、’-’或中文且長度在1~64之間的字符","必填，长度在1~2048之间的任意字符":"必填，長度在1~2048之間的字符","您好，您还没有开启RAM服务，请进入阿里云控制台开启该服务。":"您好，您還沒有開啟RAM服務，請進入阿里雲控制台開啟該服務。","您确定要删除该授权策略吗？":"您確定要刪除該授權策略嗎？","您确定要删除该版本吗？":"您確定要刪除該版本嗎？","您确定要删除该角色吗？":"您確定要刪除該角色嗎？","您确定要将该版本设置为默认版本吗？":"您確定要講該版本設置為默認版本嗎?","成功":"成功","所属地区：":"所屬地區：","手机号码格式错误":"手機號碼格式錯誤","手机号：":"手機號","打开日志文件夹":"打開日誌文件夾","拒绝访问":"拒絕訪問","按钮，开始创建你的Bucket":"按鈕，開始建立你的Bucket","授权":"授權","授权成功！":"授權成功！","授权时间":"授權時間","授权策略":"授權策略","授权策略下还有其他版本":"授權策略下還有其他版本","授权策略下还有用户":"授權策略下還有用戶","授权策略下还有用户组":"授權策略下還有用戶組","授权策略不存在":"授權策略不存在","授权策略删除成功！":"授權策略刪除成功！","授权策略已存在":"授權策略已存在","授权策略已达最大限制":"授權策略已達最大限制","描述":"描述","描述：":"描述：","操作":"操作","政务外网":"政務外網","数据加载失败，当前您电脑的时间比服务器时间快{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。":"資料載入失敗，目前您電腦的時間比服務器時間快{{d}}天{{h}}小時{{m}}分鐘{{s}}秒，請調整您的電腦時間後重試。","数据加载失败，当前您电脑的时间比服务器时间慢{{d}}天{{h}}小时{{m}}分钟{{s}}秒,请调整您的电脑时间后重试。":"資料載入失敗，目前您電腦的時間比服務器時間慢{{d}}天{{h}}小時{{m}}分鐘{{s}}秒，請調整您的電腦時間後重試。","数据请求失败，如果你自定义了服务器地址，请检查是否正常。":"資料請求失敗，如果你自定義了服務器位址，請檢查是否正常。","文件Part不存在":"文件Part不存在","文件Part过时":"文件Part逾時","文件{{fileName}}设置http头的错误信息:":"文件{{fileName}}設置http頭的錯誤訊息:","文件不存在":"文件不存在","文件名":"文件名","文件名：":"文件名：","文件夹名称格式错误":"文件夾名稱格式錯誤","文件组过大":"文件組過大","新加坡":"新加坡","新建":"新建","新建Bucket":"新建Bucket","新建文件夹":"新建文件夾","无效的Bucket名字":"無效的Bucket名字","无效的Object名字":"無效的Object名字","无效的Part":"無效的Part","无效的part顺序":"無效的part順序","无效的摘要":"無效的摘要","无法处理的方法":"無法處理的方法","无法访问该Bucket":"無法訪問該Bucket","时":"時","是否只允许通过 Style 来访问图像处理接口":"是否只允許通過 Style 來訪問圖片處理介面","是否默认":"是否默認","显示名":"顯示名","显示名：":"顯示名：","暂停":"暫停","暂无数据":"暫無數據","更新时间：":"更新時間：","最新资讯":"最新資訊","本机是ECS云主机":"本機是ECS雲主機","机器码":"機器碼","杭州":"杭州","格式：国际区号-号码或11位手机号码，默认国际区号：86":"格式：國際區號﹣號碼或11位手機號碼，默認國際區號：86","欢迎使用OSS客户端":"歡迎使用OSS用戶端","正在加载下载列表，当前已加载了":"正在載入下載列表，目前已載入了","没有上传":"沒有上傳","没有下载":"沒有下載","没有找到最新消息!":"沒有找到最新消息！","没有数据":"沒有資料","没有文件":"沒有文件","没有日志":"沒有日誌","没有碎片":"沒有碎片","注：多个refer以换行分隔，支持通配符(*,?)":"註：多個refer以換行分隔，支持通用符號(*,?)","注：如果下载队列已加载完成,则删除已加载列表选项无效":"註：如果下載佇列已加載完成,則刪除已載入列表選項無效","深圳":"深圳","添加":"添加","添加授权":"添加授權","添加用户成功！":"添加用戶成功！","添加输入框":"增加輸入框","清空已完成":"清空已完成","清除安全密码":"清除安全密碼","点击左侧栏的":"點擊左側欄的","版本ID":"版本ID","版本信息":"版本信息","版本号不存在":"版本號不存在","版本号：":"版本號：","版本数已达最大限制":"版本數已達最大限制","状&nbsp;&nbsp;&nbsp;&nbsp;态：":"狀&nbsp;&nbsp;&nbsp;&nbsp;態：","状态":"狀態","用户AK不存在":"用戶AK不存在","用户AK已达最大限制":"用戶Ak已達最大限制","用户不存在":"用戶不存在","用户信息":"用戶信息","用户信息修改成功！":"用戶信息修改成功！","用户删除成功！":"用戶刪除成功！","用户名":"用戶名","用户名称含有不支持的字符":"用戶名稱含有不支持的字符","用户名：":"用戶名：","用户已存在":"用戶已存在","用户已经授权了该策略":"用戶已經授權了該策略","用户授权":"用戶授權","用户数量已达最大限制":"用戶數量已達最大限制","用户显示名称含有不支持的字符":"用戶顯示名稱含有不支持的字符","用户未授权该策略":"用戶為授權該策略","用户添加的授权策略已达最大限制":"用戶添加的授權策略已達最大限制","用户管理":"用戶管理	","用户组下面还有用户":"用戶組下面還有用戶","用户组不存在":"用戶組不存在","用户组删除成功！":"用戶組刪除成功！","用户组已存在":"用戶組已存在","用户组已经授权了该策略":"用戶組已經授權了該策略","用户组已达最大限制":"用戶組已達最大限制","用户组授权":"用戶組授權","用户组未授权该策略":"用戶組未授權該策略","用户组添加的授权策略已达最大限制":"用戶組添加的授權策略已達最大限制","用户组还有加入的授权":"用戶組還有加入的授權","用户还有加入的授权":"用戶還有加入的授權","用户还有加入的组":"用戶還有加入的組","登&nbsp;&nbsp;&nbsp;&nbsp;录":"登&nbsp;&nbsp;&nbsp;&nbsp;錄","登录失败，网络请求错误":"登錄失敗，網絡請求錯誤","登录阿里云控制台，在“产品与服务”中找到“访问控制”并添加，然后进入到“访问控制” -> “设置”里面开启该服务即可。":"登錄阿里雲控制台，在“產品與服務”中找到“訪問控制”并添加，然後進入到“訪問控制”﹣>“設置”裡面開啟該服務即可。","的属性":"的屬性","确定":"確定","确定要下载整个Bucket吗？":"確定要下載整個Bucket嗎？","确定要删除Bucket “{{bucketName}}“吗？删除后数据将无法恢复":"確定要刪除Bucket “{{bucketName}}“嗎？刪除後數據將無法恢復","确定要删除当前用户吗？":"確定要刪除當前用戶嗎？","确定要删除当前用户的AccessKey吗？":"確定要刪除當前用戶的AccessKey嗎?","确定要删除当前用户组吗？":"確定要刪除當前用戶組嗎？","确定要删除选择的碎片？":"確定要刪除選擇的碎片？","确定要删除？":"確定要刪除？","确定要清除安全密码？":"確定要清除安全密碼？","确定要禁用当前AccessKey吗？":"確定要禁用當前AccessKey嗎？","确定要移除该用户吗？":"確定要移除該用戶嗎？","确定要移除该用户组吗？":"確定要移除該用戶組嗎？","确认":"確認","确认设置":"確認設置","碎片管理":"碎片管理","碎片详细":"碎片詳細","禁止访问原图：":"禁止訪問原圖：","禁用":"禁用","禁用AccessKey成功！":"禁用AccessKey成功！","私有":"私有","秒":"秒","移出":"移除","移除":"移除","移除授权成功！":"移除授權成功！","移除用户成功！":"移除用戶成功！","移除用户组成功！":"移除用戶組成功！","空Refer：":"空Refer：","等待上传":"等待上傳","等待下载":"等待下載","策略":"策略","策略内容":"策略內容","策略名称":"策略名稱","策略名称：":"策略名稱：","策略描述：":"策略描述","策略类型":"策略類型","策略规则不正确":"策略規則不正確","策略规则长度超过限制":"策略規則長度超過限制","策略规则：":"策略規則：","签名错误":"簽名錯誤","管理":"管理","粘贴":"黏貼","系统":"系統","组信息":"組信息","组信息修改成功！":"組信息修改成功！","组名称":"組名稱","组名：":"組名：","终止操作":"終止操作","编号":"編號","缺少内容长度":"缺少內容長度","缺少参数":"缺少參數","网络请求错误":"網路請求錯誤","美国":"美國","自定义":"自定義","自定义属性":"自定義屬性","自定义服务器地址":"自定義服務器位址","自定义服务地址设置后只有设置了登录密码才能一直保存，否则下次登录时将自动清空。":"自定義服務位址設置後只有設置了登錄密碼才能一直保存，否則下次登錄時將自動清空。","获取":"獲取","获取Object的地址":"獲取Object的位址","获取地址":"獲取位址","规则：":"規則：","角色不存在":"角色不存在","角色信息":"角色信息","角色信息修改成功！":"角色信息修改成功！","角色删除成功！":"角色刪除成功！","角色名称":"角色名稱","角色名称含有不支持的字符":"角色名稱含有不支持的字符","角色名称：":"角色名稱：","角色已存在":"角色已存在","角色已经授权了该策略":"角色已經授權了該策略","角色授权":"角色授權","角色数已达最大限制":"角色數已達最大限制","角色未授权该策略":"角色未授權該策略","角色添加的授权策略已达最大限制":"角色添加的授權策略已達最大限制","角色还存在策略规则":"角色還存在策略規則","警告":"警告","设置":"設置","设置HTTP头":"設置HTTP頭","设置HTTP头属性":"設置HTTP頭屬性","设置一个安全密码，下次打开客户端时只需要输入这个安全密码就能使用客户端":"設置一個安全密碼，下次打開用戶端時只需輸入這個安全密碼就能使用用戶端","设置成功":"設置成功","设置的值必须是正整数":"設置的值必須是正整數","设置默认":"設置默認","设置默认成功！":"設置默認成功！","设置默认：":"設置默認：","详细":"詳細","语言设置":"語言設置","请求超时":"請求逾時","请确认":"請確認","请确认安全密码":"請確認安全密碼","请输入 Access Key ID":"請輸入 Access Key ID","请输入 Access Key Secret":"請輸入 Access Key Secret","请输入Access Key 和Access Secret确认":"請輸入Access Key 和Access Secret確認","请输入加速卡号":"請輸入加速卡號","请输入名称":"請輸入名稱","请输入大于0的整数":"請輸入大於0的整數","请输入安全密码":"請輸入安全密碼","请输入手机号":"請輸入手機號","请输入描述信息":"請輸入描述信息","请输入显示名":"請輸入顯示名","请输入服务器地址":"請輸入服務器位址","请输入用户名":"請輸入用戶名","请输入策略规则":"請輸入策略規則","请输入要授权的机器码":"請輸入要授權的機器碼","请输入要设置的refer":"請輸入要設置的refer","请输入邮箱":"請輸入郵箱","请输入链接的有效期：":"請輸入鏈接的有效期：","请选择区域":"請選擇區域","读写权限：":"讀寫權限：","购买":"購買","跳过设置":"跳過設置","输入您设置的安全密码即可快速登录管理器":"輸入您設置的安全密碼即可快速登錄管理器","返&nbsp;&nbsp;&nbsp;&nbsp;回":"返&nbsp;&nbsp;&nbsp;&nbsp;回","返回":"返回","返回列表":"返回列表","返回到 {{path}}":"返回到 {{path}}","返回授权":"返回授權","返回用户":"返回用戶","返回用户组":"返回用戶組","还未创建Bucket":"還未建立Bucket","进&nbsp;&nbsp;&nbsp;&nbsp;入":"進&nbsp;&nbsp;&nbsp;&nbsp;入","退出":"退出","选择区域":"選擇區域","选择文件并导入":"選擇文件並匯入","选择语言":"選擇語言","邮箱格式错误":"郵箱格式錯誤","邮箱：":"郵箱：","重连次数:":"重連次數","错误":"錯誤","错误日志":"錯誤日誌","错误：":"錯誤：","长度在0~1024之间的任意中文或字符":"長度在0~1024之間的任意中文或字符","长度在0~128之间的任意中文或字符":"長度在0~128之間的任意中文或字符","长度在0~128之间的任意字符":"長度在0~128之間的任意字符","限制数字范围：":"限制數字範圍：","青岛":"青島","预处理错误":"預處理錯誤","香港":"香港","默认版本":"默認版本","默认版本号不能删除":"默認版本號不能刪除","（可能是你登录时选择的区域与当前的网络环境不匹配，请退出客户端后重新选择）":"（可能是你登錄時選擇的區域與目前的網路環境不匹配，请退出用戶端後重新選擇）"})}]);